{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"section#timeline { width: 80%; margin: 20% auto; position: relative; } section#timeline::before { content: ''; display: block; position: absolute; left:50%; top: 0; margin: 0 0 0 -1px; width: 2px; height: 100%; background: rgba(255,255,255,0,2); } section#timeline article { width: 100%; margin: 0 0 20px 0; position: relative; } section#timeline article:after{ content:''; display: block; clear: both; } section#timeline article div.inner { width: 40%; float: left; margin: 5px 0 0 0; border-radius: 6px; } section#timeline article div.inner span.date{ display: block; padding: 20px 5px; position: absolute; width: 60px; height: 60px; top: 0; left: 50%; margin: 0 0 0 -20px; border-radius: 100%; font-size: 12px; font-weight: 900; background: #DCDCDC; color: black; border: 2px solid rgba(255,255,255,0,2); box-shadow: 0 0 0 7px #DCDCDC; } section#timeline article div.inner span.year span { display: block; text-align: center; } section#timeline article div.inner span.date span.year { text-align: center; font-size: 18px; color: black; } section#timeline article div.inner h2 { padding: 15px; margin: 0; color: black; font-weight: bold; font-family: sans; font-size: 20px; text-transform: uppercase; letter-spacing: -1px; border-radius: 6px 6px 0 0; position: relative; } section#timeline article div.inner h2:after { content: ''; position: absolute; top:20px; right: -5px; width:10px; height: 10px; -webkit-transform: rotate(45deg); } section#timeline article div.inner p { padding: 15px; margin: 0; font-size: 14px; background: #FFF; color: #656565; border-radius: 0 0 6px 6px; } section#timeline article:nth-child(2n+2) div.inner { float: right; } section#timeline article:nth-child(2n+2) div.inner h2:after { left: -5px; } section#timeline article:nth-child(2) div.inner h2 { background: #E74C3C; } section#timeline article:nth-child(2) div.inner h2:after { background: #E74C3C; } section#timeline article:nth-child(3) div.inner h2 { background: #2ECC71; } section#timeline article:nth-child(3) div.inner h2:after { background: #2ECC71; } section#timeline article:nth-child(4) div.inner h2 { background: #E67E22; } section#timeline article:nth-child(4) div.inner h2:after { background: #E67E22; } section#timeline article:nth-child(5) div.inner h2 { background: #1ABC9C; } section#timeline article:nth-child(5) div.inner h2:after { background: #1ABC9C; } section#timeline article:nth-child(6) div.inner h2 { background: #9B59B6; } section#timeline article:nth-child(6) div.inner h2:after { background: #9B59B6; } section#timeline article:nth-child(7) div.inner h2 { background: #FFF00F; } section#timeline article:nth-child(7) div.inner h2:after { background: #FFF00F; } Timeline 9.17 Flutter \uac1c\ubc1c \uc2dc\uc791 Flutter\ub97c \ud65c\uc6a9\ud574\uc11c Multi Platform Application \ucd9c\uc2dc \ub3c4\uc804 2022","title":"Home"},{"location":"Flutter/Packages/Hive/","text":"Hive\ub780? NoSQL\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 Flutter \ud328\ud0a4\uc9c0 How To Install(dependencies) hive hive-flutter hive-generator - dev_dependencies\uc5d0 \ub4f1\ub85d Custom Object \uc0dd\uc131 Custom Object\ub97c \uc0dd\uc131\ud574\uc904 \ub54c\ub9c8\ub2e4 Hive Type\uc744 \uc124\uc815\ud574\uc918\uc57c \ud558\uba70, \uc774\ub294 \uacc2\uce58\uba74 \uc808\ub300\ub85c \uc548\ub428. \ub610 \ub2e4\ub978 Custom Object\ub97c \uc0dd\uc131\ud560 \uacbd\uc6b0 Hive Type\uc774 \ubcc0\uacbd\ub428. Hive Type \ub9c8\ub2e4 Hive Field\ub294 0\ubc88\ubd80\ud130 \uc2dc\uc791\ud558\uba70 \uac01\uac01\uc758 Hive Type\uc5d0\uc11c Field\ub294 \uacc2\uce58\uba74 \uc548\ub428. part 'transaction_record.g.dart' ; @HiveType ( typeId: 0 ) class Users { @HiveField ( 0 ) String id ; @HiveField ( 1 ) String userName ; @HiveField ( 2 ) int age ; Users ({ required this . id , required this . userName , required this . age , }); } \uc791\uc131 \uc644\ub8cc \ud588\uc73c\uba74 flutter pub run build_runner build \uba85\ub839\uc73c\ub85c Code Generation \uc2e4\ud589. \uc0ac\uc6a9\ubc29\ubc95 void main () async { WidgetsFlutterBinding . ensureInitialized (); await Hive . initFlutter (); Hive . registerAdapter < Users > ( UsersAdapter ()); final person = await Hive . openBox < Users > ( 'users' ); // Custom Object }","title":"Hive"},{"location":"Flutter/Packages/Hive/#hive","text":"NoSQL\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 Flutter \ud328\ud0a4\uc9c0","title":"Hive\ub780?"},{"location":"Flutter/Packages/Hive/#how-to-installdependencies","text":"hive hive-flutter hive-generator - dev_dependencies\uc5d0 \ub4f1\ub85d","title":"How To Install(dependencies)"},{"location":"Flutter/Packages/Hive/#custom-object","text":"Custom Object\ub97c \uc0dd\uc131\ud574\uc904 \ub54c\ub9c8\ub2e4 Hive Type\uc744 \uc124\uc815\ud574\uc918\uc57c \ud558\uba70, \uc774\ub294 \uacc2\uce58\uba74 \uc808\ub300\ub85c \uc548\ub428. \ub610 \ub2e4\ub978 Custom Object\ub97c \uc0dd\uc131\ud560 \uacbd\uc6b0 Hive Type\uc774 \ubcc0\uacbd\ub428. Hive Type \ub9c8\ub2e4 Hive Field\ub294 0\ubc88\ubd80\ud130 \uc2dc\uc791\ud558\uba70 \uac01\uac01\uc758 Hive Type\uc5d0\uc11c Field\ub294 \uacc2\uce58\uba74 \uc548\ub428. part 'transaction_record.g.dart' ; @HiveType ( typeId: 0 ) class Users { @HiveField ( 0 ) String id ; @HiveField ( 1 ) String userName ; @HiveField ( 2 ) int age ; Users ({ required this . id , required this . userName , required this . age , }); } \uc791\uc131 \uc644\ub8cc \ud588\uc73c\uba74 flutter pub run build_runner build \uba85\ub839\uc73c\ub85c Code Generation \uc2e4\ud589.","title":"Custom Object \uc0dd\uc131"},{"location":"Flutter/Packages/Hive/#_1","text":"void main () async { WidgetsFlutterBinding . ensureInitialized (); await Hive . initFlutter (); Hive . registerAdapter < Users > ( UsersAdapter ()); final person = await Hive . openBox < Users > ( 'users' ); // Custom Object }","title":"\uc0ac\uc6a9\ubc29\ubc95"},{"location":"Flutter/Packages/drift/","text":"\ud14c\uc774\ube14 \uad6c\uc870 \uc815\uc758 \ub2e4\uc74c\uacfc \uac19\uc740 \uceec\ub7fc\uc744 \ub9cc\ub4e4\uc5b4\uc8fc\uae30 \uc704\ud574\uc11c\ub294 ID Category DataTime \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 import 'package:drift/drift.dart' ; class Schedules extends Table { // \ud568\uc218\ub97c return \ud574\uc8fc\uae30 \ub54c\ubb38\uc5d0 ()\ub97c \ud55c \ubc88 \ub354 \ubd99\uc5ec\uc918\uc57c \ud568. IntColum get id => integer ()(); TextColumn get category => text ()(); DateTimeColumn get dataTime => dateTime ()(); } \uc640 \uac19\uc774 \uc0dd\uc131\ud574\uc918\uc57c \ud568. \ud14c\uc774\ube14 Column \uc885\ub958 IntColumn DataTimeColumn TextColumn \ud14c\uc774\ube14 \uc0dd\uc131 import 'package:drift/drift.dart' ; import 'package:path/path.dart' as p ; import 'package:path_provider/path_provider.dart' ; import 'package:drift/native.dart' ; // private \uac12\ub3c4 \ubd88\ub7ec\uc62c \uc218 \uc788\uac8c \ud574\uc90c // \ud30c\uc77c \uc0dd\uc131 \ub2f9\uc2dc\uc5d0\ub294 \uc5c6\uc9c0\ub9cc Code Generation\uc744 \ud574\uc8fc\uba74 \uc0dd\uc131\ub420 \ud30c\uc77c // \ud30c\uc77c \uc774\ub984\uc740 '\ud604\uc7ac \ud30c\uc77c\uc758 \uc774\ub984.g.dart'\ub85c \uc815\ud574\uc90c part 'drift_database.g.dart' ; @DriftDatabase ( tables: [ // \uad04\ud638 \uc5c6\uc774 type \uc120\uc5b8\ud558\ub4ef\uc774 \ub123\uc5b4\uc918\uc57c \ud568 ClassName , // \uc704\uc5d0\uc11c \uad6c\uc131\ud55c \ud14c\uc774\ube14 ... ] ) // _$LocalDatabase \ud30c\uc77c\uc740 drift_database.g.dart \ud30c\uc77c\uc5d0 \uc0dd\uc131\ub420 \uac70\uc784 class LocalDatabase extends _$LocalDatabase { LocalDatabase () : super ( _openConnection ()); } // \ud558\ub4dc \ub4dc\ub77c\uc774\ube0c\uc758 \uc5b4\ub5a4 \uc704\uce58\uc5d0\ub2e4\uac00 DB\ub97c \uc800\uc7a5\ud560\uac74\uc9c0 \uba85\uc2dc\ud574\uc90c LazyDatabase _openConnection () { return LazyDatabase (() async { // os\uc5d0\uc11c app\ubcc4\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc704\uce58\ub97c \uc9c0\uc815\ud574\uc8fc\ub294\ub370 \uc774\ub97c \uac00\uc838\uc624\ub294 \uac83\uc784 final dbFolder = await getApplicationDocumentsDirectory (); // \ubb34\uc870\uac74 dart io import // join\uc740 \uacbd\ub85c\ub97c \ubd99\uc5ec\uc8fc\ub294 \uac70\uc784 (\uc704\uc5d0\uc11c \uad6c\ud55c \uacbd\ub85c + \ub0b4\uac00 \uc815\ud55c \ud30c\uc77c \uc774\ub984) final file = File ( p . join ( dbFolder . path , \"db \uc774\ub984\" )); return NativeDatabase ( file ); }); } Code Generation \uc2e4\ud589 \uc791\uc131 \uc774\ud6c4 Code Generation\uc73c\ub85c Code\ub97c \uc0dd\uc131\ud574\uc918\uc57c \ud568. flutter pub run build_runner build # (1) \uc2e4\ud589 \ud6c4\ud83d\udc47 schemaVersion \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uae30 code generationd\uc73c\ub85c \ucf54\ub4dc\ub97c \uc0dd\uc131\ud574\uc900 \ud6c4 \uc6d0\ub798\uc788\ub358 \ucf54\ub4dc\uc758 LocalDatabase\uc758 Class\uc5d0\uc11c schemaVersion\uc744 override \ud574\uc918\uc57c \ud568. \uc774\ub294 Database\uc758 \uad6c\uc870\uac00 \ubc14\ub014 \ub54c\ub9c8\ub2e4 \ubcc0\uacbd\ud574\uc918\uc57c \ub428. class LocalDatabase extends _$LocalDatabase { LocalDatabase () : super ( _openConnection ()); @override int get schemaVersion => 1 ; } DataBase \ubd88\ub7ec\uc624\uae30 \ubd88\ub7ec\uc624\ub294 \uacf3\uc758 \ud568\uc218\ub97c async \ud568\uc218\ub85c \ubcc0\ud658\ud574\uc8fc\uace0 \ubd88\ub7ec\uc640\uc57c \ud568. import 'package:\ud328\ud0a4\uc9c0\uba85/database\uc120\uc5b8 \uacbd\ub85c/\ub370\uc774\ud130 \ubca0\uc774\uc2a4 \uc774\ub984.dart' ; // ex) // import 'package:scheduler_lab/database/drift_database.dart'; void main () async { final database = LocalDatabase (); Data \uac00\uc838\uc624\uae30 get \ud568\uc218 \uc120\uc5b8 \ub9cc\uc57d\uc5d0 \ub0b4\uac00 \uc120\uc5b8\ud574\uc11c \uac00\uc838\uc624\uace0 \uc2f6\uc740 \ub370\uc774\ud130 \ubca0\uc774\uc2a4\uc758 \uc774\ub984\uc774 Content\ub77c\uba74 select() \uc548\uc5d0\ub294 select\uac00 \ub4e4\uc5b4\uac00\uace0 Generic\uc740 ContentData\uc5d0\uc11c \uac00\uc838\uc624\uac8c \ub428. class LocalDatabase extends _$LocalDatabase { LocalDatabase () : super ( _openConnection ()); Future < List < ContentData >> getAllContentsEntries () => // ex) Budget\uc774 \ud074\ub798\uc2a4 \uba85\uc774\uba74 (budget) select ( content ). get (); \ub370\uc774\ud130 \uac00\uc838\uc624\uae30 final database = LocalDatabase (); // List<Content> \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\ub428 final contents = await database . getAllContentsEntries (); Data \uc0bd\uc785(insert) \uac12\uc744 \uc0bd\uc785\ud560 \ub54c\ub294 \ub0b4\uac00 \uc815\uc758\ud588\ub358 Class\uba85\uc5d0\ub2e4\uac00 Companion\uc744 \ubd99\uc778 \ud074\ub798\uc2a4\uc5d0 \uac12\uc744 \ub123\uc5b4\uc918\uc57c \ud568. class LocalDatabase extends _$LocalDatabase { LocalDatabase () : super ( _openConnection ()); Future < int > createContent ( ContentCompanion data ) => into ( content ). insert ( data ); \ud568\uc218 \uc0ac\uc6a9\ud558\uae30 \uac12\uc744 \ub123\uc5b4\uc904 \ub54c \uac12\uc740 Value()\uc5d0 \uac10\uc2f8\uc11c \ub123\uc5b4\uc918\uc57c \ud568. database . createContent ( ContentCompanion ( \uc778\uc790 1 : Value ( \uac12 ), \uc778\uc790 1 : Value ( \uac12 ), ));","title":"Drift"},{"location":"Flutter/Packages/drift/#_1","text":"\ub2e4\uc74c\uacfc \uac19\uc740 \uceec\ub7fc\uc744 \ub9cc\ub4e4\uc5b4\uc8fc\uae30 \uc704\ud574\uc11c\ub294 ID Category DataTime \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 \ub370\uc774\ud130 import 'package:drift/drift.dart' ; class Schedules extends Table { // \ud568\uc218\ub97c return \ud574\uc8fc\uae30 \ub54c\ubb38\uc5d0 ()\ub97c \ud55c \ubc88 \ub354 \ubd99\uc5ec\uc918\uc57c \ud568. IntColum get id => integer ()(); TextColumn get category => text ()(); DateTimeColumn get dataTime => dateTime ()(); } \uc640 \uac19\uc774 \uc0dd\uc131\ud574\uc918\uc57c \ud568.","title":"\ud14c\uc774\ube14 \uad6c\uc870 \uc815\uc758"},{"location":"Flutter/Packages/drift/#column","text":"IntColumn DataTimeColumn TextColumn","title":"\ud14c\uc774\ube14 Column \uc885\ub958"},{"location":"Flutter/Packages/drift/#_2","text":"import 'package:drift/drift.dart' ; import 'package:path/path.dart' as p ; import 'package:path_provider/path_provider.dart' ; import 'package:drift/native.dart' ; // private \uac12\ub3c4 \ubd88\ub7ec\uc62c \uc218 \uc788\uac8c \ud574\uc90c // \ud30c\uc77c \uc0dd\uc131 \ub2f9\uc2dc\uc5d0\ub294 \uc5c6\uc9c0\ub9cc Code Generation\uc744 \ud574\uc8fc\uba74 \uc0dd\uc131\ub420 \ud30c\uc77c // \ud30c\uc77c \uc774\ub984\uc740 '\ud604\uc7ac \ud30c\uc77c\uc758 \uc774\ub984.g.dart'\ub85c \uc815\ud574\uc90c part 'drift_database.g.dart' ; @DriftDatabase ( tables: [ // \uad04\ud638 \uc5c6\uc774 type \uc120\uc5b8\ud558\ub4ef\uc774 \ub123\uc5b4\uc918\uc57c \ud568 ClassName , // \uc704\uc5d0\uc11c \uad6c\uc131\ud55c \ud14c\uc774\ube14 ... ] ) // _$LocalDatabase \ud30c\uc77c\uc740 drift_database.g.dart \ud30c\uc77c\uc5d0 \uc0dd\uc131\ub420 \uac70\uc784 class LocalDatabase extends _$LocalDatabase { LocalDatabase () : super ( _openConnection ()); } // \ud558\ub4dc \ub4dc\ub77c\uc774\ube0c\uc758 \uc5b4\ub5a4 \uc704\uce58\uc5d0\ub2e4\uac00 DB\ub97c \uc800\uc7a5\ud560\uac74\uc9c0 \uba85\uc2dc\ud574\uc90c LazyDatabase _openConnection () { return LazyDatabase (() async { // os\uc5d0\uc11c app\ubcc4\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc704\uce58\ub97c \uc9c0\uc815\ud574\uc8fc\ub294\ub370 \uc774\ub97c \uac00\uc838\uc624\ub294 \uac83\uc784 final dbFolder = await getApplicationDocumentsDirectory (); // \ubb34\uc870\uac74 dart io import // join\uc740 \uacbd\ub85c\ub97c \ubd99\uc5ec\uc8fc\ub294 \uac70\uc784 (\uc704\uc5d0\uc11c \uad6c\ud55c \uacbd\ub85c + \ub0b4\uac00 \uc815\ud55c \ud30c\uc77c \uc774\ub984) final file = File ( p . join ( dbFolder . path , \"db \uc774\ub984\" )); return NativeDatabase ( file ); }); }","title":"\ud14c\uc774\ube14 \uc0dd\uc131"},{"location":"Flutter/Packages/drift/#code-generation","text":"\uc791\uc131 \uc774\ud6c4 Code Generation\uc73c\ub85c Code\ub97c \uc0dd\uc131\ud574\uc918\uc57c \ud568. flutter pub run build_runner build # (1) \uc2e4\ud589 \ud6c4\ud83d\udc47","title":"Code Generation \uc2e4\ud589"},{"location":"Flutter/Packages/drift/#schemaversion","text":"code generationd\uc73c\ub85c \ucf54\ub4dc\ub97c \uc0dd\uc131\ud574\uc900 \ud6c4 \uc6d0\ub798\uc788\ub358 \ucf54\ub4dc\uc758 LocalDatabase\uc758 Class\uc5d0\uc11c schemaVersion\uc744 override \ud574\uc918\uc57c \ud568. \uc774\ub294 Database\uc758 \uad6c\uc870\uac00 \ubc14\ub014 \ub54c\ub9c8\ub2e4 \ubcc0\uacbd\ud574\uc918\uc57c \ub428. class LocalDatabase extends _$LocalDatabase { LocalDatabase () : super ( _openConnection ()); @override int get schemaVersion => 1 ; }","title":"schemaVersion \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uae30"},{"location":"Flutter/Packages/drift/#database","text":"\ubd88\ub7ec\uc624\ub294 \uacf3\uc758 \ud568\uc218\ub97c async \ud568\uc218\ub85c \ubcc0\ud658\ud574\uc8fc\uace0 \ubd88\ub7ec\uc640\uc57c \ud568. import 'package:\ud328\ud0a4\uc9c0\uba85/database\uc120\uc5b8 \uacbd\ub85c/\ub370\uc774\ud130 \ubca0\uc774\uc2a4 \uc774\ub984.dart' ; // ex) // import 'package:scheduler_lab/database/drift_database.dart'; void main () async { final database = LocalDatabase ();","title":"DataBase \ubd88\ub7ec\uc624\uae30"},{"location":"Flutter/Packages/drift/#data","text":"","title":"Data \uac00\uc838\uc624\uae30"},{"location":"Flutter/Packages/drift/#get","text":"\ub9cc\uc57d\uc5d0 \ub0b4\uac00 \uc120\uc5b8\ud574\uc11c \uac00\uc838\uc624\uace0 \uc2f6\uc740 \ub370\uc774\ud130 \ubca0\uc774\uc2a4\uc758 \uc774\ub984\uc774 Content\ub77c\uba74 select() \uc548\uc5d0\ub294 select\uac00 \ub4e4\uc5b4\uac00\uace0 Generic\uc740 ContentData\uc5d0\uc11c \uac00\uc838\uc624\uac8c \ub428. class LocalDatabase extends _$LocalDatabase { LocalDatabase () : super ( _openConnection ()); Future < List < ContentData >> getAllContentsEntries () => // ex) Budget\uc774 \ud074\ub798\uc2a4 \uba85\uc774\uba74 (budget) select ( content ). get ();","title":"get \ud568\uc218 \uc120\uc5b8"},{"location":"Flutter/Packages/drift/#_3","text":"final database = LocalDatabase (); // List<Content> \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\ub428 final contents = await database . getAllContentsEntries ();","title":"\ub370\uc774\ud130 \uac00\uc838\uc624\uae30"},{"location":"Flutter/Packages/drift/#data-insert","text":"\uac12\uc744 \uc0bd\uc785\ud560 \ub54c\ub294 \ub0b4\uac00 \uc815\uc758\ud588\ub358 Class\uba85\uc5d0\ub2e4\uac00 Companion\uc744 \ubd99\uc778 \ud074\ub798\uc2a4\uc5d0 \uac12\uc744 \ub123\uc5b4\uc918\uc57c \ud568. class LocalDatabase extends _$LocalDatabase { LocalDatabase () : super ( _openConnection ()); Future < int > createContent ( ContentCompanion data ) => into ( content ). insert ( data );","title":"Data \uc0bd\uc785(insert)"},{"location":"Flutter/Packages/drift/#_4","text":"\uac12\uc744 \ub123\uc5b4\uc904 \ub54c \uac12\uc740 Value()\uc5d0 \uac10\uc2f8\uc11c \ub123\uc5b4\uc918\uc57c \ud568. database . createContent ( ContentCompanion ( \uc778\uc790 1 : Value ( \uac12 ), \uc778\uc790 1 : Value ( \uac12 ), ));","title":"\ud568\uc218 \uc0ac\uc6a9\ud558\uae30"},{"location":"Flutter/Packages/easy_localization/","text":"\ubc88\uc5ed \ud30c\uc77c \ubc88\uc5ed \ud30c\uc77c\uc740 assets/translations\uc5d0 \ub123\uc74c. en-US, ko-KR\uacfc \uac19\uc740 \ud615\uc2dd\uc73c\ub85c \ub123\uc74c. \"A\" : { \"B\" : \"C\" } \ub77c\uace0 \uc120\uc5b8 \ud588\uc744 \ub54c, C\ub97c \ucd9c\ub825\ud558\ub824\uba74 \"A.B\".tr()\ub85c \ud638\ucd9c. {}\ub97c \ub123\uc5b4\uc11c \uc120\uc5b8\ud574\uc8fc\uba74 \ud574\ub2f9 {}\uc5d0 args \uc778\uc790\ub97c \ud1b5\ud574 \uac12 \ub123\uc5b4\uc904 \uc218 \uc787\uc74c. en-US \ud30c\uc77c ko-KR \ud30c\uc77c { \"Apple\" : \"apple\" , \"needs\" : \"I need {}\" , \"example\" : { \"hello\" : \"Hello\" , \"world\" : \"World!\" , \"helloWorld\" : \"@:example.hello @:example.world\" } } { \"Apple\" : \"\uc0ac\uacfc\" , \"needs\" : \"\ub098\ub294 {}\uc774 \ud544\uc694\ud558\ub2e4\" , \"example\" : { \"hello\" : \"\uc548\ub155\" , \"world\" : \" \uc138\uc0c1\uc544!\" , \"helloWorld\" : \"@:example.hello @:example.world\" } } \uc0ac\uc6a9\ubc95 \uc120\uc5b8 main : Easy Localization Setting final supportedLocales = [ const Locale ( 'en' , 'US' ), const Locale ( 'ko' , 'KR' ), ]; void main () async { WidgetsFlutterBinding . ensureInitialized (); // easy localization \ucd08\uae30\ud654 await EasyLocalization . ensureInitialized (); runApp ( EasyLocalization ( supportedLocales: supportedLocales , path: 'assets/translations' , // \ud30c\uc77c \uc704\uce58 fallbackLocale: const Locale ( 'en' , 'US' ), // \uae30\ubcf8 locale child: const MyApp ()), ); } Material App Setting class MyApp extends StatelessWidget { const MyApp ({ super . key }); @override Widget build ( BuildContext context ) { return MaterialApp ( supportedLocales: context . supportedLocales , locale: context . locale , // \ud604\uc7ac \uae30\uae30 \ub85c\ucf00\uc77c localizationsDelegates: context . localizationDelegates , home: const HomeScreen (), ); } } HomeScreen() HomeScreen() class HomeScreen extends StatelessWidget { const HomeScreen ({ super . key }); @override Widget build ( BuildContext context ) { // (1) \uc2e4\ud589\uacb0\uacfc return Scaffold ( body: Column ( mainAxisAlignment: MainAxisAlignment . center , crossAxisAlignment: CrossAxisAlignment . stretch , children: [ Text ( 'Apple' . tr (), textAlign: TextAlign . center , ), Text ( 'example.world' . tr (), textAlign: TextAlign . center , ), Text ( // \"A\" : { \"B\" : \"C\" } C\ub97c \ucd9c\ub825\ud558\ub824\uba74 \"A.B\".tr()\ub85c \ud638\ucd9c 'example.helloWorld' . tr (), textAlign: TextAlign . center , ), Text ( // {}\ub97c \ub123\uc5b4\uc11c \uc120\uc5b8\ud574\uc8fc\uba74 \ud574\ub2f9 {}\uc5d0 args \uc778\uc790\ub97c \ud1b5\ud574 \uac12 \ub123\uc5b4\uc904 \uc218 \uc787\uc74c 'needs' . tr ( args: [ '\uc813\uac00\ub77d' ]), textAlign: TextAlign . center , ), ], ), ); } }","title":"Easy Localization"},{"location":"Flutter/Packages/easy_localization/#_1","text":"\ubc88\uc5ed \ud30c\uc77c\uc740 assets/translations\uc5d0 \ub123\uc74c. en-US, ko-KR\uacfc \uac19\uc740 \ud615\uc2dd\uc73c\ub85c \ub123\uc74c. \"A\" : { \"B\" : \"C\" } \ub77c\uace0 \uc120\uc5b8 \ud588\uc744 \ub54c, C\ub97c \ucd9c\ub825\ud558\ub824\uba74 \"A.B\".tr()\ub85c \ud638\ucd9c. {}\ub97c \ub123\uc5b4\uc11c \uc120\uc5b8\ud574\uc8fc\uba74 \ud574\ub2f9 {}\uc5d0 args \uc778\uc790\ub97c \ud1b5\ud574 \uac12 \ub123\uc5b4\uc904 \uc218 \uc787\uc74c. en-US \ud30c\uc77c ko-KR \ud30c\uc77c { \"Apple\" : \"apple\" , \"needs\" : \"I need {}\" , \"example\" : { \"hello\" : \"Hello\" , \"world\" : \"World!\" , \"helloWorld\" : \"@:example.hello @:example.world\" } } { \"Apple\" : \"\uc0ac\uacfc\" , \"needs\" : \"\ub098\ub294 {}\uc774 \ud544\uc694\ud558\ub2e4\" , \"example\" : { \"hello\" : \"\uc548\ub155\" , \"world\" : \" \uc138\uc0c1\uc544!\" , \"helloWorld\" : \"@:example.hello @:example.world\" } }","title":"\ubc88\uc5ed \ud30c\uc77c"},{"location":"Flutter/Packages/easy_localization/#_2","text":"","title":"\uc0ac\uc6a9\ubc95"},{"location":"Flutter/Packages/easy_localization/#_3","text":"main : Easy Localization Setting final supportedLocales = [ const Locale ( 'en' , 'US' ), const Locale ( 'ko' , 'KR' ), ]; void main () async { WidgetsFlutterBinding . ensureInitialized (); // easy localization \ucd08\uae30\ud654 await EasyLocalization . ensureInitialized (); runApp ( EasyLocalization ( supportedLocales: supportedLocales , path: 'assets/translations' , // \ud30c\uc77c \uc704\uce58 fallbackLocale: const Locale ( 'en' , 'US' ), // \uae30\ubcf8 locale child: const MyApp ()), ); } Material App Setting class MyApp extends StatelessWidget { const MyApp ({ super . key }); @override Widget build ( BuildContext context ) { return MaterialApp ( supportedLocales: context . supportedLocales , locale: context . locale , // \ud604\uc7ac \uae30\uae30 \ub85c\ucf00\uc77c localizationsDelegates: context . localizationDelegates , home: const HomeScreen (), ); } }","title":"\uc120\uc5b8"},{"location":"Flutter/Packages/easy_localization/#homescreen","text":"HomeScreen() class HomeScreen extends StatelessWidget { const HomeScreen ({ super . key }); @override Widget build ( BuildContext context ) { // (1) \uc2e4\ud589\uacb0\uacfc return Scaffold ( body: Column ( mainAxisAlignment: MainAxisAlignment . center , crossAxisAlignment: CrossAxisAlignment . stretch , children: [ Text ( 'Apple' . tr (), textAlign: TextAlign . center , ), Text ( 'example.world' . tr (), textAlign: TextAlign . center , ), Text ( // \"A\" : { \"B\" : \"C\" } C\ub97c \ucd9c\ub825\ud558\ub824\uba74 \"A.B\".tr()\ub85c \ud638\ucd9c 'example.helloWorld' . tr (), textAlign: TextAlign . center , ), Text ( // {}\ub97c \ub123\uc5b4\uc11c \uc120\uc5b8\ud574\uc8fc\uba74 \ud574\ub2f9 {}\uc5d0 args \uc778\uc790\ub97c \ud1b5\ud574 \uac12 \ub123\uc5b4\uc904 \uc218 \uc787\uc74c 'needs' . tr ( args: [ '\uc813\uac00\ub77d' ]), textAlign: TextAlign . center , ), ], ), ); } }","title":"HomeScreen()"},{"location":"Flutter/Packages/google_maps/","text":"Google Maps \uc124\uc815 - iOS Error AppDelegate.swift import UIKit import Flutter import GoogleMaps // \uc774\uac70 \uc548\ud574\uc8fc\uba74 \uc624\ub958\ub0a8 @UIApplicationMain @objc class AppDelegate : FlutterAppDelegate { override func application ( _ application : UIApplication , didFinishLaunchingWithOptions launchOptions : [ UIApplication . LaunchOptionsKey : Any ]? ) -> Bool { GMSServices . provideAPIKey ( \"Google Maps API Key\" ) // add here GeneratedPluginRegistrant . register ( with : self ) return super . application ( application , didFinishLaunchingWithOptions : launchOptions ) } } GeoLocation Setting iOS \uc704\uce58 \uad8c\ud55c, \ubc31\uadf8\ub77c\uc6b4\ub4dc \uc704\uce58 \uad8c\ud55c \uc124\uc815. ios/Runner/info.plist < key > NSLocationWhenInUseUsageDescription </ key > < string > This app needs access to location when open . </ string > < key > NSLocationAlwaysUsageDescription </ key > < string > This app needs access to location when in the background . </ string >","title":"Google Maps / GeoLocator"},{"location":"Flutter/Packages/google_maps/#google-maps","text":"","title":"Google Maps"},{"location":"Flutter/Packages/google_maps/#-ios-error","text":"AppDelegate.swift import UIKit import Flutter import GoogleMaps // \uc774\uac70 \uc548\ud574\uc8fc\uba74 \uc624\ub958\ub0a8 @UIApplicationMain @objc class AppDelegate : FlutterAppDelegate { override func application ( _ application : UIApplication , didFinishLaunchingWithOptions launchOptions : [ UIApplication . LaunchOptionsKey : Any ]? ) -> Bool { GMSServices . provideAPIKey ( \"Google Maps API Key\" ) // add here GeneratedPluginRegistrant . register ( with : self ) return super . application ( application , didFinishLaunchingWithOptions : launchOptions ) } }","title":"\uc124\uc815 - iOS Error"},{"location":"Flutter/Packages/google_maps/#geolocation","text":"","title":"GeoLocation"},{"location":"Flutter/Packages/google_maps/#setting","text":"","title":"Setting"},{"location":"Flutter/Packages/google_maps/#ios","text":"\uc704\uce58 \uad8c\ud55c, \ubc31\uadf8\ub77c\uc6b4\ub4dc \uc704\uce58 \uad8c\ud55c \uc124\uc815. ios/Runner/info.plist < key > NSLocationWhenInUseUsageDescription </ key > < string > This app needs access to location when open . </ string > < key > NSLocationAlwaysUsageDescription </ key > < string > This app needs access to location when in the background . </ string >","title":"iOS"},{"location":"Flutter/Packages/riverpod/","text":"How To Install \uc124\uce58\ud560 \ub54c \uc704\uc5d0 \uc788\ub294\uac74 riverpod native \uc774\ubbc0\ub85c \ubc11\uc5d0 \uc788\ub294 riverpod flutter\ub97c \uc124\uce58\ud574\uc918\uc57c \ud568. Provier\uc758 \uc885\ub958 \uac01\uac01 \ub2e4\ub978 \ud0c0\uc785\uc744 \ubc18\ud658\ud574\uc8fc\uace0 \uc0ac\uc6a9 \ubaa9\uc801\uc774 \ub2e4\ub984, \ubaa8\ub4e0 Provider\ub294 \uae00\ub85c\ubc8c\ud558\uac8c \uc120\uc5b8\ub428. Provider \uac00\uc7a5 \uae30\ubcf8 \ubca0\uc774\uc2a4\uac00 \ub418\ub294 Provider \uc544\ubb34 \ud0c0\uc785\uc774\ub098 \ubc18\ud658 \uac00\ub2a5 Service, \uacc4\uc0b0\ud55c \uac12\ub4f1\uc744 \ubc18\ud658\ud560 \ub54c \uc0ac\uc6a9 \ubc18\ud658\uac12\uc744 \uce90\uc2f1\ud560 \ub54c \uc720\uc6a9\ud558\uac8c \uc0ac\uc6a9 (\ube4c\ub4dc \ud69f\uc218 \ucd5c\uc18c\ud654 \uac00\ub2a5) \uc5ec\ub7ec Provider\uc758 \uac12\ub4e4\uc744 \ubb36\uc5b4\uc11c \ud55c \ubc88\uc5d0 \ubc18\ud658 \uac12\uc744 \ub9cc\ub4e4\uc5b4\ub0bc \uc218 \uc788\uc74c Provider \uc885\ub958 \ubc18\ud658 \uac12 \uc0ac\uc6a9 \uc608\uc81c Provider \uc544\ubb34 \ud0c0\uc785 \ub370\uc774\ud130 \uce90\uc2f1 StateProvider \uc544\ubb34 \ud0c0\uc785 \uac04\ub2e8\ud55c \uc0c1\ud0dc\uac12 \uad00\ub9ac StateNotifierProvider StateNotifier\ub97c \uc0c1\uc18d\ud55c \uac12 \ubc18\ud658 \ubcf5\uc7a1\ud55c \uc0c1\ud0dc\uac12 \uad00\ub9ac FutureProvider Future \ud0c0\uc785 API \uc694\uccad\uc758 Future \uacb0\uacfc\uac12 StreamProvider Stream \ud0c0\uc785 API \uc694\uccad\uc758 Stream \uacb0\uacfc\uac12 StateProivder UI\uc5d0\uc11c \"\uc9c1\uc811\uc801\uc73c\ub85c\" \ub370\uc774\ud130\ub97c \ubcc0\uacbd\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uace0 \uc2f6\uc744 \ub54c \uc0ac\uc6a9 \ub2e8\uc21c\ud55c \ud615\ud0dc\uc758 \ub370\uc774\ud130\ub9cc \uad00\ub9ac (int, double, String \ub4f1) Map, List \ub4f1 \ubcf5\uc7a1\ud55c \ud615\ud0dc\uc758 \ub370\uc774\ud130\ub294 \ub2e4\ub8e8\uc9c0 \uc54a\uc74c \ubcf5\uc7a1\ud55c \ub85c\uc9c1\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc74c (number++ \uc815\ub3c4\uc758 \uac04\ub2e8\ud55c \ub85c\uc9c1\uc73c\ub85c\ub9cc \ud55c\uc815) final numberProvider = StateProvider < int > (( ref ) => 0 ); \uc0ac\uc6a9 \ubc29\ubc95 \uc608\uc81c \ucf54\ub4dc import 'package:flutter/material.dart' ; import 'package:flutter_riverpod/flutter_riverpod.dart' ; import 'package:riverpod_sample/layout/default_layout.dart' ; import 'package:riverpod_sample/riverpod/state_provider.dart' ; class StateRiverpodScreen extends ConsumerWidget { const StateRiverpodScreen ({ Key ? key }) : super ( key: key ); @override Widget build ( BuildContext context , WidgetRef ref ) { // watch, read, listen\ub9cc \uc500 final provider = ref . watch ( numberProvider ); return DefaultLayout ( title: 'State Riverpod Screen' , body: SizedBox ( width: MediaQuery . of ( context ). size . width , child: Column ( mainAxisAlignment: MainAxisAlignment . center , children: [ Text ( provider . toString (), ), ElevatedButton ( onPressed: () { ref . read ( numberProvider . notifier ). update (( state ) => state + 1 ); }, child: Text ( 'Up' )), ElevatedButton ( onPressed: () { ref . read ( numberProvider . notifier ). state = ref . read ( numberProvider . notifier ). state - 1 ; }, child: Text ( 'Down' )), ElevatedButton ( onPressed: () { Navigator . of ( context ). push ( MaterialPageRoute ( builder: ( context ) => _NextScreen ())); }, child: Text ( 'Push' )) ], ), ), ); } } class _NextScreen extends ConsumerWidget { const _NextScreen ({ super . key }); @override Widget build ( BuildContext context , WidgetRef ref ) { final provider = ref . watch ( numberProvider ); return DefaultLayout ( title: 'Next Screen' , body: SizedBox ( width: MediaQuery . of ( context ). size . width , child: Column ( mainAxisAlignment: MainAxisAlignment . center , children: [ Text ( provider . toString (), ), ElevatedButton ( onPressed: () { ref . read ( numberProvider . notifier ). update (( state ) => state + 1 ); }, child: Text ( 'Up' )) ], ), ), ); } } StateNotifierProvider \ucc38\uc870 - StateProvider\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c UI\uc5d0\uc11c \uc9c1\uc811\uc801\uc73c\ub85c \ub370\uc774\ud130\ub97c \ubcc0\uacbd\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uace0 \uc2f6\uc744 \ub54c \uc0ac\uc6a9 - \ubcf5\uc7a1\ud55c \ud615\ud0dc\uc758 \ub370\uc774\ud130 \uad00\ub9ac \uac00\ub2a5 (\ud074\ub798\uc2a4\uc758 \uba54\uc18c\ub4dc\ub97c \uc774\uc6a9\ud55c \uc0c1\ud0dc \uad00\ub9ac) - StateNotifier\ub97c \uc0c1\uc18d\ud55c **\ud074\ub798\uc2a4\ub97c \ubc18\ud658** class \ud615\ud0dc\ub85c \uc120\uc5b8\ud574\uc11c \uc0ac\uc6a9 \ud568 model \uc120\uc5b8 class ShoppingItemModel { final String name ; // \uc774\ub984 final int quantity ; // \uac2f\uc218 final bool hasBought ; // \uad6c\ub9e4 \ud588\ub294\uc9c0 final bool isSpicy ; // \ub9e4\uc6b4\uc9c0; ShoppingItemModel ( { required this . name , required this . quantity , required this . hasBought , required this . isSpicy }); } StateNotifier \uc0c1\uc18d\ubc1b\uc740 class \uc120\uc5b8 class ShoppingListNotifier extends StateNotifier < List < ShoppingItemModel >> { ShoppingListNotifier () : super ([ // ShoppingListProvider \ucd08\uae30\ud654 // ShoppingListProvider \uc120\uc5b8\uc2dc \ud574\ub2f9\ud558\ub294 \uac12\ub4e4\uc744 \ucc98\uc74c\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc787\uc74c ShoppingItemModel ( name: '\uae40\uce58' , quantity: 3 , hasBought: false , isSpicy: true ), ShoppingItemModel ( name: '\ub77c\uba74' , quantity: 5 , hasBought: false , isSpicy: true ), ShoppingItemModel ( name: '\uc0bc\uacb9\uc0b4' , quantity: 10 , hasBought: false , isSpicy: false ), ShoppingItemModel ( name: '\uc218\ubc15' , quantity: 2 , hasBought: false , isSpicy: false ), ShoppingItemModel ( name: '\uce74\uc2a4\ud14c\ub77c' , quantity: 7 , hasBought: false , isSpicy: false ), ]); void toggleHasBought ({ required String name , }) { // state\ub294 StateNotifier\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc81c\uacf5\ub428 state = state . map (( e ) => e . name == name ? ShoppingItemModel ( name: e . name , quantity: e . quantity , hasBought: ! e . hasBought , isSpicy: e . isSpicy ) : e ) . toList (); } } Provider\ub85c \ub9cc\ub4e4\uc5b4 \uc8fc\uae30 // Generic\uc5d0\ub294 \uc5b4\ub5a4 StateNotifier\ub97c \uc0c1\uc18d\ud55c \ud074\ub798\uc2a4\ub97c \uc4f8\uac74\uc9c0\ub123\uc5b4\uc8fc\uace0 \ud574\ub2f9 Class\uac00 \uad00\ub9ac\ud558\ub294 \uc0c1\ud0dc\uc758 type\uc744 \ub450 \ubc88\uc9f8 Generic\uc73c\ub85c \ub123\uc5b4\uc90c final shoppingListNotifier = StateNotifierProvider < ShoppingListNotifier , List < ShoppingItemModel >> (( ref ) => ShoppingListNotifier ()); \uc0ac\uc6a9\ubc29\ubc95 stateless \uc704\uc82f\uc774 \uc0c1\uc18d\ubc1b\uace0 \uc788\ub294 \uc704\uc82f\uc744 ConsumerWidget\uc73c\ub85c \ubcc0\uacbd\ud574\uc8fc\uace0 BuildContext \uc606\uc5d0 WidgetRef \ucd94\uac00\ud574\uc918\uc57c \ud568. class Test extends ConsumerWidget { // \uc5ec\uae30 \ubcc0\uacbd const Test ({ super . key }); @override Widget build ( BuildContext context , WidgetRef ref ) { // \uc5ec\uae30 \ubcc0\uacbd return Container (); } } \uc0ac\uc6a9 \ubc29\ubc95\uc740 stateProvider\ub791 \ud06c\uac8c \ub2e4\ub97c\ubc14\ub294 \uc5c6\uc74c. // \ucc38\uc870\ud558\uae30 final List < ShoppingItemModel > state = ref . watch ( shoppingListNotifier ); // StateNotifier \uc548\uc5d0 \uc788\ub294 \ud568\uc218 \uc0ac\uc6a9 ex) onPressed \ud568\uc218 \uc548\uc5d0 \uc0ac\uc6a9 ref . read ( shoppingListNotifier . notifier ). toggleHasBought ( name: e . name ); FutureProvider Future \ud0c0\uc785\ub9cc \ubc18\ud658\uac00\ub2a5 API \uc694\uccad\uc758 \uacb0\uacfc\ub97c \ubc18\ud658\ud560 \ub54c \uc790\uc8fc \uc0ac\uc6a9 \ubcf5\uc7a1\ud55c \ub85c\uc9c1 \ub610\ub294 \uc0ac\uc6a9\uc790\uc758 \ud2b9\uc815 \ud589\ub3d9\ub4a4\uc5d0 Future\ub97c \uc7ac\uc2e4\ud589\ud558\ub294 \uae30\ub2a5\uc774 \uc5c6\uc74c \uc0ac\uc6a9 \ubc29\ubc95 \uc120\uc5b8 : final multipleFutureProvider = FutureProvider (( ref ) async { await Future . delayed ( Duration ( seconds: 2 )); //throw Exception('Error \uc785\ub2c8\ub2e4.'); return [ 1 , 2 , 3 , 4 , 5 ]; }); \uc0ac\uc6a9 : Provider\ub97c \ubd88\ub7ec\uc624\uace0 .when\uc744 \ud1b5\ud574\uc11c \uc0ac\uc6a9\ud574\uc8fc\ub294\uac8c \ud2b9\uc774\ud55c\ub370 \uc774\ub294 StreamProvider\uc5d0\uc11c\ub3c4 \ub611\uac19\uc74c. class FutureProviderScreen extends ConsumerWidget { const FutureProviderScreen ({ super . key }); // (1) @override Widget build ( BuildContext context , WidgetRef ref ) { final state = ref . watch ( multipleFutureProvider ); return DefaultLayout ( title: 'FutureProviderScreen' , body: Column ( mainAxisAlignment: MainAxisAlignment . center , crossAxisAlignment: CrossAxisAlignment . stretch , children: [ // date - \ub85c\ub529\uc774 \ub05d\ub098\uc11c \ub370\uc774\ud130\uac00 \uc788\uc744 \ub54c / error - \uc5d0\ub7ec\uac00 \uc788\uc744 \ub54c / loading - \ub85c\ub529 \uc911\uc77c \ub54c \uc2e4\ud589 state . when ( data: ( date ) { return Text ( date . toString (), textAlign: TextAlign . center , ); }, error: ( err , Stack ) => Text ( err . toString ()), loading: (() => const Center ( child: CircularProgressIndicator ()))) ], ) ); } } StreamProvider Stream \ud0c0\uc785\ub9cc \ubc18\ud658\uac00\ub2a5 API \uc694\uccad\uc758 \uacb0\uacfc\ub97c Stream\uc73c\ub85c \ubc18\ud658\ud560 \ub54c \uc790\uc8fc \uc0ac\uc6a9 (Socker \ub4f1) \uc120\uc5b8 final multipleStreamProvider = StreamProvider < List < int >> (( ref ) async * { for ( int i = 0 ; i < 10 ; i ++ ) { await Future . delayed ( Duration ( seconds: 2 )); yield List . generate ( 3 , ( index ) => index * i ); } }); \uc0ac\uc6a9\ubc29\ubc95 class StreamProviderScreen extends ConsumerWidget { const StreamProviderScreen ({ super . key }); @override Widget build ( BuildContext context , WidgetRef ref ) { final state = ref . watch ( multipleStreamProvider ); // (1) return DefaultLayout ( title: 'Stream Provier Screen' , body: Center ( child: state . when ( data: ( data ) { return Text ( data . toString ()); }, error: ( err , Stack ) { return Text ( err . toString ()); }, loading: (() => CircularProgressIndicator ()), )), ); } } Family: \uc778\uc790\uac12 \uc785\ub825\ubc1b\uae30 \uc120\uc5b8\ud558\ub294 Provider \ub4a4\uc5d0 fmaily \uc635\uc158\uc744 \ubd99\uc5ec\uc11c \uc0ac\uc6a9 \ud55c\ub2e4. \uc774 \ub54c Generic\uc744 \uc6d0\ub798 \uc120\uc5b8\ud558\ub358 return type \uc678\uc5d0 \uc785\ub825 \ubc1b\uc744 \uc778\uc790\uac12\uc758 type\ub3c4 \ud568\uaed8 \uc120\uc5b8\ud568. \uc120\uc5b8 final familyModifierProvider = FutureProvider . family < List < int > , int > ( ( ref , data ) async { // data\ub294 \uc778\uc790\uac12 await Future . delayed ( Duration ( seconds: 1 )); return List . generate ( 5 , ( index ) => data * index ). toList (); }, ); \uc6d0\ub798\ub294 watch / read(\ud504\ub85c\ubc14\uc774\ub354\uc774\ub984) \uacfc \uac19\uc740 \ubc29\ubc95\uc73c\ub85c \uc120\uc5b8\uc744 \ud588\ub2e4\uba74 familyModifier\ub294 watch / read(\ud504\ub85c\ubc14\uc774\ub354\uc774\ub984(\uc778\uc790\uac12)) \uacfc \uac19\uc740 \ud615\ud0dc\ub85c \uc0ac\uc6a9\ud568. \uc0ac\uc6a9\ubc29\ubc95 final state = ref . watch ( familyModifierProvider ( 5 )); .autodispose : \uce90\uc2dc \uc0ad\uc81c provider\ub294 \ucd5c\ucd08 \uc2e4\ud589\ub418\uace0 \ub098\uba74 \uc2e4\ud589\ub41c \uac12\uc744 \uac00\uc9c0\uace0 \uc788\ub294\ub370 autodispose\ub294 \uba54\ubaa8\ub9ac\uc5d0\uc11c \uc2e4\ud589 \uacb0\uacfc\ub97c \uc790\ub3d9\uc73c\ub85c dispose \ud574\uc918\uc11c \uc2e4\ud589\ud560 \ub54c\ub9c8\ub2e4 \ub9e4\ubc88 \uc2e4\ud589\ub418\uac8c \ud574\uc8fc\ub294 \ubc29\ubc95\uc784. \uc0ac\uc6a9\ubc29\ubc95\uc740 \ub2e4\ub978 provider\uc640 \uac19\uc74c. \uc120\uc5b8 final autoDisposeModifierProvider = FutureProvider . autoDispose < List < int >> (( ref ) async { // (1) await Future . delayed ( Duration ( seconds: 1 )); return [ 1 , 2 , 3 , 4 , 5 ]; }, ); \uc77c\ubc18 FutureProvider\uc640 autodispose \uc635\uc158\uc744 \uc900 \uacbd\uc6b0\uc758 \ube44\uad50 \uc77c\ubc18 Future Provieder \ud83d\udc47 autodispose \ud55c Future Provider ChangeNotifierProvider Provider \ud328\ud0a4\uc9c0\uc5d0\uc11c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc6a9\ub3c4 Provider \uc0ac\uc6a9\ubc29\ubc95 \ubc29\ubc95 1. update \uc0ac\uc6a9 ref . read ([ specificProvider ]. notifier ). update (( state ) => state + 1 ); \ubc29\ubc95 2. state \uac12 \uc9c1\uc811 \uac00\uc838\uc640\uc11c \ubcc0\uacbd ref . read ([ specificProvider ]. notifier ). state = ref . read ([ specificProvider ]. notifier ). state - 1 ; .listen Listen Provider\ub294 \uc120\uc5b8\uc2dc\uc5d0 \ubb54\uac00\ub97c \ud574\uc8fc\ub294\uac8c \uc544\ub2c8\ub77c \uac12\uc744 \ubc1b\uc744 \ub54c .listen\uc744 \ubd99\uc774\ub294\ub370 \ub0b4\uac00 \uc774\ud574\ud55c \ubc14\ub85c\ub294 \ud504\ub85c\ubc14\uc774\ub354\uac00 \uc5b4\ub5a0\ud55c \ub3d9\uc791\uc774 \uc788\uc744 \ub54c \ub2e4\uc74c\uc5d0 \ub098\uc62c \uac12\uc744 next\uc5d0 \ub123\uc5b4\uc8fc\uace0 \ud604\uc7ac\uc758 \uac12\uc744 previous\uc5d0 \ub123\uc5b4\uc8fc\ub294 \ud615\uc2dd\uc784. final listenProvider = StateProvider < int > (( ref ) => 0 ,); // \uc120\uc5b8 // previous\ub294 \ud604\uc7ac\uac12, next\ub294 \ub2e4\uc74c\uc5d0 \uc624\ub294 \uac12\uc784 ref . listen < int > ( listenProvider , ( previous , next ) { if ( previous != next ) { controller . animateTo ( next ,); } }); \uc804\uccb4 \uc608\uc81c \ucf54\ub4dc Screen(\uc0ac\uc6a9\ud558\ub294 \ubd80\ubd84) class _ListProviederScreenState extends ConsumerState < ListenProviederScreen > with TickerProviderStateMixin { late final TabController controller ; @override void initState () { super . initState (); controller = TabController ( length: 10 , vsync: this , initialIndex: ref . read ( listenProvider )); } @override Widget build ( BuildContext context ) { ref . listen < int > ( listenProvider , ( previous , next ) { if ( previous != next ) { controller . animateTo ( next ,); } }); return DefaultLayout ( title: 'Listen Provieder Screen' , body: TabBarView ( physics: NeverScrollableScrollPhysics (), // scroll\ub85c \uc774\ub3d9\uc774 \uc548\ub418\uac8c \uc124\uc815 controller: controller , children: List . generate ( 10 , ( index ) => Column ( mainAxisAlignment: MainAxisAlignment . center , crossAxisAlignment: CrossAxisAlignment . stretch , children: [ Text ( index . toString (), textAlign: TextAlign . center ,), ElevatedButton ( onPressed: (){ ref . read ( listenProvider . notifier ). update (( state ) => state == 10 ? 10 : state + 1 ); }, child: Text ( 'Next' ),), ElevatedButton ( onPressed: (){ ref . read ( listenProvider . notifier ). update (( state ) => state == 0 ? 0 : state - 1 ); }, child: Text ( 'Previous' ),) ], ), ), ), ); } } .select \uc120\uc5b8 final selectProvider = StateNotifierProvider < SelectNotifier , ShoppingItemModel > ( ( ref ) => SelectNotifier (), ); class SelectNotifier extends StateNotifier < ShoppingItemModel > { SelectNotifier () : super ( ShoppingItemModel ( name: '\uae40\uce58' , quantity: 3 , hasBought: false , isSpicy: true ) ); toggleHasBought () { state = state . copyWith ( hasBought: ! state . hasBought ); } toggleIsSpicy () { state = state . copyWith ( isSpicy: ! state . isSpicy ); } } provider \ub4a4\uc5d0 .select\ub97c \ubd99\uc5ec\uc11c \uc0ac\uc6a9, \ud2b9\uc815\ud55c \uba54\uc11c\ub4dc\uc758 \uac12\ub9cc \uad00\uce21\ud558\uace0 \uc2f6\uc744 \ub54c \uc0ac\uc6a9\ud558\ub294 \uc635\uc158. \uc0ac\uc6a9 // watch\uc5d0 \ud65c\uc6a9 (1) final state = ref . watch ( selectProvider . select (( value ) => value . isSpicy )); // listen\uacfc \ud568\uaed8 \ud65c\uc6a9 (2) ref . listen ( selectProvider . select (( value ) => value . hasBought ), ( previous , next ) { print ( \"previoud : $ previous , next : $ next \" ); }); Provider \uc548\uc5d0 Provider Provider \uc548\uc5d0\uc11c Provider\ub97c \ud638\ucd9c\ud574\uc11c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc74c. stf widget > consumer widget State \uc55e\uc5d0 Consumer \ubd99\uc774\uba74 \ub428. class Test extends ConsumerStatefulWidget { // \uc5ec\uae30 \ubcc0\uacbd const Test ({ Key ? key }) : super ( key: key ); @override //\uc5ec\uae30 \ubcc0\uacbd ConsumerState < Test > createState () => _TestState (); } class _TestState extends ConsumerState < Test > { // \uc5ec\uae30 \ubcc0\uacbd @override Widget build ( BuildContext context ) { return Container (); } } .notifier\uc758 \uc758\ubbf8 \uac12\uc744 \ucc38\uc870\ud560 \ub54c provider \ub4a4\uc5d0 .notifier\ub97c \ubd99\uc774\uba74 \ud574\ub2f9 class\uac00 \uadf8\ub300\ub85c \uc634, \uc774\ub97c \ud1b5\ud574\uc11c \ud574\ub2f9 class \ub0b4\ubd80\uc5d0 \uc120\uc5b8 \ub41c \ud568\uc218\uc5d0 \ubc14\ub85c \uc811\uadfc\uc774 \uac00\ub2a5\ud558\uac8c \ub428.","title":"Riverpod"},{"location":"Flutter/Packages/riverpod/#how-to-install","text":"\uc124\uce58\ud560 \ub54c \uc704\uc5d0 \uc788\ub294\uac74 riverpod native \uc774\ubbc0\ub85c \ubc11\uc5d0 \uc788\ub294 riverpod flutter\ub97c \uc124\uce58\ud574\uc918\uc57c \ud568.","title":"How To Install"},{"location":"Flutter/Packages/riverpod/#provier","text":"\uac01\uac01 \ub2e4\ub978 \ud0c0\uc785\uc744 \ubc18\ud658\ud574\uc8fc\uace0 \uc0ac\uc6a9 \ubaa9\uc801\uc774 \ub2e4\ub984, \ubaa8\ub4e0 Provider\ub294 \uae00\ub85c\ubc8c\ud558\uac8c \uc120\uc5b8\ub428.","title":"Provier\uc758 \uc885\ub958"},{"location":"Flutter/Packages/riverpod/#provider","text":"\uac00\uc7a5 \uae30\ubcf8 \ubca0\uc774\uc2a4\uac00 \ub418\ub294 Provider \uc544\ubb34 \ud0c0\uc785\uc774\ub098 \ubc18\ud658 \uac00\ub2a5 Service, \uacc4\uc0b0\ud55c \uac12\ub4f1\uc744 \ubc18\ud658\ud560 \ub54c \uc0ac\uc6a9 \ubc18\ud658\uac12\uc744 \uce90\uc2f1\ud560 \ub54c \uc720\uc6a9\ud558\uac8c \uc0ac\uc6a9 (\ube4c\ub4dc \ud69f\uc218 \ucd5c\uc18c\ud654 \uac00\ub2a5) \uc5ec\ub7ec Provider\uc758 \uac12\ub4e4\uc744 \ubb36\uc5b4\uc11c \ud55c \ubc88\uc5d0 \ubc18\ud658 \uac12\uc744 \ub9cc\ub4e4\uc5b4\ub0bc \uc218 \uc788\uc74c Provider \uc885\ub958 \ubc18\ud658 \uac12 \uc0ac\uc6a9 \uc608\uc81c Provider \uc544\ubb34 \ud0c0\uc785 \ub370\uc774\ud130 \uce90\uc2f1 StateProvider \uc544\ubb34 \ud0c0\uc785 \uac04\ub2e8\ud55c \uc0c1\ud0dc\uac12 \uad00\ub9ac StateNotifierProvider StateNotifier\ub97c \uc0c1\uc18d\ud55c \uac12 \ubc18\ud658 \ubcf5\uc7a1\ud55c \uc0c1\ud0dc\uac12 \uad00\ub9ac FutureProvider Future \ud0c0\uc785 API \uc694\uccad\uc758 Future \uacb0\uacfc\uac12 StreamProvider Stream \ud0c0\uc785 API \uc694\uccad\uc758 Stream \uacb0\uacfc\uac12","title":"Provider"},{"location":"Flutter/Packages/riverpod/#stateproivder","text":"UI\uc5d0\uc11c \"\uc9c1\uc811\uc801\uc73c\ub85c\" \ub370\uc774\ud130\ub97c \ubcc0\uacbd\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uace0 \uc2f6\uc744 \ub54c \uc0ac\uc6a9 \ub2e8\uc21c\ud55c \ud615\ud0dc\uc758 \ub370\uc774\ud130\ub9cc \uad00\ub9ac (int, double, String \ub4f1) Map, List \ub4f1 \ubcf5\uc7a1\ud55c \ud615\ud0dc\uc758 \ub370\uc774\ud130\ub294 \ub2e4\ub8e8\uc9c0 \uc54a\uc74c \ubcf5\uc7a1\ud55c \ub85c\uc9c1\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc74c (number++ \uc815\ub3c4\uc758 \uac04\ub2e8\ud55c \ub85c\uc9c1\uc73c\ub85c\ub9cc \ud55c\uc815) final numberProvider = StateProvider < int > (( ref ) => 0 );","title":"StateProivder"},{"location":"Flutter/Packages/riverpod/#_1","text":"\uc608\uc81c \ucf54\ub4dc import 'package:flutter/material.dart' ; import 'package:flutter_riverpod/flutter_riverpod.dart' ; import 'package:riverpod_sample/layout/default_layout.dart' ; import 'package:riverpod_sample/riverpod/state_provider.dart' ; class StateRiverpodScreen extends ConsumerWidget { const StateRiverpodScreen ({ Key ? key }) : super ( key: key ); @override Widget build ( BuildContext context , WidgetRef ref ) { // watch, read, listen\ub9cc \uc500 final provider = ref . watch ( numberProvider ); return DefaultLayout ( title: 'State Riverpod Screen' , body: SizedBox ( width: MediaQuery . of ( context ). size . width , child: Column ( mainAxisAlignment: MainAxisAlignment . center , children: [ Text ( provider . toString (), ), ElevatedButton ( onPressed: () { ref . read ( numberProvider . notifier ). update (( state ) => state + 1 ); }, child: Text ( 'Up' )), ElevatedButton ( onPressed: () { ref . read ( numberProvider . notifier ). state = ref . read ( numberProvider . notifier ). state - 1 ; }, child: Text ( 'Down' )), ElevatedButton ( onPressed: () { Navigator . of ( context ). push ( MaterialPageRoute ( builder: ( context ) => _NextScreen ())); }, child: Text ( 'Push' )) ], ), ), ); } } class _NextScreen extends ConsumerWidget { const _NextScreen ({ super . key }); @override Widget build ( BuildContext context , WidgetRef ref ) { final provider = ref . watch ( numberProvider ); return DefaultLayout ( title: 'Next Screen' , body: SizedBox ( width: MediaQuery . of ( context ). size . width , child: Column ( mainAxisAlignment: MainAxisAlignment . center , children: [ Text ( provider . toString (), ), ElevatedButton ( onPressed: () { ref . read ( numberProvider . notifier ). update (( state ) => state + 1 ); }, child: Text ( 'Up' )) ], ), ), ); } }","title":"\uc0ac\uc6a9 \ubc29\ubc95"},{"location":"Flutter/Packages/riverpod/#statenotifierprovider","text":"\ucc38\uc870 - StateProvider\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c UI\uc5d0\uc11c \uc9c1\uc811\uc801\uc73c\ub85c \ub370\uc774\ud130\ub97c \ubcc0\uacbd\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uace0 \uc2f6\uc744 \ub54c \uc0ac\uc6a9 - \ubcf5\uc7a1\ud55c \ud615\ud0dc\uc758 \ub370\uc774\ud130 \uad00\ub9ac \uac00\ub2a5 (\ud074\ub798\uc2a4\uc758 \uba54\uc18c\ub4dc\ub97c \uc774\uc6a9\ud55c \uc0c1\ud0dc \uad00\ub9ac) - StateNotifier\ub97c \uc0c1\uc18d\ud55c **\ud074\ub798\uc2a4\ub97c \ubc18\ud658** class \ud615\ud0dc\ub85c \uc120\uc5b8\ud574\uc11c \uc0ac\uc6a9 \ud568","title":"StateNotifierProvider"},{"location":"Flutter/Packages/riverpod/#model","text":"class ShoppingItemModel { final String name ; // \uc774\ub984 final int quantity ; // \uac2f\uc218 final bool hasBought ; // \uad6c\ub9e4 \ud588\ub294\uc9c0 final bool isSpicy ; // \ub9e4\uc6b4\uc9c0; ShoppingItemModel ( { required this . name , required this . quantity , required this . hasBought , required this . isSpicy }); }","title":"model \uc120\uc5b8"},{"location":"Flutter/Packages/riverpod/#statenotifier-class","text":"class ShoppingListNotifier extends StateNotifier < List < ShoppingItemModel >> { ShoppingListNotifier () : super ([ // ShoppingListProvider \ucd08\uae30\ud654 // ShoppingListProvider \uc120\uc5b8\uc2dc \ud574\ub2f9\ud558\ub294 \uac12\ub4e4\uc744 \ucc98\uc74c\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc787\uc74c ShoppingItemModel ( name: '\uae40\uce58' , quantity: 3 , hasBought: false , isSpicy: true ), ShoppingItemModel ( name: '\ub77c\uba74' , quantity: 5 , hasBought: false , isSpicy: true ), ShoppingItemModel ( name: '\uc0bc\uacb9\uc0b4' , quantity: 10 , hasBought: false , isSpicy: false ), ShoppingItemModel ( name: '\uc218\ubc15' , quantity: 2 , hasBought: false , isSpicy: false ), ShoppingItemModel ( name: '\uce74\uc2a4\ud14c\ub77c' , quantity: 7 , hasBought: false , isSpicy: false ), ]); void toggleHasBought ({ required String name , }) { // state\ub294 StateNotifier\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc81c\uacf5\ub428 state = state . map (( e ) => e . name == name ? ShoppingItemModel ( name: e . name , quantity: e . quantity , hasBought: ! e . hasBought , isSpicy: e . isSpicy ) : e ) . toList (); } }","title":"StateNotifier \uc0c1\uc18d\ubc1b\uc740 class \uc120\uc5b8"},{"location":"Flutter/Packages/riverpod/#provider_1","text":"// Generic\uc5d0\ub294 \uc5b4\ub5a4 StateNotifier\ub97c \uc0c1\uc18d\ud55c \ud074\ub798\uc2a4\ub97c \uc4f8\uac74\uc9c0\ub123\uc5b4\uc8fc\uace0 \ud574\ub2f9 Class\uac00 \uad00\ub9ac\ud558\ub294 \uc0c1\ud0dc\uc758 type\uc744 \ub450 \ubc88\uc9f8 Generic\uc73c\ub85c \ub123\uc5b4\uc90c final shoppingListNotifier = StateNotifierProvider < ShoppingListNotifier , List < ShoppingItemModel >> (( ref ) => ShoppingListNotifier ());","title":"Provider\ub85c \ub9cc\ub4e4\uc5b4 \uc8fc\uae30"},{"location":"Flutter/Packages/riverpod/#_2","text":"stateless \uc704\uc82f\uc774 \uc0c1\uc18d\ubc1b\uace0 \uc788\ub294 \uc704\uc82f\uc744 ConsumerWidget\uc73c\ub85c \ubcc0\uacbd\ud574\uc8fc\uace0 BuildContext \uc606\uc5d0 WidgetRef \ucd94\uac00\ud574\uc918\uc57c \ud568. class Test extends ConsumerWidget { // \uc5ec\uae30 \ubcc0\uacbd const Test ({ super . key }); @override Widget build ( BuildContext context , WidgetRef ref ) { // \uc5ec\uae30 \ubcc0\uacbd return Container (); } } \uc0ac\uc6a9 \ubc29\ubc95\uc740 stateProvider\ub791 \ud06c\uac8c \ub2e4\ub97c\ubc14\ub294 \uc5c6\uc74c. // \ucc38\uc870\ud558\uae30 final List < ShoppingItemModel > state = ref . watch ( shoppingListNotifier ); // StateNotifier \uc548\uc5d0 \uc788\ub294 \ud568\uc218 \uc0ac\uc6a9 ex) onPressed \ud568\uc218 \uc548\uc5d0 \uc0ac\uc6a9 ref . read ( shoppingListNotifier . notifier ). toggleHasBought ( name: e . name );","title":"\uc0ac\uc6a9\ubc29\ubc95"},{"location":"Flutter/Packages/riverpod/#futureprovider","text":"Future \ud0c0\uc785\ub9cc \ubc18\ud658\uac00\ub2a5 API \uc694\uccad\uc758 \uacb0\uacfc\ub97c \ubc18\ud658\ud560 \ub54c \uc790\uc8fc \uc0ac\uc6a9 \ubcf5\uc7a1\ud55c \ub85c\uc9c1 \ub610\ub294 \uc0ac\uc6a9\uc790\uc758 \ud2b9\uc815 \ud589\ub3d9\ub4a4\uc5d0 Future\ub97c \uc7ac\uc2e4\ud589\ud558\ub294 \uae30\ub2a5\uc774 \uc5c6\uc74c","title":"FutureProvider"},{"location":"Flutter/Packages/riverpod/#_3","text":"\uc120\uc5b8 : final multipleFutureProvider = FutureProvider (( ref ) async { await Future . delayed ( Duration ( seconds: 2 )); //throw Exception('Error \uc785\ub2c8\ub2e4.'); return [ 1 , 2 , 3 , 4 , 5 ]; }); \uc0ac\uc6a9 : Provider\ub97c \ubd88\ub7ec\uc624\uace0 .when\uc744 \ud1b5\ud574\uc11c \uc0ac\uc6a9\ud574\uc8fc\ub294\uac8c \ud2b9\uc774\ud55c\ub370 \uc774\ub294 StreamProvider\uc5d0\uc11c\ub3c4 \ub611\uac19\uc74c. class FutureProviderScreen extends ConsumerWidget { const FutureProviderScreen ({ super . key }); // (1) @override Widget build ( BuildContext context , WidgetRef ref ) { final state = ref . watch ( multipleFutureProvider ); return DefaultLayout ( title: 'FutureProviderScreen' , body: Column ( mainAxisAlignment: MainAxisAlignment . center , crossAxisAlignment: CrossAxisAlignment . stretch , children: [ // date - \ub85c\ub529\uc774 \ub05d\ub098\uc11c \ub370\uc774\ud130\uac00 \uc788\uc744 \ub54c / error - \uc5d0\ub7ec\uac00 \uc788\uc744 \ub54c / loading - \ub85c\ub529 \uc911\uc77c \ub54c \uc2e4\ud589 state . when ( data: ( date ) { return Text ( date . toString (), textAlign: TextAlign . center , ); }, error: ( err , Stack ) => Text ( err . toString ()), loading: (() => const Center ( child: CircularProgressIndicator ()))) ], ) ); } }","title":"\uc0ac\uc6a9 \ubc29\ubc95"},{"location":"Flutter/Packages/riverpod/#streamprovider","text":"Stream \ud0c0\uc785\ub9cc \ubc18\ud658\uac00\ub2a5 API \uc694\uccad\uc758 \uacb0\uacfc\ub97c Stream\uc73c\ub85c \ubc18\ud658\ud560 \ub54c \uc790\uc8fc \uc0ac\uc6a9 (Socker \ub4f1) \uc120\uc5b8 final multipleStreamProvider = StreamProvider < List < int >> (( ref ) async * { for ( int i = 0 ; i < 10 ; i ++ ) { await Future . delayed ( Duration ( seconds: 2 )); yield List . generate ( 3 , ( index ) => index * i ); } }); \uc0ac\uc6a9\ubc29\ubc95 class StreamProviderScreen extends ConsumerWidget { const StreamProviderScreen ({ super . key }); @override Widget build ( BuildContext context , WidgetRef ref ) { final state = ref . watch ( multipleStreamProvider ); // (1) return DefaultLayout ( title: 'Stream Provier Screen' , body: Center ( child: state . when ( data: ( data ) { return Text ( data . toString ()); }, error: ( err , Stack ) { return Text ( err . toString ()); }, loading: (() => CircularProgressIndicator ()), )), ); } }","title":"StreamProvider"},{"location":"Flutter/Packages/riverpod/#family","text":"\uc120\uc5b8\ud558\ub294 Provider \ub4a4\uc5d0 fmaily \uc635\uc158\uc744 \ubd99\uc5ec\uc11c \uc0ac\uc6a9 \ud55c\ub2e4. \uc774 \ub54c Generic\uc744 \uc6d0\ub798 \uc120\uc5b8\ud558\ub358 return type \uc678\uc5d0 \uc785\ub825 \ubc1b\uc744 \uc778\uc790\uac12\uc758 type\ub3c4 \ud568\uaed8 \uc120\uc5b8\ud568. \uc120\uc5b8 final familyModifierProvider = FutureProvider . family < List < int > , int > ( ( ref , data ) async { // data\ub294 \uc778\uc790\uac12 await Future . delayed ( Duration ( seconds: 1 )); return List . generate ( 5 , ( index ) => data * index ). toList (); }, ); \uc6d0\ub798\ub294 watch / read(\ud504\ub85c\ubc14\uc774\ub354\uc774\ub984) \uacfc \uac19\uc740 \ubc29\ubc95\uc73c\ub85c \uc120\uc5b8\uc744 \ud588\ub2e4\uba74 familyModifier\ub294 watch / read(\ud504\ub85c\ubc14\uc774\ub354\uc774\ub984(\uc778\uc790\uac12)) \uacfc \uac19\uc740 \ud615\ud0dc\ub85c \uc0ac\uc6a9\ud568. \uc0ac\uc6a9\ubc29\ubc95 final state = ref . watch ( familyModifierProvider ( 5 ));","title":"Family: \uc778\uc790\uac12 \uc785\ub825\ubc1b\uae30"},{"location":"Flutter/Packages/riverpod/#autodispose","text":"provider\ub294 \ucd5c\ucd08 \uc2e4\ud589\ub418\uace0 \ub098\uba74 \uc2e4\ud589\ub41c \uac12\uc744 \uac00\uc9c0\uace0 \uc788\ub294\ub370 autodispose\ub294 \uba54\ubaa8\ub9ac\uc5d0\uc11c \uc2e4\ud589 \uacb0\uacfc\ub97c \uc790\ub3d9\uc73c\ub85c dispose \ud574\uc918\uc11c \uc2e4\ud589\ud560 \ub54c\ub9c8\ub2e4 \ub9e4\ubc88 \uc2e4\ud589\ub418\uac8c \ud574\uc8fc\ub294 \ubc29\ubc95\uc784. \uc0ac\uc6a9\ubc29\ubc95\uc740 \ub2e4\ub978 provider\uc640 \uac19\uc74c. \uc120\uc5b8 final autoDisposeModifierProvider = FutureProvider . autoDispose < List < int >> (( ref ) async { // (1) await Future . delayed ( Duration ( seconds: 1 )); return [ 1 , 2 , 3 , 4 , 5 ]; }, ); \uc77c\ubc18 FutureProvider\uc640 autodispose \uc635\uc158\uc744 \uc900 \uacbd\uc6b0\uc758 \ube44\uad50 \uc77c\ubc18 Future Provieder \ud83d\udc47 autodispose \ud55c Future Provider","title":".autodispose : \uce90\uc2dc \uc0ad\uc81c"},{"location":"Flutter/Packages/riverpod/#changenotifierprovider","text":"Provider \ud328\ud0a4\uc9c0\uc5d0\uc11c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc6a9\ub3c4","title":"ChangeNotifierProvider"},{"location":"Flutter/Packages/riverpod/#provider_2","text":"\ubc29\ubc95 1. update \uc0ac\uc6a9 ref . read ([ specificProvider ]. notifier ). update (( state ) => state + 1 ); \ubc29\ubc95 2. state \uac12 \uc9c1\uc811 \uac00\uc838\uc640\uc11c \ubcc0\uacbd ref . read ([ specificProvider ]. notifier ). state = ref . read ([ specificProvider ]. notifier ). state - 1 ;","title":"Provider \uc0ac\uc6a9\ubc29\ubc95"},{"location":"Flutter/Packages/riverpod/#listen","text":"Listen Provider\ub294 \uc120\uc5b8\uc2dc\uc5d0 \ubb54\uac00\ub97c \ud574\uc8fc\ub294\uac8c \uc544\ub2c8\ub77c \uac12\uc744 \ubc1b\uc744 \ub54c .listen\uc744 \ubd99\uc774\ub294\ub370 \ub0b4\uac00 \uc774\ud574\ud55c \ubc14\ub85c\ub294 \ud504\ub85c\ubc14\uc774\ub354\uac00 \uc5b4\ub5a0\ud55c \ub3d9\uc791\uc774 \uc788\uc744 \ub54c \ub2e4\uc74c\uc5d0 \ub098\uc62c \uac12\uc744 next\uc5d0 \ub123\uc5b4\uc8fc\uace0 \ud604\uc7ac\uc758 \uac12\uc744 previous\uc5d0 \ub123\uc5b4\uc8fc\ub294 \ud615\uc2dd\uc784. final listenProvider = StateProvider < int > (( ref ) => 0 ,); // \uc120\uc5b8 // previous\ub294 \ud604\uc7ac\uac12, next\ub294 \ub2e4\uc74c\uc5d0 \uc624\ub294 \uac12\uc784 ref . listen < int > ( listenProvider , ( previous , next ) { if ( previous != next ) { controller . animateTo ( next ,); } }); \uc804\uccb4 \uc608\uc81c \ucf54\ub4dc Screen(\uc0ac\uc6a9\ud558\ub294 \ubd80\ubd84) class _ListProviederScreenState extends ConsumerState < ListenProviederScreen > with TickerProviderStateMixin { late final TabController controller ; @override void initState () { super . initState (); controller = TabController ( length: 10 , vsync: this , initialIndex: ref . read ( listenProvider )); } @override Widget build ( BuildContext context ) { ref . listen < int > ( listenProvider , ( previous , next ) { if ( previous != next ) { controller . animateTo ( next ,); } }); return DefaultLayout ( title: 'Listen Provieder Screen' , body: TabBarView ( physics: NeverScrollableScrollPhysics (), // scroll\ub85c \uc774\ub3d9\uc774 \uc548\ub418\uac8c \uc124\uc815 controller: controller , children: List . generate ( 10 , ( index ) => Column ( mainAxisAlignment: MainAxisAlignment . center , crossAxisAlignment: CrossAxisAlignment . stretch , children: [ Text ( index . toString (), textAlign: TextAlign . center ,), ElevatedButton ( onPressed: (){ ref . read ( listenProvider . notifier ). update (( state ) => state == 10 ? 10 : state + 1 ); }, child: Text ( 'Next' ),), ElevatedButton ( onPressed: (){ ref . read ( listenProvider . notifier ). update (( state ) => state == 0 ? 0 : state - 1 ); }, child: Text ( 'Previous' ),) ], ), ), ), ); } }","title":".listen"},{"location":"Flutter/Packages/riverpod/#select","text":"\uc120\uc5b8 final selectProvider = StateNotifierProvider < SelectNotifier , ShoppingItemModel > ( ( ref ) => SelectNotifier (), ); class SelectNotifier extends StateNotifier < ShoppingItemModel > { SelectNotifier () : super ( ShoppingItemModel ( name: '\uae40\uce58' , quantity: 3 , hasBought: false , isSpicy: true ) ); toggleHasBought () { state = state . copyWith ( hasBought: ! state . hasBought ); } toggleIsSpicy () { state = state . copyWith ( isSpicy: ! state . isSpicy ); } } provider \ub4a4\uc5d0 .select\ub97c \ubd99\uc5ec\uc11c \uc0ac\uc6a9, \ud2b9\uc815\ud55c \uba54\uc11c\ub4dc\uc758 \uac12\ub9cc \uad00\uce21\ud558\uace0 \uc2f6\uc744 \ub54c \uc0ac\uc6a9\ud558\ub294 \uc635\uc158. \uc0ac\uc6a9 // watch\uc5d0 \ud65c\uc6a9 (1) final state = ref . watch ( selectProvider . select (( value ) => value . isSpicy )); // listen\uacfc \ud568\uaed8 \ud65c\uc6a9 (2) ref . listen ( selectProvider . select (( value ) => value . hasBought ), ( previous , next ) { print ( \"previoud : $ previous , next : $ next \" ); });","title":".select"},{"location":"Flutter/Packages/riverpod/#provider-provider","text":"Provider \uc548\uc5d0\uc11c Provider\ub97c \ud638\ucd9c\ud574\uc11c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc74c.","title":"Provider \uc548\uc5d0 Provider"},{"location":"Flutter/Packages/riverpod/#stf-widget-consumer-widget","text":"State \uc55e\uc5d0 Consumer \ubd99\uc774\uba74 \ub428. class Test extends ConsumerStatefulWidget { // \uc5ec\uae30 \ubcc0\uacbd const Test ({ Key ? key }) : super ( key: key ); @override //\uc5ec\uae30 \ubcc0\uacbd ConsumerState < Test > createState () => _TestState (); } class _TestState extends ConsumerState < Test > { // \uc5ec\uae30 \ubcc0\uacbd @override Widget build ( BuildContext context ) { return Container (); } }","title":"stf widget &gt; consumer widget"},{"location":"Flutter/Packages/riverpod/#notifier","text":"\uac12\uc744 \ucc38\uc870\ud560 \ub54c provider \ub4a4\uc5d0 .notifier\ub97c \ubd99\uc774\uba74 \ud574\ub2f9 class\uac00 \uadf8\ub300\ub85c \uc634, \uc774\ub97c \ud1b5\ud574\uc11c \ud574\ub2f9 class \ub0b4\ubd80\uc5d0 \uc120\uc5b8 \ub41c \ud568\uc218\uc5d0 \ubc14\ub85c \uc811\uadfc\uc774 \uac00\ub2a5\ud558\uac8c \ub428.","title":".notifier\uc758 \uc758\ubbf8"},{"location":"Flutter/Packages/web_view/","text":"web_view Warning: The plugin webview_flutter_android requires Android SDK version 32. \ub77c\ub294 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud568. \uc5d0\ub7ec \uba54\uc2dc\uc9c0\ub97c \uc798 \uc77d\uc5b4\ubcf4\ub2c8 compileSdkVersion\uc744 32\ub85c \ubc14\uafb8\ub77c\ub294 \uac83 \uac19\uc544\uc11c \uadf8\ub807\uac8c \ud574\uc90c. \uadf8\ub9ac\uace0 webview_flutter READEME\uc5d0\uc11c minSdkVersion\uc744 19\ub85c \ubc14\uafb8\ub77c\uace0 \ub418\uc5b4 \uc788\ub294\ub370 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub418\uc5b4 \uc788\ub294 Version\uc744 \uc548 \uc9c0\uc6cc\uc8fc\ub2c8 error\uac00 \ubc1c\uc0dd\ud558\ub294 \uac83\uc774\uc5c8\uc74c.","title":"Web View"},{"location":"Flutter/Packages/web_view/#web_view","text":"Warning: The plugin webview_flutter_android requires Android SDK version 32. \ub77c\ub294 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud568. \uc5d0\ub7ec \uba54\uc2dc\uc9c0\ub97c \uc798 \uc77d\uc5b4\ubcf4\ub2c8 compileSdkVersion\uc744 32\ub85c \ubc14\uafb8\ub77c\ub294 \uac83 \uac19\uc544\uc11c \uadf8\ub807\uac8c \ud574\uc90c. \uadf8\ub9ac\uace0 webview_flutter READEME\uc5d0\uc11c minSdkVersion\uc744 19\ub85c \ubc14\uafb8\ub77c\uace0 \ub418\uc5b4 \uc788\ub294\ub370 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub418\uc5b4 \uc788\ub294 Version\uc744 \uc548 \uc9c0\uc6cc\uc8fc\ub2c8 error\uac00 \ubc1c\uc0dd\ud558\ub294 \uac83\uc774\uc5c8\uc74c.","title":"web_view"},{"location":"Flutter/Theory/CodeGeneration/","text":"flutter pub run build_runner build Error \uc0dd\uc131\ub41c \ud30c\uc77c\uc774 \uc548\ubcf4\uc77c \ub54c","title":"Code Generation"},{"location":"Flutter/Theory/CodeGeneration/#error","text":"","title":"Error"},{"location":"Flutter/Theory/CodeGeneration/#_1","text":"","title":"\uc0dd\uc131\ub41c \ud30c\uc77c\uc774 \uc548\ubcf4\uc77c \ub54c"},{"location":"Flutter/Theory/Navigation/","text":"Push Button\uc758 onPressed \ud568\uc218 \ub0b4\ubd80\uc5d0 \ub123\uc5b4\uc11c \ub3d9\uc791 MaterialPageRoute ElevatedButton ( onPressed: () async { // result\uc5d0\ub294 push\ub41c \uc2a4\ud06c\ub9b0\uc5d0\uc11c pop \ud560 \ub54c \uc778\uc790\ub85c \ubcf4\ub0b4\uc8fc\ub294 \uac12\uc774 \ub4e4\uc5b4\uac00\uac8c \ub428. // \uc774 \ub54c push\ub97c \ud574\uc8fc\uace0 pop\uc5d0\uc11c \uac12\uc744 \ubc1b\uc744 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub824\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 await\uc744 \uc0ac\uc6a9\ud574\uc918\uc57c \ud568. final result = await Navigator . of ( context ). push ( // result\uc5d0 pop\uc5d0\uc11c \ubcf4\ub0b8 \uac12\uc774 \uc800\uc7a5\ub418\uac8c \ub428. MaterialPageRoute ( builder: ( BuildContext cotnext ) => routeScreenClass ( // push \ud574\uc904 screen class constructor: contructorData , // push\ub85c \uac12\uc744 \ubcf4\ub0b4\ub294 \uacbd\uc6b0\ub294 costructor\ub85c \ubcf4\ub0c4. ), ), ); }, child: Text ( 'Push' )) Named Push // routes\uc758 key\uac12\uc744 \uc804\ub2ec\ud574\uc8fc\uba74 \ub428. Navigator . of ( context ). pushNamed ( '/' , arguments: data ); // root route Arguments\ub97c \uc774\uc6a9\ud574\uc11c Push\ud560 \ub54c \uac12 \uc804\ub2ec\ud558\uae30 ElevatedButton ( onPressed: () { Navigator . of ( context ). push ( MaterialPageRoute ( builder: ( BuildContext context ) => routeScreenClass (), // push \ud574\uc904 screen class // push\uc758 Setting\uc744 \ud1b5\ud574\uc11c \ub2e4\ub978 \uc2a4\ud06c\ub9b0\uc5d0 \uac12\uc744 \uc804\ub2ec \ud574\uc904 \uc218 \uc788\uc74c. settings: RouteSettings ( arguments: data )), ); }, child: Text ( 'Push' ), - \uac12\uc744 \ubc1b\ub294 Screen : final argument = ModalRoute . of ( context ) ! . settings . arguments ; // \ubc18\ub4dc\uc2dc \uac12\uc744 \ubc1b\uc744 \ub54c final ? argument = ModalRoute . of ( context ). settings . arguments ; // \uac12\uc774 \uc5c6\uc744 \uc218\ub3c4 \uc788\uc744 \ub54c Push Replacement \ud604\uc7ac Route\ub97c \ub300\uccb4\ud574\uc11c Push\ub97c \ud568. \uc989, \ud604\uc7ac Route Pop > builder Screen Push \uc774\ub7f0\uc2dd\uc73c\ub85c \ub3d9\uc791 \ub428. arguments \ud544\uc694\ud558\ub2e4\uba74 \uc77c\ubc18\uc801\uc778 Push\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c constructor\uc5d0 \uc804\ub2ec\ud574\uc8fc\uba74 \ub428. ElevatedButton ( onPressed: () { Navigator . of ( context ). pushReplacement ( MaterialPageRoute ( builder: ( _ ) => routeScreenClass (), // push\ud560 screen ), ); }, child: Text ( 'Push Replacement' )), Push Named Replacement ElevatedButton ( onPressed: () { Navigator . of ( context ). pushReplacementNamed ( '/' , arguments: data , ); // root route }, child: Text ( 'Push Replacement' )), Push And Remove Until true \uac12\uc744 \ubc18\ud658\ud574\uc8fc\ub294 Route \ube7c\uace0 \uc804\ubd80 Stack\uc5d0\uc11c \uc0ad\uc81c\ud574\uc90c(\uc790\uc138\ud55c \uc124\uba85 \uc18c\uc2a4\ucf54\ub4dc \ucc38\uc870). ElevatedButton ( onPressed: () { Navigator . of ( context ). pushAndRemoveUntil ( MaterialPageRoute ( builder: ( _ ) => RouteThreeScreen ()), // False\uac00 \uc804\ub2ec\uc774 \ub418\uba74 Stack\uc5d0 \uc788\ub294 \ubaa8\ub4e0 Route\ub4e4\uc774 \ub2e4 \uc0ad\uc81c\ub428. // true \uac12\uc744 \ub118\uaca8\uc8fc\uba74 \ubaa8\ub4e0 Route\ub4e4\uc774 \uc0b4\uc544\uc788\uac8c \ub428. // \uc544\ub798\uc640 \uac19\uc774 route.settings.name\uc5d0 \ud574\ub2f9\ud558\ub294 route key\uac12\uc744 \ub118\uaca8\uc8fc\uac8c \ub418\uba74 \ud574\ub2f9 route\ub9cc true\uac00 \ub428. // \uc989, \ud574\ub2f9 route\ub97c \uc81c\uc678\ud55c \ubaa8\ub4e0 route\ub4e4\uc740 Stack\uc5d0\uc11c \uc9c0\uc6cc\uc9d0. ( route ) => route . settings . name == '/' ); }, child: Text ( 'Push And Remove Until' )), Push Named And Remove Until ElevatedButton ( onPressed: () { Navigator . of ( context ). pushNamedAndRemoveUntil ( '/three' ,( route ) => route . settings . name == '/' ); }, child: Text ( 'Push Named And Remove Until' )), pop ElevatedButton ( onPressed: () { // Push \ud574\uc900 \ubd80\ubd84\uc73c\ub85c return \uac12\uc744 \ubcf4\ub0b4\uc90c Navigator . of ( context ). pop ( return data ); }, child: Text ( 'Pop' )) ], ), mayPop Stack\uc5d0 Pop \uac00\ub2a5\ud55c Screen\uc774 \uc788\uc5b4\uc57c\uc9c0\ub9cc Pop \ud574\uc90c. Navigator . of ( context ). maybePop (); WillPopScope \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \ucd5c\uc0c1\ub2e8\uc5d0 \uae30\ubcf8\uc801\uc73c\ub85c \ub4a4\ub85c\uac00\uae30\ub97c \ud560 \uc218 \uc788\ub294 \ubc84\ud2bc\uc774 \uc788\uc74c. \ucd5c\uc0c1\ub2e8\uc5d0\uc11c \uc774 \ub4a4\ub85c\uac00\uae30 \ubc84\ud2bc\uc744 \ub204\ub974\uac8c\ub418\uba74 \uc571\uc744 \ub098\uac00\uac8c \ub418\ub294 \uc774\ub97c \ubc29\uc9c0\ud574\uc90c. WillPopScope ( onWillPop: () async { // async \uaf2d \uc0ac\uc6a9\ud574\uc918\uc57c \ud568. // \uc5ec\uae30\uc5d0 false\ub97c return \ud574\uc8fc\uac8c \ub418\uba74 \ucd5c\uc0c1\ub2e8\uc5d0\uc11c \ub4a4\ub85c\uac00\uae30 Button\uc73c\ub85c \uc571\uc744 \ube60\uc838\ub098\uac08 \uc218 \uc5c6\uac8c \ub428. return false ; }, \ucc38\uc870 canPop Pop \ub3d9\uc791\uc740 \ud558\uc9c0 \uc54a\uace0 Stack\uc5d0 \uc5b4\ub5a4 \uac12\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uc6a9\ub3c4. print(Navigator.of(context) .canPop()); // \uc544\ubb34\ub7f0 pop \ub3d9\uc791\ub3c4 \ud558\uc9c0 \uc54a\uace0 return\ub9cc \uc8fc\ub294 \uc5ed\ud560. Error Fix Pop Error return \uac12 \uc5c6\ub2e4\uace0 () \uc548\uc368\uc8fc\uba74 pop\uc774 \ub3d9\uc791\uc744 \uc548\ud568. Reference \ucc38\uc870","title":"Navigation Push/Pop"},{"location":"Flutter/Theory/Navigation/#push","text":"Button\uc758 onPressed \ud568\uc218 \ub0b4\ubd80\uc5d0 \ub123\uc5b4\uc11c \ub3d9\uc791","title":"Push"},{"location":"Flutter/Theory/Navigation/#materialpageroute","text":"ElevatedButton ( onPressed: () async { // result\uc5d0\ub294 push\ub41c \uc2a4\ud06c\ub9b0\uc5d0\uc11c pop \ud560 \ub54c \uc778\uc790\ub85c \ubcf4\ub0b4\uc8fc\ub294 \uac12\uc774 \ub4e4\uc5b4\uac00\uac8c \ub428. // \uc774 \ub54c push\ub97c \ud574\uc8fc\uace0 pop\uc5d0\uc11c \uac12\uc744 \ubc1b\uc744 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub824\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 await\uc744 \uc0ac\uc6a9\ud574\uc918\uc57c \ud568. final result = await Navigator . of ( context ). push ( // result\uc5d0 pop\uc5d0\uc11c \ubcf4\ub0b8 \uac12\uc774 \uc800\uc7a5\ub418\uac8c \ub428. MaterialPageRoute ( builder: ( BuildContext cotnext ) => routeScreenClass ( // push \ud574\uc904 screen class constructor: contructorData , // push\ub85c \uac12\uc744 \ubcf4\ub0b4\ub294 \uacbd\uc6b0\ub294 costructor\ub85c \ubcf4\ub0c4. ), ), ); }, child: Text ( 'Push' ))","title":"MaterialPageRoute"},{"location":"Flutter/Theory/Navigation/#named-push","text":"// routes\uc758 key\uac12\uc744 \uc804\ub2ec\ud574\uc8fc\uba74 \ub428. Navigator . of ( context ). pushNamed ( '/' , arguments: data ); // root route","title":"Named Push"},{"location":"Flutter/Theory/Navigation/#arguments-push","text":"ElevatedButton ( onPressed: () { Navigator . of ( context ). push ( MaterialPageRoute ( builder: ( BuildContext context ) => routeScreenClass (), // push \ud574\uc904 screen class // push\uc758 Setting\uc744 \ud1b5\ud574\uc11c \ub2e4\ub978 \uc2a4\ud06c\ub9b0\uc5d0 \uac12\uc744 \uc804\ub2ec \ud574\uc904 \uc218 \uc788\uc74c. settings: RouteSettings ( arguments: data )), ); }, child: Text ( 'Push' ), - \uac12\uc744 \ubc1b\ub294 Screen : final argument = ModalRoute . of ( context ) ! . settings . arguments ; // \ubc18\ub4dc\uc2dc \uac12\uc744 \ubc1b\uc744 \ub54c final ? argument = ModalRoute . of ( context ). settings . arguments ; // \uac12\uc774 \uc5c6\uc744 \uc218\ub3c4 \uc788\uc744 \ub54c","title":"Arguments\ub97c \uc774\uc6a9\ud574\uc11c Push\ud560 \ub54c \uac12 \uc804\ub2ec\ud558\uae30"},{"location":"Flutter/Theory/Navigation/#push-replacement","text":"\ud604\uc7ac Route\ub97c \ub300\uccb4\ud574\uc11c Push\ub97c \ud568. \uc989, \ud604\uc7ac Route Pop > builder Screen Push \uc774\ub7f0\uc2dd\uc73c\ub85c \ub3d9\uc791 \ub428. arguments \ud544\uc694\ud558\ub2e4\uba74 \uc77c\ubc18\uc801\uc778 Push\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c constructor\uc5d0 \uc804\ub2ec\ud574\uc8fc\uba74 \ub428. ElevatedButton ( onPressed: () { Navigator . of ( context ). pushReplacement ( MaterialPageRoute ( builder: ( _ ) => routeScreenClass (), // push\ud560 screen ), ); }, child: Text ( 'Push Replacement' )),","title":"Push Replacement"},{"location":"Flutter/Theory/Navigation/#push-named-replacement","text":"ElevatedButton ( onPressed: () { Navigator . of ( context ). pushReplacementNamed ( '/' , arguments: data , ); // root route }, child: Text ( 'Push Replacement' )),","title":"Push Named Replacement"},{"location":"Flutter/Theory/Navigation/#push-and-remove-until","text":"true \uac12\uc744 \ubc18\ud658\ud574\uc8fc\ub294 Route \ube7c\uace0 \uc804\ubd80 Stack\uc5d0\uc11c \uc0ad\uc81c\ud574\uc90c(\uc790\uc138\ud55c \uc124\uba85 \uc18c\uc2a4\ucf54\ub4dc \ucc38\uc870). ElevatedButton ( onPressed: () { Navigator . of ( context ). pushAndRemoveUntil ( MaterialPageRoute ( builder: ( _ ) => RouteThreeScreen ()), // False\uac00 \uc804\ub2ec\uc774 \ub418\uba74 Stack\uc5d0 \uc788\ub294 \ubaa8\ub4e0 Route\ub4e4\uc774 \ub2e4 \uc0ad\uc81c\ub428. // true \uac12\uc744 \ub118\uaca8\uc8fc\uba74 \ubaa8\ub4e0 Route\ub4e4\uc774 \uc0b4\uc544\uc788\uac8c \ub428. // \uc544\ub798\uc640 \uac19\uc774 route.settings.name\uc5d0 \ud574\ub2f9\ud558\ub294 route key\uac12\uc744 \ub118\uaca8\uc8fc\uac8c \ub418\uba74 \ud574\ub2f9 route\ub9cc true\uac00 \ub428. // \uc989, \ud574\ub2f9 route\ub97c \uc81c\uc678\ud55c \ubaa8\ub4e0 route\ub4e4\uc740 Stack\uc5d0\uc11c \uc9c0\uc6cc\uc9d0. ( route ) => route . settings . name == '/' ); }, child: Text ( 'Push And Remove Until' )),","title":"Push And Remove Until"},{"location":"Flutter/Theory/Navigation/#push-named-and-remove-until","text":"ElevatedButton ( onPressed: () { Navigator . of ( context ). pushNamedAndRemoveUntil ( '/three' ,( route ) => route . settings . name == '/' ); }, child: Text ( 'Push Named And Remove Until' )),","title":"Push Named And Remove Until"},{"location":"Flutter/Theory/Navigation/#pop","text":"ElevatedButton ( onPressed: () { // Push \ud574\uc900 \ubd80\ubd84\uc73c\ub85c return \uac12\uc744 \ubcf4\ub0b4\uc90c Navigator . of ( context ). pop ( return data ); }, child: Text ( 'Pop' )) ], ),","title":"pop"},{"location":"Flutter/Theory/Navigation/#maypop","text":"Stack\uc5d0 Pop \uac00\ub2a5\ud55c Screen\uc774 \uc788\uc5b4\uc57c\uc9c0\ub9cc Pop \ud574\uc90c. Navigator . of ( context ). maybePop ();","title":"mayPop"},{"location":"Flutter/Theory/Navigation/#willpopscope","text":"\uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \ucd5c\uc0c1\ub2e8\uc5d0 \uae30\ubcf8\uc801\uc73c\ub85c \ub4a4\ub85c\uac00\uae30\ub97c \ud560 \uc218 \uc788\ub294 \ubc84\ud2bc\uc774 \uc788\uc74c. \ucd5c\uc0c1\ub2e8\uc5d0\uc11c \uc774 \ub4a4\ub85c\uac00\uae30 \ubc84\ud2bc\uc744 \ub204\ub974\uac8c\ub418\uba74 \uc571\uc744 \ub098\uac00\uac8c \ub418\ub294 \uc774\ub97c \ubc29\uc9c0\ud574\uc90c. WillPopScope ( onWillPop: () async { // async \uaf2d \uc0ac\uc6a9\ud574\uc918\uc57c \ud568. // \uc5ec\uae30\uc5d0 false\ub97c return \ud574\uc8fc\uac8c \ub418\uba74 \ucd5c\uc0c1\ub2e8\uc5d0\uc11c \ub4a4\ub85c\uac00\uae30 Button\uc73c\ub85c \uc571\uc744 \ube60\uc838\ub098\uac08 \uc218 \uc5c6\uac8c \ub428. return false ; }, \ucc38\uc870","title":"WillPopScope"},{"location":"Flutter/Theory/Navigation/#canpop","text":"Pop \ub3d9\uc791\uc740 \ud558\uc9c0 \uc54a\uace0 Stack\uc5d0 \uc5b4\ub5a4 \uac12\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uc6a9\ub3c4. print(Navigator.of(context) .canPop()); // \uc544\ubb34\ub7f0 pop \ub3d9\uc791\ub3c4 \ud558\uc9c0 \uc54a\uace0 return\ub9cc \uc8fc\ub294 \uc5ed\ud560.","title":"canPop"},{"location":"Flutter/Theory/Navigation/#error-fix","text":"","title":"Error Fix"},{"location":"Flutter/Theory/Navigation/#pop-error","text":"return \uac12 \uc5c6\ub2e4\uace0 () \uc548\uc368\uc8fc\uba74 pop\uc774 \ub3d9\uc791\uc744 \uc548\ud568.","title":"Pop Error"},{"location":"Flutter/Theory/Navigation/#reference","text":"\ucc38\uc870","title":"Reference"},{"location":"Flutter/Theory/SQL/","text":"SQL\uc774\ub780? Structured Query Language\uc758 \uc904\uc784\ub9d0\ub85c \uad00\uacc4\ud615 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uad00\ub9ac \uc2dc\uc2a4\ud15c(RDBMS)\uc758 \ub370\uc774\ud130\ub97c \uad00\ub9ac \ubc0f \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \uc124\uacc4\ub41c \ud2b9\uc218 \ubaa9\uc801\uc758 \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\uc774\uba70 \uc9c8\uc758(Query) \uc5b8\uc5b4\ub77c\uace0 \ubd88\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4. Normalization(\uc815\uaddc\ud654) \uc911\ubcf5\uc744 \ucd5c\uc18c\ud654\ud558\uac8c \ub370\uc774\ud130\ub97c \uad6c\uc870\ud654 \ud558\ub294 \ud504\ub85c\uc138\uc2a4\ub97c \uc815\uaddc\ud654(Normalization)\uc774\ub77c\uace0 \ud55c\ub2e4. \ubb38\ubc95 Select : \ub370\uc774\ud130 \uc120\ud0dd\ud558\uae30 SELECT { column } FROM { table } \ucd9c\ub825 List [ { map } , { map } ... { map }] Update : \ub370\uc774\ud130 \uc5c5\ub370\uc774\ud2b8\ud558\uae30 UPDATE { table } SET { column } WHERE { condition } Where \uc870\uac74\uc5d0 \uc77c\uce58\ud558\ub294 Colum\uc774 Set\uc5d0\uc11c \uba85\uc2dc\ud55c \uc870\uac74\uc73c\ub85c \ubcc0\uacbd\ub41c\ub2e4. Delete : \ub370\uc774\ud130 \uc0ad\uc81c\ud558\uae30 DELETE FROM { table } WHERE { condition } Where \uc870\uac74\uc5d0 \uc77c\uce58\ud558\ub294 Column\uc774 \uc804\ubd80 \uc0ad\uc81c\ub41c\ub2e4. Insert - \uc0c8\ub85c\uc6b4 \ub370\uc774\ud130 \ucd94\uac00\ud558\uae30 INSERT INTO { table } { column1 , column2 ...) VALUES { value1 , value2 ... } Column\uc5d0\ud574\ub2f9\ud558\ub294 Value\ub97c \ucd94\uac00\ud574\uc900\ub2e4. Join - \uc5ec\ub7ec \ud14c\uc774\ube14 \ud569\uce58\uae30 Many to One Relationship SELECT { column } FROM { table } INNER JOIN { other_table } ON { condition } contion : table1.colum = table2.colum // \uc774 \ub450\uac1c\uc758 column\uc774 \ub3d9\uc77c\ud558\ub2e4\ub294 \uc758\ubbf8\uc774\ub2e4. Many to Many Relationship Join\uc758 \uc885\ub958","title":"SQL"},{"location":"Flutter/Theory/SQL/#sql","text":"Structured Query Language\uc758 \uc904\uc784\ub9d0\ub85c \uad00\uacc4\ud615 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uad00\ub9ac \uc2dc\uc2a4\ud15c(RDBMS)\uc758 \ub370\uc774\ud130\ub97c \uad00\ub9ac \ubc0f \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \uc124\uacc4\ub41c \ud2b9\uc218 \ubaa9\uc801\uc758 \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\uc774\uba70 \uc9c8\uc758(Query) \uc5b8\uc5b4\ub77c\uace0 \ubd88\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4.","title":"SQL\uc774\ub780?"},{"location":"Flutter/Theory/SQL/#normalization","text":"\uc911\ubcf5\uc744 \ucd5c\uc18c\ud654\ud558\uac8c \ub370\uc774\ud130\ub97c \uad6c\uc870\ud654 \ud558\ub294 \ud504\ub85c\uc138\uc2a4\ub97c \uc815\uaddc\ud654(Normalization)\uc774\ub77c\uace0 \ud55c\ub2e4.","title":"Normalization(\uc815\uaddc\ud654)"},{"location":"Flutter/Theory/SQL/#_1","text":"","title":"\ubb38\ubc95"},{"location":"Flutter/Theory/SQL/#select","text":"SELECT { column } FROM { table } \ucd9c\ub825 List [ { map } , { map } ... { map }]","title":"Select : \ub370\uc774\ud130 \uc120\ud0dd\ud558\uae30"},{"location":"Flutter/Theory/SQL/#update","text":"UPDATE { table } SET { column } WHERE { condition } Where \uc870\uac74\uc5d0 \uc77c\uce58\ud558\ub294 Colum\uc774 Set\uc5d0\uc11c \uba85\uc2dc\ud55c \uc870\uac74\uc73c\ub85c \ubcc0\uacbd\ub41c\ub2e4.","title":"Update : \ub370\uc774\ud130 \uc5c5\ub370\uc774\ud2b8\ud558\uae30"},{"location":"Flutter/Theory/SQL/#delete","text":"DELETE FROM { table } WHERE { condition } Where \uc870\uac74\uc5d0 \uc77c\uce58\ud558\ub294 Column\uc774 \uc804\ubd80 \uc0ad\uc81c\ub41c\ub2e4.","title":"Delete : \ub370\uc774\ud130 \uc0ad\uc81c\ud558\uae30"},{"location":"Flutter/Theory/SQL/#insert-","text":"INSERT INTO { table } { column1 , column2 ...) VALUES { value1 , value2 ... } Column\uc5d0\ud574\ub2f9\ud558\ub294 Value\ub97c \ucd94\uac00\ud574\uc900\ub2e4.","title":"Insert - \uc0c8\ub85c\uc6b4 \ub370\uc774\ud130 \ucd94\uac00\ud558\uae30"},{"location":"Flutter/Theory/SQL/#join-","text":"","title":"Join - \uc5ec\ub7ec \ud14c\uc774\ube14 \ud569\uce58\uae30"},{"location":"Flutter/Theory/SQL/#many-to-one-relationship","text":"SELECT { column } FROM { table } INNER JOIN { other_table } ON { condition } contion : table1.colum = table2.colum // \uc774 \ub450\uac1c\uc758 column\uc774 \ub3d9\uc77c\ud558\ub2e4\ub294 \uc758\ubbf8\uc774\ub2e4.","title":"Many to One Relationship"},{"location":"Flutter/Theory/SQL/#many-to-many-relationship","text":"","title":"Many to Many Relationship"},{"location":"Flutter/Theory/SQL/#join","text":"","title":"Join\uc758 \uc885\ub958"},{"location":"Flutter/Theory/dropdown_button/","text":"\uc0ac\uc6a9\ubc29\ubc95 items\uc5d0\ub294 DropdownMenumItem \ud0c0\uc785\uc758 \ub9ac\uc2a4\ud2b8\uac00 \ub4e4\uc5b4\uac00\uc57c \ud568. DropdownButton < String > ( // (1) value: selectedButton , isDense: true , elevation: 16 , items: [ 'Apple' , 'Cherry' , 'Mango' ] . map (( item ) => DropdownMenuItem < String > ( value: item , child: Text ( item , ), )) . toList (), onChanged: ( String ? val ) { setState (() { if ( val != null ) { selectedButton = val ! ; } }); }), Error Fix items Error(\uc911\ubcf5\uac12 \uc624\ub958) \uc5d0\ub7ec \ub0b4\uc6a9 : 'items == null || items.isEmpty || value == null || items.where((DropdownMenuItem item) { return item.value == value; }).length == 1' How To Fix? Stackoverflow\ub97c \ub4a4\uc838\ubcf4\ub2e4\uac00 \uac12\uc774 \ud558\ub098\ub9cc \uc874\uc7ac(\uc911\ubcf5\ub418\uba74 \uc548\ub428)\ud574\uc57c \ud55c\ub2e4\ub294\ub370\uc11c \uc544\uc774\ub514\uc5b4\ub97c \uc5bb\uc5b4\uc11c items\uc5d0 \ub4e4\uc5b4\uac00\ub294 List\ub97c Set\ub85c \ubcc0\uacbd\ud574\uc90c. \uadf8 \uc774\ud6c4\ub85c \ud574\uacb0 \ub428. DropdownButton < String > ( value: selectedButton , isDense: true , elevation: 16 , items: [ 'Apple' , 'Cherry' , 'Mango' ]. toSet // \uc774 \ubd80\ubd84 \uc218\uc815 . map (( item ) => DropdownMenuItem < String > ( value: item , child: Text ( item , ), )) . toList (), onChanged: ( String ? val ) { setState (() { if ( val != null ) { selectedButton = val ! ; } }); }),","title":"Dropdown Buttom"},{"location":"Flutter/Theory/dropdown_button/#_1","text":"items\uc5d0\ub294 DropdownMenumItem \ud0c0\uc785\uc758 \ub9ac\uc2a4\ud2b8\uac00 \ub4e4\uc5b4\uac00\uc57c \ud568. DropdownButton < String > ( // (1) value: selectedButton , isDense: true , elevation: 16 , items: [ 'Apple' , 'Cherry' , 'Mango' ] . map (( item ) => DropdownMenuItem < String > ( value: item , child: Text ( item , ), )) . toList (), onChanged: ( String ? val ) { setState (() { if ( val != null ) { selectedButton = val ! ; } }); }),","title":"\uc0ac\uc6a9\ubc29\ubc95"},{"location":"Flutter/Theory/dropdown_button/#error-fix","text":"","title":"Error Fix"},{"location":"Flutter/Theory/dropdown_button/#items-error","text":"\uc5d0\ub7ec \ub0b4\uc6a9 : 'items == null || items.isEmpty || value == null || items.where((DropdownMenuItem item) { return item.value == value; }).length == 1' How To Fix? Stackoverflow\ub97c \ub4a4\uc838\ubcf4\ub2e4\uac00 \uac12\uc774 \ud558\ub098\ub9cc \uc874\uc7ac(\uc911\ubcf5\ub418\uba74 \uc548\ub428)\ud574\uc57c \ud55c\ub2e4\ub294\ub370\uc11c \uc544\uc774\ub514\uc5b4\ub97c \uc5bb\uc5b4\uc11c items\uc5d0 \ub4e4\uc5b4\uac00\ub294 List\ub97c Set\ub85c \ubcc0\uacbd\ud574\uc90c. \uadf8 \uc774\ud6c4\ub85c \ud574\uacb0 \ub428. DropdownButton < String > ( value: selectedButton , isDense: true , elevation: 16 , items: [ 'Apple' , 'Cherry' , 'Mango' ]. toSet // \uc774 \ubd80\ubd84 \uc218\uc815 . map (( item ) => DropdownMenuItem < String > ( value: item , child: Text ( item , ), )) . toList (), onChanged: ( String ? val ) { setState (() { if ( val != null ) { selectedButton = val ! ; } }); }),","title":"items Error(\uc911\ubcf5\uac12 \uc624\ub958)"},{"location":"Flutter/Theory/error_fix/","text":"MultiDex Error \ube4c\ub4dc \ud560 \ub54c \uc0dd\uae30\ub294 Error \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c\ub9cc \ubc1c\uc0dd\ud568, \ud070 \uc571\uc744 \ube4c\ub4e4\ud558\ub824\uba74 MultiDex\ub97c \ud65c\uc131\ud654 \uc2dc\ucf1c\uc918\uc57c \ud55c\ub2e4\ub294\ub370 \uc774\ub97c \uc218\ub3d9\uc73c\ub85c \ud65c\uc131\ud654 \uc2dc\ucf1c\uc8fc\ub294 \ubc29\ubc95\uc784. /app/build.gradle defaultConfig { ... multiDexEnabled true } and /app/build.gradle dependencies { ... implementation 'com.android.support:multidex:1.0.3' } reference stack overflow","title":"Error Fix"},{"location":"Flutter/Theory/error_fix/#multidex-error","text":"\ube4c\ub4dc \ud560 \ub54c \uc0dd\uae30\ub294 Error \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c\ub9cc \ubc1c\uc0dd\ud568, \ud070 \uc571\uc744 \ube4c\ub4e4\ud558\ub824\uba74 MultiDex\ub97c \ud65c\uc131\ud654 \uc2dc\ucf1c\uc918\uc57c \ud55c\ub2e4\ub294\ub370 \uc774\ub97c \uc218\ub3d9\uc73c\ub85c \ud65c\uc131\ud654 \uc2dc\ucf1c\uc8fc\ub294 \ubc29\ubc95\uc784. /app/build.gradle defaultConfig { ... multiDexEnabled true } and /app/build.gradle dependencies { ... implementation 'com.android.support:multidex:1.0.3' }","title":"MultiDex Error"},{"location":"Flutter/Theory/error_fix/#reference","text":"stack overflow","title":"reference"},{"location":"Flutter/Theory/notification/","text":"SnackBar final snackBar = SnackBar ( content: const Text ( 'Snack bar render successful' ), action: SnackBarAction ( label: 'Undo' , // Snackbar\uc758 Label\uc5d0 \ud45c\uc2dc\ub420 \uc774\ub984 onPressed: () {}, // Label(Undo) \ub20c\ub800\uc744 \ub54c \uc2e4\ud589\ub420 \ud568\uc218 ), //(1) ); ScaffoldMessenger ScaffoldMessenger . of ( context ). showSnackBar ( SnackBar ( content: Text ( '\uc778\ud130\ub137 \uc5f0\uacb0\uc774 \uc6d0\ud65c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.' )) ); showDialog showDialog ( context: context , builder: ( context ) { // (1) return AlertDialog ( title: Text ( \"Warning\" ), content: Text ( \"At least one wallet is required\" ), actions: [ IconButton ( onPressed: (){ Navigator . of ( context ). pop ();}, icon: Icon ( Icons . close )), ], ); });","title":"Notification"},{"location":"Flutter/Theory/notification/#snackbar","text":"final snackBar = SnackBar ( content: const Text ( 'Snack bar render successful' ), action: SnackBarAction ( label: 'Undo' , // Snackbar\uc758 Label\uc5d0 \ud45c\uc2dc\ub420 \uc774\ub984 onPressed: () {}, // Label(Undo) \ub20c\ub800\uc744 \ub54c \uc2e4\ud589\ub420 \ud568\uc218 ), //(1) );","title":"SnackBar"},{"location":"Flutter/Theory/notification/#scaffoldmessenger","text":"ScaffoldMessenger . of ( context ). showSnackBar ( SnackBar ( content: Text ( '\uc778\ud130\ub137 \uc5f0\uacb0\uc774 \uc6d0\ud65c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.' )) );","title":"ScaffoldMessenger"},{"location":"Flutter/Theory/notification/#showdialog","text":"showDialog ( context: context , builder: ( context ) { // (1) return AlertDialog ( title: Text ( \"Warning\" ), content: Text ( \"At least one wallet is required\" ), actions: [ IconButton ( onPressed: (){ Navigator . of ( context ). pop ();}, icon: Icon ( Icons . close )), ], ); });","title":"showDialog"},{"location":"Flutter/Theory/text_form_field/","text":"Introduce Text Form Field\ub97c \ud65c\uc6a9\ud558\uba74 \ub2e4\uc218\uc758 Text Field\uac00 \uc788\uc5b4\ub3c4 \ub370\uc774\ud130\ub97c \ub3d9\uc2dc\uc5d0 \uc27d\uac8c \uc785\ub825 \ubc1b\uace0 \uc5d0\ub7ec \ucc98\ub9ac\ub97c \uc27d\uac8c \ud574\uc904 \uc218 \uc788\uc74c. How To Use Global Key \uc120\uc5b8 \ub2e4\uc74c\uacfc \uac19\uc740 GlobalKey\ub97c \uc120\uc5b8\ud574\uc8fc\uace0 class _SettingBottomSheetState extends State < SettingBottomSheet > { final GlobalKey < FormState > formKey = GlobalKey (); Text Form Field\uc758 \ubd80\ubaa8 \uc704\uc82f\uc744 Form()\uc73c\ub85c \uac10\uc2f8\uc900 \ud6c4 key \uc544\uae4c \uc120\uc5b8\ud55c formKey\ub97c \ub123\uc5b4\uc90c. body: Form ( key: formKey , child: TabBarView ( validator: \uc624\ub958 \ucc98\ub9ac \uc544\ub798\uc640 \uac19\uc774 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uba74 Text Form Field\uc5d0 \uc785\ub825\ub41c \uac12\uc774 null\uc778\uc9c0, null\uc774 \uc544\ub2c8\ub77c\ub3c4 \uc785\ub825\ub41c \uac12\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc74c. \uc870\uac74\ubb38\uc758 \uc21c\uc11c\uac00 \uc911\uc694\ud55c\ub370 null\uc778\uc9c0 \uba3c\uc800 \uccb4\ud06c\ub97c \ud558\uc9c0 \uc54a\uace0 .isEmpty\ub97c \ub123\uc73c\uba74 \uc624\ub958\uac00 \ub0a8, \uadf8 \uc774\uc720\ub294 || \uc870\uac74\uc744 \uc5f0\uc0b0\ud560 \ub54c \uccab \uc870\uac74\uc774 false\uba74 \uc774\ud6c4 \uc870\uac74\uc744 \uc9c4\ud589\uc744 \ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38. \uc989, .isEmpty\ub294 \uac12\uc774 \uc788\ub2e4\ub294 \uc804\uc81c\ud558\uc5d0 \uac12\uc774 \ube44\uc5b4\uc788\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc784. TextFormField ( validator: ( String ? val ) { // null\uc778\uc9c0 check if ( val == null || val . isEmpty ) { return tr ( 'Input Value' ); } return null ; }, onSaved onSaved\ub294 formKey.current!.save()\ub97c \uc2e4\ud589\ud588\uc744 \ub54c \uc2e4\ud589\ub418\ub294 \ud568\uc218\uc784. \uc608\uc2dc \ud83d\udc47 onSaved: ( val ) { setState (() { periodStartTime = DateTime ( DateTime . parse ( val ! ). year , DateTime . parse ( val ! ). month , DateTime . parse ( val ! ). day , ); }); }, onSavePressed() \ubcf4\ud1b5 \uc800\uc7a5 \ubc84\ud2bc\uc744 \ud1b5\ud574\uc11c validator\uc640 onSaved\uc5d0 \uc791\uc131\ud55c \ud568\uc218\ub97c \ud65c\uc6a9\ud574\uc8fc\uace0 \uc788\uc74c. void onSavePressed () async { if ( formKey . currentState == null ) { return null ; } // \uc624\ub958\uac00 \uc5c6\ub2e4\uba74 \uc2e4\ud589\ud558\ub294 \ubd80\ubd84 if ( formKey . currentState ! . validate ()) { formKey . currentState ! . save (); Navigator . of ( context ). pop (); } }","title":"Text Form Field"},{"location":"Flutter/Theory/text_form_field/#introduce","text":"Text Form Field\ub97c \ud65c\uc6a9\ud558\uba74 \ub2e4\uc218\uc758 Text Field\uac00 \uc788\uc5b4\ub3c4 \ub370\uc774\ud130\ub97c \ub3d9\uc2dc\uc5d0 \uc27d\uac8c \uc785\ub825 \ubc1b\uace0 \uc5d0\ub7ec \ucc98\ub9ac\ub97c \uc27d\uac8c \ud574\uc904 \uc218 \uc788\uc74c.","title":"Introduce"},{"location":"Flutter/Theory/text_form_field/#how-to-use","text":"","title":"How To Use"},{"location":"Flutter/Theory/text_form_field/#global-key","text":"\ub2e4\uc74c\uacfc \uac19\uc740 GlobalKey\ub97c \uc120\uc5b8\ud574\uc8fc\uace0 class _SettingBottomSheetState extends State < SettingBottomSheet > { final GlobalKey < FormState > formKey = GlobalKey (); Text Form Field\uc758 \ubd80\ubaa8 \uc704\uc82f\uc744 Form()\uc73c\ub85c \uac10\uc2f8\uc900 \ud6c4 key \uc544\uae4c \uc120\uc5b8\ud55c formKey\ub97c \ub123\uc5b4\uc90c. body: Form ( key: formKey , child: TabBarView (","title":"Global Key \uc120\uc5b8"},{"location":"Flutter/Theory/text_form_field/#validator","text":"\uc544\ub798\uc640 \uac19\uc774 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uba74 Text Form Field\uc5d0 \uc785\ub825\ub41c \uac12\uc774 null\uc778\uc9c0, null\uc774 \uc544\ub2c8\ub77c\ub3c4 \uc785\ub825\ub41c \uac12\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc74c. \uc870\uac74\ubb38\uc758 \uc21c\uc11c\uac00 \uc911\uc694\ud55c\ub370 null\uc778\uc9c0 \uba3c\uc800 \uccb4\ud06c\ub97c \ud558\uc9c0 \uc54a\uace0 .isEmpty\ub97c \ub123\uc73c\uba74 \uc624\ub958\uac00 \ub0a8, \uadf8 \uc774\uc720\ub294 || \uc870\uac74\uc744 \uc5f0\uc0b0\ud560 \ub54c \uccab \uc870\uac74\uc774 false\uba74 \uc774\ud6c4 \uc870\uac74\uc744 \uc9c4\ud589\uc744 \ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38. \uc989, .isEmpty\ub294 \uac12\uc774 \uc788\ub2e4\ub294 \uc804\uc81c\ud558\uc5d0 \uac12\uc774 \ube44\uc5b4\uc788\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc784. TextFormField ( validator: ( String ? val ) { // null\uc778\uc9c0 check if ( val == null || val . isEmpty ) { return tr ( 'Input Value' ); } return null ; },","title":"validator: \uc624\ub958 \ucc98\ub9ac"},{"location":"Flutter/Theory/text_form_field/#onsaved","text":"onSaved\ub294 formKey.current!.save()\ub97c \uc2e4\ud589\ud588\uc744 \ub54c \uc2e4\ud589\ub418\ub294 \ud568\uc218\uc784. \uc608\uc2dc \ud83d\udc47 onSaved: ( val ) { setState (() { periodStartTime = DateTime ( DateTime . parse ( val ! ). year , DateTime . parse ( val ! ). month , DateTime . parse ( val ! ). day , ); }); },","title":"onSaved"},{"location":"Flutter/Theory/text_form_field/#onsavepressed","text":"\ubcf4\ud1b5 \uc800\uc7a5 \ubc84\ud2bc\uc744 \ud1b5\ud574\uc11c validator\uc640 onSaved\uc5d0 \uc791\uc131\ud55c \ud568\uc218\ub97c \ud65c\uc6a9\ud574\uc8fc\uace0 \uc788\uc74c. void onSavePressed () async { if ( formKey . currentState == null ) { return null ; } // \uc624\ub958\uac00 \uc5c6\ub2e4\uba74 \uc2e4\ud589\ud558\ub294 \ubd80\ubd84 if ( formKey . currentState ! . validate ()) { formKey . currentState ! . save (); Navigator . of ( context ). pop (); } }","title":"onSavePressed()"},{"location":"Flutter/Theory/widget/","text":"Widget Tree\ub780? Widget\ub4e4\uc758 \ubd80\ubaa8, \uc790\uc2dd \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294\uac78 Widget Tree\ub77c\uace0 \ud568. Widget \uc774\ub860 Widget\uc740 \ubaa8\ub450 \"\ubd88\ubcc0\"\uc758 \ubc95\uce59\uc744 \uac16\uace0 \uc788\uc74c. \ud558\uc9c0\ub9cc \uc704\uc82f\uc758 \uac12\uc744 \ubcc0\uacbd\ud574\uc57c\ud560 \ub54c\uac00 \uc788\uc74c. \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \uae30\uc874 \uc704\uc82f\uc744 \uc0ad\uc81c\ud574\ubc84\ub9ac\uace0 \uc644\uc804 \uc0c8\ub85c\uc6b4 \uc704\uc82f\uc73c\ub85c \ub300\uccb4\ud568. StatelessWidget\uc758 \ub77c\uc774\ud504 \uc0ac\uc774\ud074 Constructor \ub85c \uc0dd\uc131\uc774\ub418\uace0 \uc0dd\uc131\uc774 \ub418\uc790\ub9c8\uc790 build \ud568\uc218\uac00 \uc2e4\ud589\ub428. \uc774\uc804 Container \uc608\uc81c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \uc0c8\ub85c\uc6b4 \uc704\uc82f\uc744 \ub9cc\ub4e4\uc5b4\ubc84\ub9bc. \ud558\ub098\uc758 StatelessWidhget\uc740 \ub77c\uc774\ud504 \uc0ac\uc774\ud074\ub3d9\uc548 \ub2e8 \ud55c\ubc88\ub9cc build \ud568\uc218\ub97c \uc2e4\ud589\ud568. (\uc989, \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \ud604\uc7ac widget\uc744 \uc0ad\uc81c\ud558\uace0 \uc0c8\ub85c\uc6b4 widget\uc744 \uc0dd\uc131.) StatefulWidget StatefulWidget\uc758 \ub77c\uc774\ud504 \uc0ac\uc774\ud074 \uc0c1\ud0dc\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 Widget. build \ud568\uc218\ub97c \uc5ec\ub7ec\ubc88 \ubc14\uafd4\uc918\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 StatefullWidget\uacfc State class\ub85c \ub098\ub258\uc5c8\uc74c. \ud30c\ub77c\ubbf8\ud130\uac00 \ubc14\ub00c\uc5c8\uc744 \ub54c \ub77c\uc774\ud504 \uc0ac\uc774\ud074 \uc6d0\ub798 \uc788\ub358 State\ub97c \uc7ac\ud65c\uc6a9 \ud568. setState\ub97c \uc2e4\ud589\ud588\uc744 \ub54c \ub77c\uc774\ud504 \uc0ac\uc774\ud074 Parameter\ub97c \ubcc0\uacbd\ud558\uba74\uc11c \uc704\uc82f\uc744 \ud1b5\ud558\uc9c0 \uc54a\uace0 State \uc548\uc5d0\uc11c \uc9c1\uc811 \uc2e4\ud589\ud568. Reference re-build \ub418\uc5b4\ub3c4 re-load\ub418\uc9c0 \uc54a\ub294 const property initState() \ub3d9\uc601\uc0c1 \ud50c\ub808\uc774\uc5b4 \ud504\ub85c\uc81d\ud2b8 \uc911\uc5d0\uc11c .widget\uc758 \uc758\ubbf8 Sate<>\uc5d0\uc11c .widget\uc744 \uc0ac\uc6a9\ud574\uc11c Stateful Widget\uc5d0\uc11c \uc120\uc5b8\ud55c \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc74c. \uc544\ub798\ub294 random_number_gernerater Project\uc5d0\uc11c \uc0ac\uc6a9\ud55c \ubaa8\uc2b5. class SettingScreen extends StatefulWidget { final int maxNumber ; const SettingScreen ({ required this . maxNumber , Key ? key }) : super ( key: key ); @override State < SettingScreen > createState () => _SettingScreenState (); } class _SettingScreenState extends State < SettingScreen > { double maxNumber = 1000 ; // setting State\uac00 \uc7ac\uc0dd\uc131\ub418\ub294 \uc21c\uac04\uc5d0\ub9cc \uc774 \uc778\uc2a4\ud134\uc2a4\uac00 \uc2e4\ud589\ub428. // pop\uc744 \ud588\ub2e4\uac00 push\ub97c \ud558\uba74 Stateful Widget\uc744 \uc7ac\uc0dd\uc131\ud574\uc90c. @override void initState () { super . initState (); /******** widget Keyword\ub97c \uc0ac\uc6a9\ud574\uc11c Stateful Widget\uc5d0\uc11c \uc120\uc5b8\ud55c \ubcc0\uc218\uc5d0 \uc811\uadfc\uc774 \uac00\ub2a5\ud568. \uc989, home_screen\uc5d0\uc11c \uc804\ub2ec\ud574\uc900 maxNumber\ub294 Stateful Widget\uc5d0 \ub2f4\uae30\uace0 initState()\ub85c State\uac00 \uc0dd\uc131\uc774 \ub420 \ub54c widget keyword\ub97c \uc0ac\uc6a9\ud574\uc11c Stateful widget\uc5d0 \uc804\ub2ec\ubc1b\uc740 maxNumber\ub97c State\uc758 maxNumber\uc5d0 \ub123\uc5b4\uc90c. */ maxNumber = widget . maxNumber . toDouble (); } Shortcut stless : stless\uae4c\uc9c0 \uc785\ub825\ud558\uace0 Enter\ub97c \ub204\ub974\uba74 Stateless Widget\uc774 \uc790\ub3d9\uc73c\ub85c \uc785\ub825\ub428. stful : stful\uae4c\uc9c0 \uc785\ub825\ud558\uace0 Enter\ub97c \ub204\ub974\uba74 Stateful Widget\uc774 \uc790\ub3d9\uc73c\ub85c \uc785\ub825\ub428. Stateless Widget > Stateful Widget : Stateless Widget\uc744 \ub4dc\ub798\uadf8\ud558\uace0 \"\uc6b0\ud074\ub9ad\" > \"Show Context Actions\" (\ub2e8\ucd95\ud0a4 : Option + Enter) > \"Convert to Stateful Widget\"\uc744 \ud074\ub9ad\ud558\uba74 Stateless Widget\uc5d0\uc11c Stateful Widget\uc73c\ub85c \ubcc0\ud568. Reference \ucc38\uc870 Source Code","title":"Widget: Stateful Widget"},{"location":"Flutter/Theory/widget/#widget-tree","text":"Widget\ub4e4\uc758 \ubd80\ubaa8, \uc790\uc2dd \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294\uac78 Widget Tree\ub77c\uace0 \ud568.","title":"Widget Tree\ub780?"},{"location":"Flutter/Theory/widget/#widget","text":"Widget\uc740 \ubaa8\ub450 \"\ubd88\ubcc0\"\uc758 \ubc95\uce59\uc744 \uac16\uace0 \uc788\uc74c. \ud558\uc9c0\ub9cc \uc704\uc82f\uc758 \uac12\uc744 \ubcc0\uacbd\ud574\uc57c\ud560 \ub54c\uac00 \uc788\uc74c. \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \uae30\uc874 \uc704\uc82f\uc744 \uc0ad\uc81c\ud574\ubc84\ub9ac\uace0 \uc644\uc804 \uc0c8\ub85c\uc6b4 \uc704\uc82f\uc73c\ub85c \ub300\uccb4\ud568.","title":"Widget \uc774\ub860"},{"location":"Flutter/Theory/widget/#statelesswidget","text":"Constructor \ub85c \uc0dd\uc131\uc774\ub418\uace0 \uc0dd\uc131\uc774 \ub418\uc790\ub9c8\uc790 build \ud568\uc218\uac00 \uc2e4\ud589\ub428. \uc774\uc804 Container \uc608\uc81c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \uc0c8\ub85c\uc6b4 \uc704\uc82f\uc744 \ub9cc\ub4e4\uc5b4\ubc84\ub9bc. \ud558\ub098\uc758 StatelessWidhget\uc740 \ub77c\uc774\ud504 \uc0ac\uc774\ud074\ub3d9\uc548 \ub2e8 \ud55c\ubc88\ub9cc build \ud568\uc218\ub97c \uc2e4\ud589\ud568. (\uc989, \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \ud604\uc7ac widget\uc744 \uc0ad\uc81c\ud558\uace0 \uc0c8\ub85c\uc6b4 widget\uc744 \uc0dd\uc131.)","title":"StatelessWidget\uc758 \ub77c\uc774\ud504 \uc0ac\uc774\ud074"},{"location":"Flutter/Theory/widget/#statefulwidget","text":"","title":"StatefulWidget"},{"location":"Flutter/Theory/widget/#statefulwidget_1","text":"\uc0c1\ud0dc\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 Widget. build \ud568\uc218\ub97c \uc5ec\ub7ec\ubc88 \ubc14\uafd4\uc918\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 StatefullWidget\uacfc State class\ub85c \ub098\ub258\uc5c8\uc74c.","title":"StatefulWidget\uc758 \ub77c\uc774\ud504 \uc0ac\uc774\ud074"},{"location":"Flutter/Theory/widget/#initstate","text":"\ub3d9\uc601\uc0c1 \ud50c\ub808\uc774\uc5b4 \ud504\ub85c\uc81d\ud2b8 \uc911\uc5d0\uc11c","title":"initState()"},{"location":"Flutter/Theory/widget/#widget_1","text":"Sate<>\uc5d0\uc11c .widget\uc744 \uc0ac\uc6a9\ud574\uc11c Stateful Widget\uc5d0\uc11c \uc120\uc5b8\ud55c \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc74c. \uc544\ub798\ub294 random_number_gernerater Project\uc5d0\uc11c \uc0ac\uc6a9\ud55c \ubaa8\uc2b5. class SettingScreen extends StatefulWidget { final int maxNumber ; const SettingScreen ({ required this . maxNumber , Key ? key }) : super ( key: key ); @override State < SettingScreen > createState () => _SettingScreenState (); } class _SettingScreenState extends State < SettingScreen > { double maxNumber = 1000 ; // setting State\uac00 \uc7ac\uc0dd\uc131\ub418\ub294 \uc21c\uac04\uc5d0\ub9cc \uc774 \uc778\uc2a4\ud134\uc2a4\uac00 \uc2e4\ud589\ub428. // pop\uc744 \ud588\ub2e4\uac00 push\ub97c \ud558\uba74 Stateful Widget\uc744 \uc7ac\uc0dd\uc131\ud574\uc90c. @override void initState () { super . initState (); /******** widget Keyword\ub97c \uc0ac\uc6a9\ud574\uc11c Stateful Widget\uc5d0\uc11c \uc120\uc5b8\ud55c \ubcc0\uc218\uc5d0 \uc811\uadfc\uc774 \uac00\ub2a5\ud568. \uc989, home_screen\uc5d0\uc11c \uc804\ub2ec\ud574\uc900 maxNumber\ub294 Stateful Widget\uc5d0 \ub2f4\uae30\uace0 initState()\ub85c State\uac00 \uc0dd\uc131\uc774 \ub420 \ub54c widget keyword\ub97c \uc0ac\uc6a9\ud574\uc11c Stateful widget\uc5d0 \uc804\ub2ec\ubc1b\uc740 maxNumber\ub97c State\uc758 maxNumber\uc5d0 \ub123\uc5b4\uc90c. */ maxNumber = widget . maxNumber . toDouble (); }","title":".widget\uc758 \uc758\ubbf8"},{"location":"Flutter/Theory/widget/#shortcut","text":"stless : stless\uae4c\uc9c0 \uc785\ub825\ud558\uace0 Enter\ub97c \ub204\ub974\uba74 Stateless Widget\uc774 \uc790\ub3d9\uc73c\ub85c \uc785\ub825\ub428. stful : stful\uae4c\uc9c0 \uc785\ub825\ud558\uace0 Enter\ub97c \ub204\ub974\uba74 Stateful Widget\uc774 \uc790\ub3d9\uc73c\ub85c \uc785\ub825\ub428. Stateless Widget > Stateful Widget : Stateless Widget\uc744 \ub4dc\ub798\uadf8\ud558\uace0 \"\uc6b0\ud074\ub9ad\" > \"Show Context Actions\" (\ub2e8\ucd95\ud0a4 : Option + Enter) > \"Convert to Stateful Widget\"\uc744 \ud074\ub9ad\ud558\uba74 Stateless Widget\uc5d0\uc11c Stateful Widget\uc73c\ub85c \ubcc0\ud568.","title":"Shortcut"},{"location":"Flutter/Theory/widget/#reference_1","text":"\ucc38\uc870 Source Code","title":"Reference"},{"location":"Flutter/dartGrammar/DartGrammar/","text":"\uae30\ubcf8\uc790\ub8cc\ud615 \uae30\ubcf8 \uc790\ub8cc\ud615 Final\uacfc Const Final\uacfc Const const re-build const\ub85c \uc120\uc5b8\ub41c property \ub294 re-build\ub97c \ud574\ub3c4 \ub2e4\uc2dc load\ub418\uc9c0 \uc54a\uc74c. \uc544\ub798\ub294 hot restart\ub97c \ud1b5\ud574\uc11c \ucc98\uc74c build\uac00 \ub418\uace0 \ub09c \uc774\ud6c4\uc5d0 \"\ube4c\ub4dc\" button\uc744 \ub20c\ub824\ub3c4 const\ub85c \uc120\uc5b8\ub41c label2 property\ub294 \ub2e4\uc2dc load\ub418\uc9c0 \uc54a\ub294 \ud604\uc0c1 \ud83d\udc47. Reference setState\ub780? \ud0c0\uc785 \ud0c0\uc785 \uac80\uc0ac (is) Operation:: is\uc640 is! \uce90\uc2a4\ud305(as) \uae30\ubcf8 \uc0ac\uc6a9\ubc95 \ud83d\udc47 \uc778\uc2a4\ud134\uc2a4 as type // (1) \uc778\uc2a4\ud134\uc2a4\ub97c type\uc73c\ub85c \ubcc0\ud658\ud574\uc90c. \ud0c0\uc785\uc744 \uba85\uc2dc\ud560 \ub54c\ub3c4 \uc0ac\uc6a9\ud568. \ub2e4\uc6b4 \uce90\uc2a4\ud305 : \ubd80\ubaa8 \ud074\ub798\uc2a4\ub97c \uc790\uc2dd \ud074\ub798\uc2a4\ub85c \ud0c0\uc785 \uce90\uc2a4\ud305 \uc5c5 \uce90\uc2a4\ud305 : \uc790\uc2dd \ud074\ub798\uc2a4\ub97c \ubd80\ubaa8 \ud074\ub798\uc2a4\ub85c \ud0c0\uc785 \uce90\uc2a4\ud305 \ud558\ub294 \uac83\uc744 \uc5c5 \uce90\uc2a4\ud305\uc774\ub77c\uace0 \ud568 List\uc640 Map List\uc640 Map sublist(List \ubc94\uc704) start\uc640 end \uc0ac\uc774\uc758 \uc694\uc18c\uac00 \ud3ec\ud568 \ub41c \uc0c8 \ubaa9\ub85d\uc744 \ubc18\ud658\ud568. end\uc5d0 \uc368\uc838 \uc788\ub294 \uc778\ub371\uc2a4\ub294 \ud3ec\ud568\ud558\uc9c0 \uc54a\uc74c. List . sublist ( start index >= , end index < ) \uc608\uc2dc for ( StatModel stat in value ) { // key \uac12\uc5d0 dataTime\uc744 \ub123\uc5b4\uc90c\uc73c\ub85c\uc368 \ub370\uc774\ud130\uac00 \uc808\ub300\ub85c \uc911\ubcf5\ub418\uc9c0 \uc54a\uc74c box . put ( stat . dataTime . toString (), stat ); final allKeys = box . keys . toList (); if ( allKeys . length > 24 ) { final deleteKeys = allKeys . sublist ( 0 , allKeys . length - 24 ); // \ub9c8\uc9c0\ub9c9 24\uac1c \ub0a8\uae30\uace0 \ub2e4 \uc9c0\uc6c0 box . deleteAll ( deleteKeys ); } } List To Map asMap()\uc744 \uc0ac\uc6a9\ud558\uba74 \"Key = List index number\" : \"value = List Value\" \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\ub428. \uc989, asMap\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 Map\uc758 Key\uac12\uc774 List\uc758 index number \uac00 \ub418\ub294 \uac83. List . asMap () - Reference : \uc608\uc81c\ucf54\ub4dc entries Map \uc790\ub8cc\ud615\uc5d0 .entries\ub97c \ud558\uba74 MapEntry(key: value)\ub85c \ubaa8\ub4e0 Map\uc758 \uac12\ub4e4\uc744 \ucd9c\ub825\ud574\uc90c. Set Set .from .from\uc5d0 \ub123\uc5b4\uc900 \ubc18\ubcf5 \uac00\ub2a5\ud55c instance\uc5d0\uc11c \uc911\ubcf5\uc744 \uc81c\uac70\ud574\uc90c. Set < E > . from ( Iterable elements ) \uc870\uac74\ubb38 \uc870\uac74\ubb38 \ubc18\ubcf5\ubb38 \ubc18\ubcf5\ubb38 enum enum Value\ub97c String\uc73c\ub85c \uac00\uc838\uc624\uae30 (.name) \ud568\uc218\uc640 typedef signature: return \ud0c0\uc785\uacfc parameter\uc758 \ud615\ud0dc\ub97c signature\ub77c\uace0 \ud568 typedef\ub85c \uc120\uc5b8\ud574\ub193\uc740 \ud568\uc218\uc5d0 \uac19\uc740 \uc2dc\uadf8\ub2c8\ucc98\uc758 \ud568\uc218\ub97c \ub300\uc785\ud574\uc8fc\uace0 \ud574\ub2f9 typedef\ub97c \uc774\uc6a9\ud574\uc11c \uc5f0\uc0b0\uc744 \uc218\ud589\ud574\uc90c. // typedef \uc120\uc5b8 typedef Operation = int Function ( int x , int y , int z ); // \uac19\uc740 \uc2dc\uadf8\ub2c8\ucc98\uc758 method \uc120\uc5b8. int substact ( int x , int y , int z ) => x - y - z ; // \uc0ac\uc6a9, \uac19\uc740 \uc2dc\uadf8\ub2c8\ucc98\uc758 \ud568\uc218\ub97c \ub300\uc785\ud574\uc11c \uc5f0\uc0b0\ud574\uc90c. operation = substact ; int result2 = operation ( 30 , 20 , 5 ); \ud568\uc218\uc640 typedef","title":"Basic Grammar"},{"location":"Flutter/dartGrammar/DartGrammar/#_1","text":"\uae30\ubcf8 \uc790\ub8cc\ud615","title":"\uae30\ubcf8\uc790\ub8cc\ud615"},{"location":"Flutter/dartGrammar/DartGrammar/#final-const","text":"Final\uacfc Const","title":"Final\uacfc Const"},{"location":"Flutter/dartGrammar/DartGrammar/#const-re-build","text":"const\ub85c \uc120\uc5b8\ub41c property \ub294 re-build\ub97c \ud574\ub3c4 \ub2e4\uc2dc load\ub418\uc9c0 \uc54a\uc74c. \uc544\ub798\ub294 hot restart\ub97c \ud1b5\ud574\uc11c \ucc98\uc74c build\uac00 \ub418\uace0 \ub09c \uc774\ud6c4\uc5d0 \"\ube4c\ub4dc\" button\uc744 \ub20c\ub824\ub3c4 const\ub85c \uc120\uc5b8\ub41c label2 property\ub294 \ub2e4\uc2dc load\ub418\uc9c0 \uc54a\ub294 \ud604\uc0c1 \ud83d\udc47.","title":"const re-build"},{"location":"Flutter/dartGrammar/DartGrammar/#reference","text":"setState\ub780?","title":"Reference"},{"location":"Flutter/dartGrammar/DartGrammar/#_2","text":"","title":"\ud0c0\uc785"},{"location":"Flutter/dartGrammar/DartGrammar/#is","text":"Operation:: is\uc640 is!","title":"\ud0c0\uc785 \uac80\uc0ac (is)"},{"location":"Flutter/dartGrammar/DartGrammar/#as","text":"\uae30\ubcf8 \uc0ac\uc6a9\ubc95 \ud83d\udc47 \uc778\uc2a4\ud134\uc2a4 as type // (1) \uc778\uc2a4\ud134\uc2a4\ub97c type\uc73c\ub85c \ubcc0\ud658\ud574\uc90c. \ud0c0\uc785\uc744 \uba85\uc2dc\ud560 \ub54c\ub3c4 \uc0ac\uc6a9\ud568. \ub2e4\uc6b4 \uce90\uc2a4\ud305 : \ubd80\ubaa8 \ud074\ub798\uc2a4\ub97c \uc790\uc2dd \ud074\ub798\uc2a4\ub85c \ud0c0\uc785 \uce90\uc2a4\ud305 \uc5c5 \uce90\uc2a4\ud305 : \uc790\uc2dd \ud074\ub798\uc2a4\ub97c \ubd80\ubaa8 \ud074\ub798\uc2a4\ub85c \ud0c0\uc785 \uce90\uc2a4\ud305 \ud558\ub294 \uac83\uc744 \uc5c5 \uce90\uc2a4\ud305\uc774\ub77c\uace0 \ud568","title":"\uce90\uc2a4\ud305(as)"},{"location":"Flutter/dartGrammar/DartGrammar/#list-map","text":"List\uc640 Map","title":"List\uc640 Map"},{"location":"Flutter/dartGrammar/DartGrammar/#sublistlist","text":"start\uc640 end \uc0ac\uc774\uc758 \uc694\uc18c\uac00 \ud3ec\ud568 \ub41c \uc0c8 \ubaa9\ub85d\uc744 \ubc18\ud658\ud568. end\uc5d0 \uc368\uc838 \uc788\ub294 \uc778\ub371\uc2a4\ub294 \ud3ec\ud568\ud558\uc9c0 \uc54a\uc74c. List . sublist ( start index >= , end index < ) \uc608\uc2dc for ( StatModel stat in value ) { // key \uac12\uc5d0 dataTime\uc744 \ub123\uc5b4\uc90c\uc73c\ub85c\uc368 \ub370\uc774\ud130\uac00 \uc808\ub300\ub85c \uc911\ubcf5\ub418\uc9c0 \uc54a\uc74c box . put ( stat . dataTime . toString (), stat ); final allKeys = box . keys . toList (); if ( allKeys . length > 24 ) { final deleteKeys = allKeys . sublist ( 0 , allKeys . length - 24 ); // \ub9c8\uc9c0\ub9c9 24\uac1c \ub0a8\uae30\uace0 \ub2e4 \uc9c0\uc6c0 box . deleteAll ( deleteKeys ); } }","title":"sublist(List \ubc94\uc704)"},{"location":"Flutter/dartGrammar/DartGrammar/#list-to-map","text":"asMap()\uc744 \uc0ac\uc6a9\ud558\uba74 \"Key = List index number\" : \"value = List Value\" \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\ub428. \uc989, asMap\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 Map\uc758 Key\uac12\uc774 List\uc758 index number \uac00 \ub418\ub294 \uac83. List . asMap () - Reference : \uc608\uc81c\ucf54\ub4dc","title":"List To Map"},{"location":"Flutter/dartGrammar/DartGrammar/#entries","text":"Map \uc790\ub8cc\ud615\uc5d0 .entries\ub97c \ud558\uba74 MapEntry(key: value)\ub85c \ubaa8\ub4e0 Map\uc758 \uac12\ub4e4\uc744 \ucd9c\ub825\ud574\uc90c.","title":"entries"},{"location":"Flutter/dartGrammar/DartGrammar/#set","text":"Set","title":"Set"},{"location":"Flutter/dartGrammar/DartGrammar/#from","text":".from\uc5d0 \ub123\uc5b4\uc900 \ubc18\ubcf5 \uac00\ub2a5\ud55c instance\uc5d0\uc11c \uc911\ubcf5\uc744 \uc81c\uac70\ud574\uc90c. Set < E > . from ( Iterable elements )","title":".from"},{"location":"Flutter/dartGrammar/DartGrammar/#_3","text":"\uc870\uac74\ubb38","title":"\uc870\uac74\ubb38"},{"location":"Flutter/dartGrammar/DartGrammar/#_4","text":"\ubc18\ubcf5\ubb38","title":"\ubc18\ubcf5\ubb38"},{"location":"Flutter/dartGrammar/DartGrammar/#enum","text":"enum","title":"enum"},{"location":"Flutter/dartGrammar/DartGrammar/#value-string-name","text":"","title":"Value\ub97c String\uc73c\ub85c \uac00\uc838\uc624\uae30 (.name)"},{"location":"Flutter/dartGrammar/DartGrammar/#typedef","text":"signature: return \ud0c0\uc785\uacfc parameter\uc758 \ud615\ud0dc\ub97c signature\ub77c\uace0 \ud568 typedef\ub85c \uc120\uc5b8\ud574\ub193\uc740 \ud568\uc218\uc5d0 \uac19\uc740 \uc2dc\uadf8\ub2c8\ucc98\uc758 \ud568\uc218\ub97c \ub300\uc785\ud574\uc8fc\uace0 \ud574\ub2f9 typedef\ub97c \uc774\uc6a9\ud574\uc11c \uc5f0\uc0b0\uc744 \uc218\ud589\ud574\uc90c. // typedef \uc120\uc5b8 typedef Operation = int Function ( int x , int y , int z ); // \uac19\uc740 \uc2dc\uadf8\ub2c8\ucc98\uc758 method \uc120\uc5b8. int substact ( int x , int y , int z ) => x - y - z ; // \uc0ac\uc6a9, \uac19\uc740 \uc2dc\uadf8\ub2c8\ucc98\uc758 \ud568\uc218\ub97c \ub300\uc785\ud574\uc11c \uc5f0\uc0b0\ud574\uc90c. operation = substact ; int result2 = operation ( 30 , 20 , 5 ); \ud568\uc218\uc640 typedef","title":"\ud568\uc218\uc640 typedef"},{"location":"Flutter/dartGrammar/Date/","text":"DateTime \ud604\uc7ac \uc2dc\uac04 \uad6c\ud558\uae30 DateTime now = DateTime . now (); DateTime Type\ubcc4 \ucd9c\ub825 print ( now . year ); print ( now . month ); print ( now . day ); print ( now . hour ); print ( now . second ); print ( now . minute ); print ( now . microsecond ); \uc2dc\uac04 \uc9c0\uc815\ud558\uae30 DateTime SpecifyDay = DateTime ( int year , int month , int day , int time , int minutes , int seconds , ); \uac04\uaca9 \uad6c\ud558\uae30 targetTime . differenc ( comparisonTime ); // tagetTime - comparisonTime \uc2dc\uac04 \uc0ac\uce59\uc5f0\uc0b0 targetTime . add ( Duration ( hours: 10 ); // \uc2dc\uac04 \ub367\uc148 targetTime . subtract ( Duration ( minutes: 5 )); // \ubd84 \ube84\uc148 \ud3ec\ub9e4\ud305 \ubb38\uc790\uc5f4\uc744 DateTime\uc73c\ub85c DateTime . parse ( String ) \uc608\uc2dc void main () { String nowTime = '2021-10-23 14:00:32' ; print ( DateTime . parse ( nowTime )); // \ucd9c\ub825 print ( DateTime . parse ( nowTime ). runtimeType ); // DateTime \ucd9c\ub825 } DateTime\uc744 \ubb38\uc790\uc5f4\ub85c \ud3ec\ub9f7 \ud615\uc2dd\ub300\ub85c DateTime\uc744 \ud3ec\ub9f7\ud574\uc11c \ubb38\uc790\uc5f4\ub85c return \ud574\uc90c. \ud3ec\ub9f7 \ud615\uc2dd\uc740 \uad6c\uae00\ub9c1\ud574\ubcf4\uba74 \ub9ce\uc774 \ub098\uc634. DateFormat ( \ud3ec\ub9f7 \ud615\uc2dd ). format ( DateTime something ) \uc608\uc2dc import 'package:intl/intl.dart' ; void main () { DateTime timeOfBirth = DateTime ( 2021 , 12 , 21 , 14 , 30 ); DateTime birthDay = DateTime ( 2021 , 12 , 21 ); if ( birthDay == timeOfBirth ) { print ( 'birthDay and timeOfBirth is a same time' ); // \ucd9c\ub825 \uc548\ub428 } else { print ( 'birthDay and timeOfBirth is not a same time' ); // \ucd9c\ub825 } if ( DateFormat ( 'yyyy-MM-dd' ). format ( timeOfBirth ) == DateFormat ( 'yyyy-MM-dd' ). format ( birthDay )) { print ( 'DateFormat is working' ); // \ucd9c\ub825 } } Reference Dart Date","title":"Dart Date"},{"location":"Flutter/dartGrammar/Date/#datetime","text":"","title":"DateTime"},{"location":"Flutter/dartGrammar/Date/#_1","text":"DateTime now = DateTime . now ();","title":"\ud604\uc7ac \uc2dc\uac04 \uad6c\ud558\uae30"},{"location":"Flutter/dartGrammar/Date/#datetime-type","text":"print ( now . year ); print ( now . month ); print ( now . day ); print ( now . hour ); print ( now . second ); print ( now . minute ); print ( now . microsecond );","title":"DateTime Type\ubcc4 \ucd9c\ub825"},{"location":"Flutter/dartGrammar/Date/#_2","text":"DateTime SpecifyDay = DateTime ( int year , int month , int day , int time , int minutes , int seconds , );","title":"\uc2dc\uac04 \uc9c0\uc815\ud558\uae30"},{"location":"Flutter/dartGrammar/Date/#_3","text":"targetTime . differenc ( comparisonTime ); // tagetTime - comparisonTime","title":"\uac04\uaca9 \uad6c\ud558\uae30"},{"location":"Flutter/dartGrammar/Date/#_4","text":"targetTime . add ( Duration ( hours: 10 ); // \uc2dc\uac04 \ub367\uc148 targetTime . subtract ( Duration ( minutes: 5 )); // \ubd84 \ube84\uc148","title":"\uc2dc\uac04 \uc0ac\uce59\uc5f0\uc0b0"},{"location":"Flutter/dartGrammar/Date/#_5","text":"","title":"\ud3ec\ub9e4\ud305"},{"location":"Flutter/dartGrammar/Date/#datetime_1","text":"DateTime . parse ( String )","title":"\ubb38\uc790\uc5f4\uc744 DateTime\uc73c\ub85c"},{"location":"Flutter/dartGrammar/Date/#_6","text":"void main () { String nowTime = '2021-10-23 14:00:32' ; print ( DateTime . parse ( nowTime )); // \ucd9c\ub825 print ( DateTime . parse ( nowTime ). runtimeType ); // DateTime \ucd9c\ub825 }","title":"\uc608\uc2dc"},{"location":"Flutter/dartGrammar/Date/#datetime_2","text":"\ud3ec\ub9f7 \ud615\uc2dd\ub300\ub85c DateTime\uc744 \ud3ec\ub9f7\ud574\uc11c \ubb38\uc790\uc5f4\ub85c return \ud574\uc90c. \ud3ec\ub9f7 \ud615\uc2dd\uc740 \uad6c\uae00\ub9c1\ud574\ubcf4\uba74 \ub9ce\uc774 \ub098\uc634. DateFormat ( \ud3ec\ub9f7 \ud615\uc2dd ). format ( DateTime something )","title":"DateTime\uc744 \ubb38\uc790\uc5f4\ub85c"},{"location":"Flutter/dartGrammar/Date/#_7","text":"import 'package:intl/intl.dart' ; void main () { DateTime timeOfBirth = DateTime ( 2021 , 12 , 21 , 14 , 30 ); DateTime birthDay = DateTime ( 2021 , 12 , 21 ); if ( birthDay == timeOfBirth ) { print ( 'birthDay and timeOfBirth is a same time' ); // \ucd9c\ub825 \uc548\ub428 } else { print ( 'birthDay and timeOfBirth is not a same time' ); // \ucd9c\ub825 } if ( DateFormat ( 'yyyy-MM-dd' ). format ( timeOfBirth ) == DateFormat ( 'yyyy-MM-dd' ). format ( birthDay )) { print ( 'DateFormat is working' ); // \ucd9c\ub825 } }","title":"\uc608\uc2dc"},{"location":"Flutter/dartGrammar/Date/#reference","text":"Dart Date","title":"Reference"},{"location":"Flutter/dartGrammar/asyncProgramming/","text":"Async Programming \uae30\uc874\uc758 cpu\uc758 \ub3d9\uc791\uc740 \uc2e4\ud589\ud55c \ucf54\ub4dc\uac00 \uc788\uc73c\uba74 \ud574\ub2f9 \ucf54\ub4dc\uac00 \uc2e4\ud589\uc774 \ub420 \ub54c\uae4c\uc9c0 \ub2e4\uc74c \ub3d9\uc791\uc744 \uc2e4\ud589\ud560 \uc218 \uc5c6\uc5c8\uc74c. \uc774\ub294 http \uc694\uccad \uac19\uc740 \uc791\uc5c5\uc744 \ud560 \ub54c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294\ub370, \uc11c\ubc84\uc5d0\uc11c \uc694\uccad\uac12\uc744 \ubc1b\uc544\uc624\uae30 \uc804\uae4c\uc9c0 cpu\uac00 \uc218\ud589\ud560 \uc218 \uc788\ub294 \ub3d9\uc791\uc774 \uc544\ubb34\uac83\ub3c4 \uc5c6\uc5b4\uc9c4\ub2e4\ub294 \ubb38\uc81c\uc810\uc774 \ubc1c\uc0dd\ud568. \ub2e4\uc74c\uc740 \uae30\uc874 cpu\uc758 \ub3d9\uc791 \ubc29\uc2dd \ud83d\udc47 \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574\uc11c \ub4f1\uc7a5\ud55c \ubc29\uc2dd\uc774 \ubc14\ub85c Async Programming\uc778\ub370, \ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d \uc774\ub77c\uace0\ub3c4 \ubd88\ub9ac\uba70 \ud604\uc7ac \uc2e4\ud589\uc911\uc778 \ub3d9\uc791\uc774 \uc644\ub8cc\ub418\uc9c0 \uc54a\ub354\ub77c\ub3c4 \ub2e4\uc74c \ub3d9\uc791\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc744 \ub73b\ud568. Future and await Future \ub370\uc774\ud130 \ud0c0\uc785\uc73c\ub85c \uc815\uc758\ud560 \uc218 \uc788\uc73c\uba70, Future \uad00\ub828 method \ub4f1\uc744 \uc368\uc904 \uc218 \uc788\uc74c. Future < returnType > functionName ( Parameter1 , Parameter2 ...) async { Future.delayed \uccab \ud30c\ub77c\ubbf8\ud130\uc5d0\ub294 \uc9c0\uc5f0\ud560 \uae30\uac04(\uc5bc\ub9c8\ub098 \uc9c0\uc5f0\ud560\uac74\uc9c0) Duration \uac12\uc744 \ub123\uc5b4\uc8fc\uace0 \ub450 \ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc5d0\ub294 \uc9c0\uc5f0\uc2dc\uac04\uc774 \uc9c0\ub09c \ud6c4 \uc2e4\ud589\ud560 \ud568\uc218\ub97c \ub123\uc5b4\uc90c. Future . delayed ( Duration ( seconds: ), () {} await await\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc120 \ud568\uc218\uc5d0\ub2e4\uac00 async\ub97c \ucd94\uac00\ud574\uc57c\uc9c0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c. void main () async { await \uc2e4\ud589\ud560\ud568\uc218 (); } ConnectionState FutureBuilder\uc758 \ucc98\ub9ac \uc0c1\ud0dc\uc5d0 \ub530\ub77c\uc11c \uc5b4\ub5a4 \uc870\uac74\uc744 \ub123\uace0 \uc218\ud589\ud574\uc904 \uc218 \uc788\uc74c. \uc544\ub798\uc640 \uac19\uc740 \ud615\ud0dc\ub85c \uc0ac\uc6a9\ud568. snapshot . connectionState State\uc758 \uc885\ub958 enum ConnectionState { none , // Future \uc0c1\ud0dc\uac00 \uc5c6\uc74c. waiting , // Future \uc2e4\ud589 \ud6c4 \ub85c\ub529 \uc911. // Stream\uc5d0\uc11c \ud558\ub098 \uc774\uc0c1\uc758 return \uac12\uc744 \ubc18\ud658 \ud588\uc9c0\ub9cc \uc544\uc9c1 \uc644\uc804\ud788 \ub05d\ub098\uc9c0 \uc54a\uc558\uc744 \ub54c active , done , // Future \uc2e4\ud589 \uc644\ub8cc. } Future \ubcd1\ub82c\ub85c \ub370\uc774\ud130 \ucc98\ub9ac\ud558\uae30 Future\ub4e4\uc744 List\uc5d0 \ub123\uc5b4\uc900 \ub4a4 List\ub97c \ud55c\uaebc\ubc88\uc5d0 .wait()\ud574\uc11c \ub370\uc774\ud130\ub97c \ubc1b\uc544\uc90c. Future\ub97c \ud558\ub098\ud558\ub098 \uc2e4\ud589\uc2dc\ud0a4\uace0 \uae30\ub2e4\ub9ac\ub294 \uac83\uc774 \uc544\ub2cc, Future\ub97c \ubaa8\ub450 \ub3d9\uc2dc\uc5d0 \uc2e4\ud589\uc2dc\ud0a4\uace0 \uc804\ubd80 \ub05d\ub0a0 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub824\uc11c \uc2dc\uac04\uc744 \ub2e8\ucd95\uc2dc\ud0ac \uc218 \uc788\uc74c. List < Future > futures = []; for ( ItemCode itemCode in ItemCode . values ) { futures . add ( StatRepository . fetchData ( itemCode: itemCode , ), ); } // futures\uc5d0 \ub4e4\uc5b4\uc788\ub294 \ubaa8\ub4e0 Future\uc774 \uc2e4\ud589\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bc // \ud574\ub2f9 Future \uc2e4\ud589\uacb0\uacfc \uac12, \uc989, List<StatModel>\uc774 \ub4e4\uc5b4\uac10 final results = await Future . wait ( futures ); Future and await \ucc38\uc870 Future and await \ucc38\uc870 1 Future and await \ucc38\uc870 2 Stream \ub9ac\uc2a4\ub108\ub97c \uc0dd\uc131\ud574\uc11c \ub9ac\uc2a4\ub108\uac00 \ub9ac\uc2a4\ub2dd\uc744 \ud558\uace0 \uc788\ub294 \ub3d9\uc548 controller\uac00 \uac12\uc744 \ub123\uc5b4\uc8fc\uba74 \ud568\uc218\uac00 \uc2e4\ud589\ub428. \uc774 \ub54c return \ub418\ub294 \uac12\ub4e4\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \ubc18\ud658\ud574\uc90c. StreamBuilderBuilder < generic > { stream: \uc2e4\ud589\ud560 \ud568\uc218 } Stream < generic > \uc2e4\ud589\ud560 \ud568\uc218 () async * { yield \ubc18\ud658 \uac12 ; } aysnc* stream\uc744 \uc0ac\uc6a9\ud560 \ub54c \uc0ac\uc6a9\ud574\uc918\uc57c \ud558\ub294 \ud0a4\uc6cc\ub4dc, \uc5f0\uc0b0\uc744 \ubbf8\ub9ac \ub2e4 \ud558\ub294\uac8c \uc544\ub2c8\ub77c, \uc694\uccad\uc774 \uc788\uc744 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9ac\ub2e4\uac00 \uc694\uccad\uc774 \ub4e4\uc5b4\uc624\uba74 \uadf8 \ub54c \uc5f0\uc0b0\uc744 \uc2dc\uc791\ud558\ub294 \uac83\uc774\ub77c\uace0 \ud568. yield return\uacfc \uc720\uc0ac\ud55c \ud589\uc704\ub97c \ud558\uc9c0\ub9cc \ud568\uc218\ub97c \uc885\ub8cc\ud558\uc9c0 \uc54a\uace0 \ubc18\ubcf5\ub418\ub294 return \uac12\ub4e4\uc744 \uc804\ubd80 return \ud574\uc904 \uc218 \uc788\uc74c. \uc608\uc2dc import 'dart:async' ; void main () { final controller = StreamController (); // asBroadcastStream\uc744 \uc774\uc6a9\ud574\uc918\uc57c \uc5ec\ub7ec\ubc88 listening\uc744 \ud560 \uc218 \uc788\uc74c. final Stream = controller . stream . asBroadcastStream (); // \uc9dd\uc218\ub9cc \ucd9c\ub825 // \ub9ac\uc2a4\ub108 \uc0dd\uc131, \uc774 \ub9ac\uc2a4\ub108\uac00 \ub9ac\uc2a4\ub2dd\uc744 \ud558\uace0 \uc788\uc744 \ub54c \uac12\uc774 \ub4e4\uc5b4\uc624\uba74 \ud568\uc218\uac00 \uc2e4\ud589\ub428. final streamListener1 = Stream . where (( val ) => val % 2 == 0 ). listen (( val ) { print ( 'Listener1 : $ val ' ); }); // \ud640\uc218\ub9cc \ucd9c\ub825 final streamListener2 = Stream . where (( val ) => val % 2 == 1 ). listen (( val ) { print ( 'Listener2 : $ val ' ); }); // controller\ub97c \ud1b5\ud574\uc11c \ub9ac\uc2a4\ub108\uc5d0 \uac12\uc744 \ub123\uc5b4\uc90c controller . sink . add ( 1 ); controller . sink . add ( 2 ); controller . sink . add ( 3 ); controller . sink . add ( 4 ); } Reference \ucc38\uc870 1 \ucc38\uc870 2 \ucc38\uc870 3","title":"\ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d"},{"location":"Flutter/dartGrammar/asyncProgramming/#async-programming","text":"\uae30\uc874\uc758 cpu\uc758 \ub3d9\uc791\uc740 \uc2e4\ud589\ud55c \ucf54\ub4dc\uac00 \uc788\uc73c\uba74 \ud574\ub2f9 \ucf54\ub4dc\uac00 \uc2e4\ud589\uc774 \ub420 \ub54c\uae4c\uc9c0 \ub2e4\uc74c \ub3d9\uc791\uc744 \uc2e4\ud589\ud560 \uc218 \uc5c6\uc5c8\uc74c. \uc774\ub294 http \uc694\uccad \uac19\uc740 \uc791\uc5c5\uc744 \ud560 \ub54c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294\ub370, \uc11c\ubc84\uc5d0\uc11c \uc694\uccad\uac12\uc744 \ubc1b\uc544\uc624\uae30 \uc804\uae4c\uc9c0 cpu\uac00 \uc218\ud589\ud560 \uc218 \uc788\ub294 \ub3d9\uc791\uc774 \uc544\ubb34\uac83\ub3c4 \uc5c6\uc5b4\uc9c4\ub2e4\ub294 \ubb38\uc81c\uc810\uc774 \ubc1c\uc0dd\ud568. \ub2e4\uc74c\uc740 \uae30\uc874 cpu\uc758 \ub3d9\uc791 \ubc29\uc2dd \ud83d\udc47 \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574\uc11c \ub4f1\uc7a5\ud55c \ubc29\uc2dd\uc774 \ubc14\ub85c Async Programming\uc778\ub370, \ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d \uc774\ub77c\uace0\ub3c4 \ubd88\ub9ac\uba70 \ud604\uc7ac \uc2e4\ud589\uc911\uc778 \ub3d9\uc791\uc774 \uc644\ub8cc\ub418\uc9c0 \uc54a\ub354\ub77c\ub3c4 \ub2e4\uc74c \ub3d9\uc791\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc744 \ub73b\ud568.","title":"Async Programming"},{"location":"Flutter/dartGrammar/asyncProgramming/#future-and-await","text":"Future \ub370\uc774\ud130 \ud0c0\uc785\uc73c\ub85c \uc815\uc758\ud560 \uc218 \uc788\uc73c\uba70, Future \uad00\ub828 method \ub4f1\uc744 \uc368\uc904 \uc218 \uc788\uc74c. Future < returnType > functionName ( Parameter1 , Parameter2 ...) async {","title":"Future and await"},{"location":"Flutter/dartGrammar/asyncProgramming/#futuredelayed","text":"\uccab \ud30c\ub77c\ubbf8\ud130\uc5d0\ub294 \uc9c0\uc5f0\ud560 \uae30\uac04(\uc5bc\ub9c8\ub098 \uc9c0\uc5f0\ud560\uac74\uc9c0) Duration \uac12\uc744 \ub123\uc5b4\uc8fc\uace0 \ub450 \ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc5d0\ub294 \uc9c0\uc5f0\uc2dc\uac04\uc774 \uc9c0\ub09c \ud6c4 \uc2e4\ud589\ud560 \ud568\uc218\ub97c \ub123\uc5b4\uc90c. Future . delayed ( Duration ( seconds: ), () {}","title":"Future.delayed"},{"location":"Flutter/dartGrammar/asyncProgramming/#await","text":"await\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc120 \ud568\uc218\uc5d0\ub2e4\uac00 async\ub97c \ucd94\uac00\ud574\uc57c\uc9c0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c. void main () async { await \uc2e4\ud589\ud560\ud568\uc218 (); }","title":"await"},{"location":"Flutter/dartGrammar/asyncProgramming/#connectionstate","text":"FutureBuilder\uc758 \ucc98\ub9ac \uc0c1\ud0dc\uc5d0 \ub530\ub77c\uc11c \uc5b4\ub5a4 \uc870\uac74\uc744 \ub123\uace0 \uc218\ud589\ud574\uc904 \uc218 \uc788\uc74c. \uc544\ub798\uc640 \uac19\uc740 \ud615\ud0dc\ub85c \uc0ac\uc6a9\ud568. snapshot . connectionState State\uc758 \uc885\ub958 enum ConnectionState { none , // Future \uc0c1\ud0dc\uac00 \uc5c6\uc74c. waiting , // Future \uc2e4\ud589 \ud6c4 \ub85c\ub529 \uc911. // Stream\uc5d0\uc11c \ud558\ub098 \uc774\uc0c1\uc758 return \uac12\uc744 \ubc18\ud658 \ud588\uc9c0\ub9cc \uc544\uc9c1 \uc644\uc804\ud788 \ub05d\ub098\uc9c0 \uc54a\uc558\uc744 \ub54c active , done , // Future \uc2e4\ud589 \uc644\ub8cc. }","title":"ConnectionState"},{"location":"Flutter/dartGrammar/asyncProgramming/#future","text":"Future\ub4e4\uc744 List\uc5d0 \ub123\uc5b4\uc900 \ub4a4 List\ub97c \ud55c\uaebc\ubc88\uc5d0 .wait()\ud574\uc11c \ub370\uc774\ud130\ub97c \ubc1b\uc544\uc90c. Future\ub97c \ud558\ub098\ud558\ub098 \uc2e4\ud589\uc2dc\ud0a4\uace0 \uae30\ub2e4\ub9ac\ub294 \uac83\uc774 \uc544\ub2cc, Future\ub97c \ubaa8\ub450 \ub3d9\uc2dc\uc5d0 \uc2e4\ud589\uc2dc\ud0a4\uace0 \uc804\ubd80 \ub05d\ub0a0 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub824\uc11c \uc2dc\uac04\uc744 \ub2e8\ucd95\uc2dc\ud0ac \uc218 \uc788\uc74c. List < Future > futures = []; for ( ItemCode itemCode in ItemCode . values ) { futures . add ( StatRepository . fetchData ( itemCode: itemCode , ), ); } // futures\uc5d0 \ub4e4\uc5b4\uc788\ub294 \ubaa8\ub4e0 Future\uc774 \uc2e4\ud589\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bc // \ud574\ub2f9 Future \uc2e4\ud589\uacb0\uacfc \uac12, \uc989, List<StatModel>\uc774 \ub4e4\uc5b4\uac10 final results = await Future . wait ( futures );","title":"Future \ubcd1\ub82c\ub85c \ub370\uc774\ud130 \ucc98\ub9ac\ud558\uae30"},{"location":"Flutter/dartGrammar/asyncProgramming/#future-and-await_1","text":"Future and await \ucc38\uc870 1 Future and await \ucc38\uc870 2","title":"Future and await \ucc38\uc870"},{"location":"Flutter/dartGrammar/asyncProgramming/#stream","text":"\ub9ac\uc2a4\ub108\ub97c \uc0dd\uc131\ud574\uc11c \ub9ac\uc2a4\ub108\uac00 \ub9ac\uc2a4\ub2dd\uc744 \ud558\uace0 \uc788\ub294 \ub3d9\uc548 controller\uac00 \uac12\uc744 \ub123\uc5b4\uc8fc\uba74 \ud568\uc218\uac00 \uc2e4\ud589\ub428. \uc774 \ub54c return \ub418\ub294 \uac12\ub4e4\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \ubc18\ud658\ud574\uc90c. StreamBuilderBuilder < generic > { stream: \uc2e4\ud589\ud560 \ud568\uc218 } Stream < generic > \uc2e4\ud589\ud560 \ud568\uc218 () async * { yield \ubc18\ud658 \uac12 ; }","title":"Stream"},{"location":"Flutter/dartGrammar/asyncProgramming/#aysnc","text":"stream\uc744 \uc0ac\uc6a9\ud560 \ub54c \uc0ac\uc6a9\ud574\uc918\uc57c \ud558\ub294 \ud0a4\uc6cc\ub4dc, \uc5f0\uc0b0\uc744 \ubbf8\ub9ac \ub2e4 \ud558\ub294\uac8c \uc544\ub2c8\ub77c, \uc694\uccad\uc774 \uc788\uc744 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9ac\ub2e4\uac00 \uc694\uccad\uc774 \ub4e4\uc5b4\uc624\uba74 \uadf8 \ub54c \uc5f0\uc0b0\uc744 \uc2dc\uc791\ud558\ub294 \uac83\uc774\ub77c\uace0 \ud568.","title":"aysnc*"},{"location":"Flutter/dartGrammar/asyncProgramming/#yield","text":"return\uacfc \uc720\uc0ac\ud55c \ud589\uc704\ub97c \ud558\uc9c0\ub9cc \ud568\uc218\ub97c \uc885\ub8cc\ud558\uc9c0 \uc54a\uace0 \ubc18\ubcf5\ub418\ub294 return \uac12\ub4e4\uc744 \uc804\ubd80 return \ud574\uc904 \uc218 \uc788\uc74c.","title":"yield"},{"location":"Flutter/dartGrammar/asyncProgramming/#_1","text":"import 'dart:async' ; void main () { final controller = StreamController (); // asBroadcastStream\uc744 \uc774\uc6a9\ud574\uc918\uc57c \uc5ec\ub7ec\ubc88 listening\uc744 \ud560 \uc218 \uc788\uc74c. final Stream = controller . stream . asBroadcastStream (); // \uc9dd\uc218\ub9cc \ucd9c\ub825 // \ub9ac\uc2a4\ub108 \uc0dd\uc131, \uc774 \ub9ac\uc2a4\ub108\uac00 \ub9ac\uc2a4\ub2dd\uc744 \ud558\uace0 \uc788\uc744 \ub54c \uac12\uc774 \ub4e4\uc5b4\uc624\uba74 \ud568\uc218\uac00 \uc2e4\ud589\ub428. final streamListener1 = Stream . where (( val ) => val % 2 == 0 ). listen (( val ) { print ( 'Listener1 : $ val ' ); }); // \ud640\uc218\ub9cc \ucd9c\ub825 final streamListener2 = Stream . where (( val ) => val % 2 == 1 ). listen (( val ) { print ( 'Listener2 : $ val ' ); }); // controller\ub97c \ud1b5\ud574\uc11c \ub9ac\uc2a4\ub108\uc5d0 \uac12\uc744 \ub123\uc5b4\uc90c controller . sink . add ( 1 ); controller . sink . add ( 2 ); controller . sink . add ( 3 ); controller . sink . add ( 4 ); }","title":"\uc608\uc2dc"},{"location":"Flutter/dartGrammar/asyncProgramming/#reference","text":"\ucc38\uc870 1 \ucc38\uc870 2 \ucc38\uc870 3","title":"Reference"},{"location":"Flutter/dartGrammar/formatting/","text":"\ubb38\uc790\uc5f4 \ud3ec\ub9f7\ud305 \ubb38\uc790\uc5f4 \uac2f\uc218 \uc9c0\uc815\ud574\uc11c \ud328\ub529\ud558\uae30 padLeft (padRight\ub3c4 \uc874\uc7ac, padLeft\ub294 \uc67c\ucabd\uc5d0 \ud328\ub529\uc744 \ud558\ub294 \uac83\uc744 \uc758\ubbf8\ud568) \ubb38\uc790\uc5f4 . padLeft ( \ud328\ub529 \uac2f\uc218 , \ud328\ub529\ud560 \ubb38\uc790 ); \uc608\uc2dc void main () { final date = DateTime ( 2022 , 6 , 7 , 5 , 6 ); // 2022-6-7 5:6 \ucd9c\ub825 print ( ' ${ date . year } - ${ date . month } - ${ date . day } ${ date . hour } : ${ date . minute } ' ); // 2022-06-07 05:06 \ucd9c\ub825 print ( ''' ${ date . year } - ${ getTimeFormat ( date . month ) } - ${ getTimeFormat ( date . day ) } ${ getTimeFormat ( date . hour ) } : ${ getTimeFormat ( date . minute ) } ''' ); } // \uc2dc\uac04 \ub370\uc774\ud130 \ud3ec\ub9f7\ud305 \ud558\ub294 \ud568\uc218 String getTimeFormat ( int number ) { return number . toString (). padLeft ( 2 , '0' ); // \ucc44\uc6b8 \uac2f\uc218, \ucc44\uc6b8 \uae00\uc790 } \uc22b\uc790\ud615 \ud3ec\ub9e4\ud305 String to Int int.parse( \uc73c\ub85c \uc4f0\uc5ec\uc9c4 \ubb38\uc790\uc5f4 \ub370\uc774\ud130) String ten = '10' ; print ( int . parse ( ten ). runtimeType ); // int \ucd9c\ub825","title":"Formatting"},{"location":"Flutter/dartGrammar/formatting/#_1","text":"","title":"\ubb38\uc790\uc5f4 \ud3ec\ub9f7\ud305"},{"location":"Flutter/dartGrammar/formatting/#_2","text":"padLeft (padRight\ub3c4 \uc874\uc7ac, padLeft\ub294 \uc67c\ucabd\uc5d0 \ud328\ub529\uc744 \ud558\ub294 \uac83\uc744 \uc758\ubbf8\ud568) \ubb38\uc790\uc5f4 . padLeft ( \ud328\ub529 \uac2f\uc218 , \ud328\ub529\ud560 \ubb38\uc790 ); \uc608\uc2dc void main () { final date = DateTime ( 2022 , 6 , 7 , 5 , 6 ); // 2022-6-7 5:6 \ucd9c\ub825 print ( ' ${ date . year } - ${ date . month } - ${ date . day } ${ date . hour } : ${ date . minute } ' ); // 2022-06-07 05:06 \ucd9c\ub825 print ( ''' ${ date . year } - ${ getTimeFormat ( date . month ) } - ${ getTimeFormat ( date . day ) } ${ getTimeFormat ( date . hour ) } : ${ getTimeFormat ( date . minute ) } ''' ); } // \uc2dc\uac04 \ub370\uc774\ud130 \ud3ec\ub9f7\ud305 \ud558\ub294 \ud568\uc218 String getTimeFormat ( int number ) { return number . toString (). padLeft ( 2 , '0' ); // \ucc44\uc6b8 \uac2f\uc218, \ucc44\uc6b8 \uae00\uc790 }","title":"\ubb38\uc790\uc5f4 \uac2f\uc218 \uc9c0\uc815\ud574\uc11c \ud328\ub529\ud558\uae30"},{"location":"Flutter/dartGrammar/formatting/#_3","text":"","title":"\uc22b\uc790\ud615 \ud3ec\ub9e4\ud305"},{"location":"Flutter/dartGrammar/formatting/#string-to-int","text":"int.parse( \uc73c\ub85c \uc4f0\uc5ec\uc9c4 \ubb38\uc790\uc5f4 \ub370\uc774\ud130) String ten = '10' ; print ( int . parse ( ten ). runtimeType ); // int \ucd9c\ub825","title":"String to Int"},{"location":"Flutter/dartGrammar/functionalProgramming/","text":"map . map (( x ) => return ); . map (( x ){ code }; map \ucc38\uc870 reduce reduce \uc0ac\uc6a9\uc2dc parameter\uc758 data tyep\uacfc return result\uc758 data type\uc774 \uac19\uc544\uc57c \ud568. \ubc30\uc5f4\uc758 \ub05d\uae4c\uc9c0 loop \ubc1c\uc0dd, \uccab \ubc88\uc9f8\ub294 prev + next \ud574\uc8fc\uace0 \uadf8 \uc774\ud6c4\ub85c\ub294 total + next \ud574\uc90c. . reduce (( prev , next ) => code ); fold reduce\uc640\ub294 \ub2e4\ub974\uac8c return tyep\uacfc parameter type\uc774 \uac19\uc9c0 \uc54a\uc544\ub3c4 \ub428. \ub300\uc2e0, \uc120\uc5b8\ud574\uc904 \ub54c return type\uc744 \uc124\uc815\ud574\uc918\uc57c \ud558\uba70 (prev, next)\uc804\uc5d0 \uccab \ubc88\uc9f8 parameter\ub97c \ubc1b\uace0 \uc774\ub97c \uccab \ubc88\uc9f8 \uacc4\uc0b0\uac12\uc73c\ub85c \uc0ac\uc6a9\ud568. . fold < returnType > ( 0 , ( prev , next ) => prev + next ); reduce and fold \ucc38\uc870 where where((x) => \uc870\uac74); \uc870\uac74\uc774 true\uc778 \uac12\ub9cc return \ud574\uc90c. where (( x ) => \uc870\uac74 ); where \ucc38\uc870 Spread operator(...) List \uc774\uc5b4\uc8fc\ub294 \uae30\ub2a5(?) + \ucd94\uac00(22.10.14) : Collection \ud615\ud0dc\uc5d0 Collection \uac12\uc744 \ub300\uc785\ud560 \ub54c \uc0ac\uc6a9. \ubaa9\ub85d\uc758 \ubaa8\ub4e0 \uac12\uc744 \ub2e4\ub978 \ubaa9\ub85d\uc5d0 \uc0bd\uc785\ud574\uc90c. Spread Operator\ub97c \ud65c\uc6a9\ud55c ListTile \ucd9c\ub825 Drawer ( backgroundColor: darkColor , child: ListView ( children: [ DrawerHeader ( child: Text ( '\uc9c0\uc5ed \uc120\ud0dd' , style: TextStyle ( color: Colors . white , fontSize: 20.0 ), ), ), // cas ... regions . map ( ( e ) => ListTile ( // (1) tileColor: Colors . white , selectedTileColor: lightColor , selectedColor: Colors . black , selected: e == '\uc11c\uc6b8' , onTap: () {}, title: Text ( e ), ), ) . toList (), ], ), ); Reference Spread oprator \uacf5\uc2dd \ubb38\uc11c Spread oprator github functional programming \uc0ac\uc6a9 \uc608\uc2dc \uc608\uc2dc1 void main () { String number = '12345' ; final numberJPEG = number . split ( '' ). map (( x ) => ' $ x .jpeg' ). toList (); print ( numberJPEG ); example2 (); example3 (); } // Map > Map use map void example2 () { Map < String , String > harryPoter = { \"Harry Potter\" : \"\ud574\ub9ac \ud3ec\ud130\" , \"Ron Weasley\" : \"\ub860 \uc704\uc990\ub9ac\" , \"Hermione Granger\" : \"\ud5e4\ub974\ubbf8\uc628\ub290 \uadf8\ub808\uc778\uc800\" }; // map > map // Map Entry\ub294 class \uc784. MapEntry(key, value)\uc21c\uc73c\ub85c \ub418\uc5b4 \uc788\uc73c\uba70 key\uc640 value\uc5d0 \uac01\uac01 \uc811\uadfc\ud574\uc11c return \ud574\uc90c. final result = harryPoter . map (( key , value ) => MapEntry ( 'Harry Poter Character $ key ' , '\ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 $ value ' , ), ); print ( result ); final keys = harryPoter . keys . map (( x ) => 'HPC $ x ' ). toList ; print ( keys ); } void example3 () { Set blackPinkSet = { '\ub85c\uc81c' , '\uc9c0\uc218' , '\uc81c\ub2c8' , '\ub9ac\uc0ac' , }; final newSet = blackPinkSet . map (( x ) => '\ube14\ub799\ud551\ud06c $ x ' ); print ( newSet ); } > \ucd9c\ub825\uac12 [ 1 .jpeg, 2 .jpeg, 3 .jpeg, 4 .jpeg, 5 .jpeg ] { Harry Poter Character Harry Potter: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ud574\ub9ac \ud3ec\ud130, Harry Poter Character Ron Weasley: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ub860 \uc704\uc990\ub9ac, Harry Poter Character Hermione Granger: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ud5e4\ub974\ubbf8\uc628\ub290 \uadf8\ub808\uc778\uc800 } [ HPC Harry Potter, HPC Ron Weasley, HPC Hermione Granger ] ( \ube14\ub799\ud551\ud06c \ub85c\uc81c, \ube14\ub799\ud551\ud06c \uc9c0\uc218, \ube14\ub799\ud551\ud06c \uc81c\ub2c8, \ube14\ub799\ud551\ud06c \ub9ac\uc0ac ) \uc608\uc2dc2 void main () { List < Map < String , String >> people = [ { \"name\" : \"\ub85c\uc81c\" , \"group\" : \"\ube14\ub799\ud551\ud06c\" , }, { \"name\" : \"\uc9c0\uc218\" , \"group\" : \"\ube14\ub799\ud551\ud06c\" , }, { \"name\" : \"RM\" , \"group\" : \"BTS\" , }, { \"name\" : \"\ubdd4\" , \"group\" : \"BTS\" , }, ]; print ( people ); final parsedPeople = people . map (( x ) => Person ( name: x [ 'name' ] ! , // \uac12\uc774 \ubc18\ub4dc\uc2dc \uc874\uc7ac\ud55c\ub2e4\ub294 \ub73b. ! \uc548\ubd99\uc5ec\uc8fc\uba74 \ucc38\uc870 error \ubc1c\uc0dd\ud568. group: x [ 'group' ] ! , )). toList (); print ( parsedPeople ); for ( Person person in parsedPeople ) { print ( person . name ); print ( person . group ); }; final bts = parsedPeople . where ( ( x ) => x . group == \"BTS\" , ); } class Person { final String name ; final String group ; Person ({ required this . name , required this . group , }); // class\uc758 \ucd08\uae30 \uac12\ub4e4\uc740 Instance of \ub77c\ub294 \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\uc774 \ub428. // print\ub97c \ud588\uc744 \ub54c \uc5b4\ub5a4 \ud615\uc2dd\uc744 \ucde8\ud558\ub294\uc9c0 object class\uc5d0 String\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\ub294\ub370 \uc774\ub97c \ubc14\uafd4\uc90c\uc73c\ub85c\uc11c \ucd9c\ub825\ud615\ud0dc\ub97c \ubc14\uafd4\uc90c. @override String toString (){ return 'Person(name: $ name , group: $ group ' ; } }","title":"\ud568\uc218\ud615 \ud504\ub864\uadf8\ub798\ubc0d"},{"location":"Flutter/dartGrammar/functionalProgramming/#map","text":". map (( x ) => return ); . map (( x ){ code }; map \ucc38\uc870","title":"map"},{"location":"Flutter/dartGrammar/functionalProgramming/#reduce","text":"reduce \uc0ac\uc6a9\uc2dc parameter\uc758 data tyep\uacfc return result\uc758 data type\uc774 \uac19\uc544\uc57c \ud568. \ubc30\uc5f4\uc758 \ub05d\uae4c\uc9c0 loop \ubc1c\uc0dd, \uccab \ubc88\uc9f8\ub294 prev + next \ud574\uc8fc\uace0 \uadf8 \uc774\ud6c4\ub85c\ub294 total + next \ud574\uc90c. . reduce (( prev , next ) => code );","title":"reduce"},{"location":"Flutter/dartGrammar/functionalProgramming/#fold","text":"reduce\uc640\ub294 \ub2e4\ub974\uac8c return tyep\uacfc parameter type\uc774 \uac19\uc9c0 \uc54a\uc544\ub3c4 \ub428. \ub300\uc2e0, \uc120\uc5b8\ud574\uc904 \ub54c return type\uc744 \uc124\uc815\ud574\uc918\uc57c \ud558\uba70 (prev, next)\uc804\uc5d0 \uccab \ubc88\uc9f8 parameter\ub97c \ubc1b\uace0 \uc774\ub97c \uccab \ubc88\uc9f8 \uacc4\uc0b0\uac12\uc73c\ub85c \uc0ac\uc6a9\ud568. . fold < returnType > ( 0 , ( prev , next ) => prev + next ); reduce and fold \ucc38\uc870","title":"fold"},{"location":"Flutter/dartGrammar/functionalProgramming/#where","text":"where((x) => \uc870\uac74); \uc870\uac74\uc774 true\uc778 \uac12\ub9cc return \ud574\uc90c. where (( x ) => \uc870\uac74 ); where \ucc38\uc870","title":"where"},{"location":"Flutter/dartGrammar/functionalProgramming/#spread-operator","text":"List \uc774\uc5b4\uc8fc\ub294 \uae30\ub2a5(?) + \ucd94\uac00(22.10.14) : Collection \ud615\ud0dc\uc5d0 Collection \uac12\uc744 \ub300\uc785\ud560 \ub54c \uc0ac\uc6a9. \ubaa9\ub85d\uc758 \ubaa8\ub4e0 \uac12\uc744 \ub2e4\ub978 \ubaa9\ub85d\uc5d0 \uc0bd\uc785\ud574\uc90c. Spread Operator\ub97c \ud65c\uc6a9\ud55c ListTile \ucd9c\ub825 Drawer ( backgroundColor: darkColor , child: ListView ( children: [ DrawerHeader ( child: Text ( '\uc9c0\uc5ed \uc120\ud0dd' , style: TextStyle ( color: Colors . white , fontSize: 20.0 ), ), ), // cas ... regions . map ( ( e ) => ListTile ( // (1) tileColor: Colors . white , selectedTileColor: lightColor , selectedColor: Colors . black , selected: e == '\uc11c\uc6b8' , onTap: () {}, title: Text ( e ), ), ) . toList (), ], ), );","title":"Spread operator(...)"},{"location":"Flutter/dartGrammar/functionalProgramming/#reference","text":"Spread oprator \uacf5\uc2dd \ubb38\uc11c Spread oprator github","title":"Reference"},{"location":"Flutter/dartGrammar/functionalProgramming/#functional-programming","text":"\uc608\uc2dc1 void main () { String number = '12345' ; final numberJPEG = number . split ( '' ). map (( x ) => ' $ x .jpeg' ). toList (); print ( numberJPEG ); example2 (); example3 (); } // Map > Map use map void example2 () { Map < String , String > harryPoter = { \"Harry Potter\" : \"\ud574\ub9ac \ud3ec\ud130\" , \"Ron Weasley\" : \"\ub860 \uc704\uc990\ub9ac\" , \"Hermione Granger\" : \"\ud5e4\ub974\ubbf8\uc628\ub290 \uadf8\ub808\uc778\uc800\" }; // map > map // Map Entry\ub294 class \uc784. MapEntry(key, value)\uc21c\uc73c\ub85c \ub418\uc5b4 \uc788\uc73c\uba70 key\uc640 value\uc5d0 \uac01\uac01 \uc811\uadfc\ud574\uc11c return \ud574\uc90c. final result = harryPoter . map (( key , value ) => MapEntry ( 'Harry Poter Character $ key ' , '\ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 $ value ' , ), ); print ( result ); final keys = harryPoter . keys . map (( x ) => 'HPC $ x ' ). toList ; print ( keys ); } void example3 () { Set blackPinkSet = { '\ub85c\uc81c' , '\uc9c0\uc218' , '\uc81c\ub2c8' , '\ub9ac\uc0ac' , }; final newSet = blackPinkSet . map (( x ) => '\ube14\ub799\ud551\ud06c $ x ' ); print ( newSet ); } > \ucd9c\ub825\uac12 [ 1 .jpeg, 2 .jpeg, 3 .jpeg, 4 .jpeg, 5 .jpeg ] { Harry Poter Character Harry Potter: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ud574\ub9ac \ud3ec\ud130, Harry Poter Character Ron Weasley: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ub860 \uc704\uc990\ub9ac, Harry Poter Character Hermione Granger: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ud5e4\ub974\ubbf8\uc628\ub290 \uadf8\ub808\uc778\uc800 } [ HPC Harry Potter, HPC Ron Weasley, HPC Hermione Granger ] ( \ube14\ub799\ud551\ud06c \ub85c\uc81c, \ube14\ub799\ud551\ud06c \uc9c0\uc218, \ube14\ub799\ud551\ud06c \uc81c\ub2c8, \ube14\ub799\ud551\ud06c \ub9ac\uc0ac ) \uc608\uc2dc2 void main () { List < Map < String , String >> people = [ { \"name\" : \"\ub85c\uc81c\" , \"group\" : \"\ube14\ub799\ud551\ud06c\" , }, { \"name\" : \"\uc9c0\uc218\" , \"group\" : \"\ube14\ub799\ud551\ud06c\" , }, { \"name\" : \"RM\" , \"group\" : \"BTS\" , }, { \"name\" : \"\ubdd4\" , \"group\" : \"BTS\" , }, ]; print ( people ); final parsedPeople = people . map (( x ) => Person ( name: x [ 'name' ] ! , // \uac12\uc774 \ubc18\ub4dc\uc2dc \uc874\uc7ac\ud55c\ub2e4\ub294 \ub73b. ! \uc548\ubd99\uc5ec\uc8fc\uba74 \ucc38\uc870 error \ubc1c\uc0dd\ud568. group: x [ 'group' ] ! , )). toList (); print ( parsedPeople ); for ( Person person in parsedPeople ) { print ( person . name ); print ( person . group ); }; final bts = parsedPeople . where ( ( x ) => x . group == \"BTS\" , ); } class Person { final String name ; final String group ; Person ({ required this . name , required this . group , }); // class\uc758 \ucd08\uae30 \uac12\ub4e4\uc740 Instance of \ub77c\ub294 \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\uc774 \ub428. // print\ub97c \ud588\uc744 \ub54c \uc5b4\ub5a4 \ud615\uc2dd\uc744 \ucde8\ud558\ub294\uc9c0 object class\uc5d0 String\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\ub294\ub370 \uc774\ub97c \ubc14\uafd4\uc90c\uc73c\ub85c\uc11c \ucd9c\ub825\ud615\ud0dc\ub97c \ubc14\uafd4\uc90c. @override String toString (){ return 'Person(name: $ name , group: $ group ' ; } }","title":"functional programming \uc0ac\uc6a9 \uc608\uc2dc"},{"location":"Flutter/dartGrammar/immutable_data/","text":"immutable data\ub780? \uc9c1\uc5ed : \ubcc0\ud558\uc9c0 \uc54a\ub294 \ub370\uc774\ud130. \ub9cc\uc57d\uc5d0 \uac12\uc744 \uc120\uc5b8\ud560 \ub54c int cnt = 1 ; cnt = 2 ; \uc774\ub7f0\uc2dd\uc73c\ub85c \uac12\uc744 \uc120\uc5b8\ud558\uace0 2\ub77c\ub294 \uac12\uc744 \ub123\uac8c \ub418\uba74 0x02000000\uc5d0 \uc788\ub358 \uac12(\uc608\ub97c \ub4e4\uc5b4) 1\uc5d0\uc11c 0x02000004\uc5d0 \uc788\ub294 \uac12 2\ub85c \ub300\uce58 \ub41c \uac83\uc774\uc9c0 0x02000000\uc5d0 \uc788\ub358 \uac12\uc774 \ubcc0\ud55c\uac8c \uc544\ub2d8(immutable data). \uadf8\uc5d0 \ubc18\ud574\uc11c List < int > cntArray = [ 1 ]; cntArray . add ( 2 ); \ub2e4\uc74c\uacfc \uac19\uc774 \ud560 \ub54c cntArray[0]\uc758 \uc778\ub371\uc2a4 \uc8fc\uc18c\ub294 \uace0\uc815\uc774 \ub418\uace0 \ud574\ub2f9 \uc8fc\uc18c\uc758 \uac12\uc774 \ubcc0\uacbd\ub428. \uc774\ub7ec\ud55c \ub370\uc774\ud130\ub97c mutable data\ub77c\uace0 \ud568. \uc989, \uac12\uc774 \ubcc0\uacbd > mutable \ud574\ub2f9 \uc8fc\uc18c\uc758 \uac12\uc740 \uace0\uc815\uc774 \ub41c \ucc44 \uc8fc\uc18c\uac00 \ubcc0\uacbd > immutable Dart\uc5d0\uc11c \ubcc0\uc218 \ud560\ub2f9 \ubc29\uc2dd var str = 'This is a String.' str = 'This is another String.' \ub2e4\uc74c\uacfc \uac19\uc740 \ubcc0\uc218\ub97c \uc120\uc5b8\ud558\uace0 String\uc744 \ud560\ub2f9\ud588\ub2e4\uace0 \uce60 \ub54c, 'This is a String.'\uc774\ub77c\ub294 \ubb38\uc790\uc5f4 \ub9ac\ud130\ub7f4\uc744 \ub9cc\ub4e4\uace0 \ubcc0\uc218\uc5d0\ub294 \ud574\ub2f9 \uac12\uc758 \uc704\uce58\uc5d0 \ub300\ud55c \ucc38\uc870\uac00 \ub4e4\uc5b4\uac00 \uc788\uc74c. \ub450 \ubc88\uc9f8 \uc904\uc5d0\uc120 \uc644\uc804\ud788 \uc0c8\ub85c\uc6b4 \ubb38\uc790\uc5f4\uc744 \ub9cc\ub4e4\uace0 \uccab \ubc88\uc9f8 \ubb38\uc790\uc5f4\uc5d0 \ub300\ud55c \ucc38\uc870\ub97c \ub450 \ubc88\uc9f8 \ubb38\uc790\uc5f4\uc5d0 \ub300\ud55c \ucc38\uc870\ub85c \ub36e\uc5b4\uc4f0\uac8c \ub428. \uccab \ubc88\uc9f8 \ubb38\uc790\uc5f4\uc740 \ud574\ub2f9 \ubb38\uc790\uc5f4\uc5d0 \ub300\ud55c \uc720\ud6a8\ud55c \ucc38\uc870\uac00 \ub354 \uc774\uc0c1 \uc5c6\uc73c\uba74 \ub3c4\ub2ec\ud560 \uc218 \uc5c6\ub294 \ubb38\uc790\uc5f4\ub85c \ud45c\uc2dc\ub418\uace0 Dart\uc758 garbage collector \uc5d0 \uc758\ud574\uc11c \ud574\ub2f9 \ubb38\uc790\uc5f4\uc758 \uba54\ubaa8\ub9ac\uac00 \ud574\ubc29\ub428. ++ Fluuter Developers Korea garbage collector \uba54\ubaa8\ub9ac\uc5d0 \ub4e4\uc5b4 \uc788\ub294 \uc548\uc4f0\ub294 \ubcc0\uc218 \ub4f1\uc744 \uac1c\ubc1c\uc790\uac00 \ub2e4 \ud574\uc81c \uc2dc\ucf1c\uc8fc\uae30 \uadc0\ucc2e\uc544\uc11c \uc774\ub7ec\ud55c \uc77c\uc744 \uc790\ub3d9\uc73c\ub85c \ud574\uc8fc\ub294 \uac83\uc774 garbage collector\uc784. final\uacfc const \ub458\uc740 \uac12\uc744 \ud55c \ubc88 \uc9c0\uc815\ud558\uac8c \ub418\uba74 \ubc14\uafc0 \uc218 \uc5c6\ub2e4\ub294 \uacf5\ud1b5\uc801\uc778 \uc18d\uc131\uc744 \uac00\uc9c0\uace0 \uc788\uc74c. final cnt = 1 ; cnt = 2 ; // error \ucc28\uc774\uc810 final\uc740 \uc120\uc5b8\uc2dc \uac12\uc744 \ubd80\uc5ec\ud558\uc9c0 \uc54a\uace0 \uc774\ud6c4 \ucd5c\ucd08 1\ubc88 \uac12\uc744 \ubd80\uc5ec\ud560 \uc788\uc74c. final\uc740 \uc774 \ud30c\uc77c\uc774 \uc2e4\ud589\ub420 \ub54c \ud574\ub2f9\ud558\ub294 code\uc758 \uc704\uce58\uc5d0\uc11c \uac12\uc774 \uacb0\uc815\ub418\uc9c0\ub9cc const\ub294 compile\ud560 \ub54c\uc5d0 \uac12\uc774 \uacb0\uc815\ub428.( complie-time constants ) final list list\ub97c final\ub85c \uc120\uc5b8\ud558\uba74 \ub808\ud37c\ub7f0\uc2a4(\ucc38\uc870)\ub9cc immutable\uc774\uace0 \uac1d\uccb4 \ub0b4\ubd80\ub294 mutable\uc774\ub77c\uc11c \uac12\uc744 \ubcc0\uacbd\ud558\ub294 \uac83\uc740 \uac00\ub2a5\ud568. \uc989, \ucc38\uc870 \uac12\uc744 \ubcc0\uacbd\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc624\ub958\uac00 \ubc1c\uc0dd\ud568. void main () { final List < int > a = [ 1 , 2 , 3 ]; a . add ( 4 ); // \ub428 print ( a ); a [ 0 ] = 5 ; // \ub428 print ( a ); a = [ 2 , 3 , 4 ]; // error \ubc1c\uc0dd } \ub0b4\uac00 \uc774\ud574\ud55c \ub300\ub85c \uc815\ub9ac\ub97c \ud574\ubcf4\uc790\uba74 [1,2,3]\uc774\ub77c\ub294 \ub9ac\uc2a4\ud2b8\uc758 \uc8fc\uc18c(\ucc38\uc870 \uac12)\uc744 \ub2f4\uace0 \uc788\uc5c8\ub294\ub370 \uc774\ub97c \ub2e4\ub978 [2, 3, 4]\ub77c\ub294 \ub2e4\ub978 \ub9ac\uc2a4\ud2b8\uc758 \uc8fc\uc18c(\ucc38\uc870 \uac12)\uc73c\ub85c \ubcc0\uacbd\ud574\uc8fc\uac8c \ub418\uba74 \uc624\ub958\uac00 \ub098\ub294 \uac83 \uac19\uc74c. class\uc758 mutable\ud55c \uc18d\uc131 void main () { User user1 = User ( name: '\uc9c0\uc740' , age: 30 ); User user2 = user1 ; user2 . name = '\uc6a9\uc900' ; // user2\uc5d0\uc11c \uc774\ub984\uc744 \ubc14\uafd4\ub3c4 \ucc38\uc870\ud558\ub294 \uc8fc\uc18c\uac00 \uac19\uae30 \ub54c\ubb38\uc5d0 print ( user1 . name ); // \uc6a9\uc900 \ucd9c\ub825 } class User { String ? name ; int ? age ; User ({ this . name , this . age }); }","title":"immutable data"},{"location":"Flutter/dartGrammar/immutable_data/#immutable-data","text":"\uc9c1\uc5ed : \ubcc0\ud558\uc9c0 \uc54a\ub294 \ub370\uc774\ud130. \ub9cc\uc57d\uc5d0 \uac12\uc744 \uc120\uc5b8\ud560 \ub54c int cnt = 1 ; cnt = 2 ; \uc774\ub7f0\uc2dd\uc73c\ub85c \uac12\uc744 \uc120\uc5b8\ud558\uace0 2\ub77c\ub294 \uac12\uc744 \ub123\uac8c \ub418\uba74 0x02000000\uc5d0 \uc788\ub358 \uac12(\uc608\ub97c \ub4e4\uc5b4) 1\uc5d0\uc11c 0x02000004\uc5d0 \uc788\ub294 \uac12 2\ub85c \ub300\uce58 \ub41c \uac83\uc774\uc9c0 0x02000000\uc5d0 \uc788\ub358 \uac12\uc774 \ubcc0\ud55c\uac8c \uc544\ub2d8(immutable data). \uadf8\uc5d0 \ubc18\ud574\uc11c List < int > cntArray = [ 1 ]; cntArray . add ( 2 ); \ub2e4\uc74c\uacfc \uac19\uc774 \ud560 \ub54c cntArray[0]\uc758 \uc778\ub371\uc2a4 \uc8fc\uc18c\ub294 \uace0\uc815\uc774 \ub418\uace0 \ud574\ub2f9 \uc8fc\uc18c\uc758 \uac12\uc774 \ubcc0\uacbd\ub428. \uc774\ub7ec\ud55c \ub370\uc774\ud130\ub97c mutable data\ub77c\uace0 \ud568. \uc989, \uac12\uc774 \ubcc0\uacbd > mutable \ud574\ub2f9 \uc8fc\uc18c\uc758 \uac12\uc740 \uace0\uc815\uc774 \ub41c \ucc44 \uc8fc\uc18c\uac00 \ubcc0\uacbd > immutable","title":"immutable data\ub780?"},{"location":"Flutter/dartGrammar/immutable_data/#dart","text":"var str = 'This is a String.' str = 'This is another String.' \ub2e4\uc74c\uacfc \uac19\uc740 \ubcc0\uc218\ub97c \uc120\uc5b8\ud558\uace0 String\uc744 \ud560\ub2f9\ud588\ub2e4\uace0 \uce60 \ub54c, 'This is a String.'\uc774\ub77c\ub294 \ubb38\uc790\uc5f4 \ub9ac\ud130\ub7f4\uc744 \ub9cc\ub4e4\uace0 \ubcc0\uc218\uc5d0\ub294 \ud574\ub2f9 \uac12\uc758 \uc704\uce58\uc5d0 \ub300\ud55c \ucc38\uc870\uac00 \ub4e4\uc5b4\uac00 \uc788\uc74c. \ub450 \ubc88\uc9f8 \uc904\uc5d0\uc120 \uc644\uc804\ud788 \uc0c8\ub85c\uc6b4 \ubb38\uc790\uc5f4\uc744 \ub9cc\ub4e4\uace0 \uccab \ubc88\uc9f8 \ubb38\uc790\uc5f4\uc5d0 \ub300\ud55c \ucc38\uc870\ub97c \ub450 \ubc88\uc9f8 \ubb38\uc790\uc5f4\uc5d0 \ub300\ud55c \ucc38\uc870\ub85c \ub36e\uc5b4\uc4f0\uac8c \ub428. \uccab \ubc88\uc9f8 \ubb38\uc790\uc5f4\uc740 \ud574\ub2f9 \ubb38\uc790\uc5f4\uc5d0 \ub300\ud55c \uc720\ud6a8\ud55c \ucc38\uc870\uac00 \ub354 \uc774\uc0c1 \uc5c6\uc73c\uba74 \ub3c4\ub2ec\ud560 \uc218 \uc5c6\ub294 \ubb38\uc790\uc5f4\ub85c \ud45c\uc2dc\ub418\uace0 Dart\uc758 garbage collector \uc5d0 \uc758\ud574\uc11c \ud574\ub2f9 \ubb38\uc790\uc5f4\uc758 \uba54\ubaa8\ub9ac\uac00 \ud574\ubc29\ub428. ++ Fluuter Developers Korea","title":"Dart\uc5d0\uc11c \ubcc0\uc218 \ud560\ub2f9 \ubc29\uc2dd"},{"location":"Flutter/dartGrammar/immutable_data/#garbage-collector","text":"\uba54\ubaa8\ub9ac\uc5d0 \ub4e4\uc5b4 \uc788\ub294 \uc548\uc4f0\ub294 \ubcc0\uc218 \ub4f1\uc744 \uac1c\ubc1c\uc790\uac00 \ub2e4 \ud574\uc81c \uc2dc\ucf1c\uc8fc\uae30 \uadc0\ucc2e\uc544\uc11c \uc774\ub7ec\ud55c \uc77c\uc744 \uc790\ub3d9\uc73c\ub85c \ud574\uc8fc\ub294 \uac83\uc774 garbage collector\uc784.","title":"garbage collector"},{"location":"Flutter/dartGrammar/immutable_data/#final-const","text":"\ub458\uc740 \uac12\uc744 \ud55c \ubc88 \uc9c0\uc815\ud558\uac8c \ub418\uba74 \ubc14\uafc0 \uc218 \uc5c6\ub2e4\ub294 \uacf5\ud1b5\uc801\uc778 \uc18d\uc131\uc744 \uac00\uc9c0\uace0 \uc788\uc74c. final cnt = 1 ; cnt = 2 ; // error","title":"final\uacfc const"},{"location":"Flutter/dartGrammar/immutable_data/#_1","text":"final\uc740 \uc120\uc5b8\uc2dc \uac12\uc744 \ubd80\uc5ec\ud558\uc9c0 \uc54a\uace0 \uc774\ud6c4 \ucd5c\ucd08 1\ubc88 \uac12\uc744 \ubd80\uc5ec\ud560 \uc788\uc74c. final\uc740 \uc774 \ud30c\uc77c\uc774 \uc2e4\ud589\ub420 \ub54c \ud574\ub2f9\ud558\ub294 code\uc758 \uc704\uce58\uc5d0\uc11c \uac12\uc774 \uacb0\uc815\ub418\uc9c0\ub9cc const\ub294 compile\ud560 \ub54c\uc5d0 \uac12\uc774 \uacb0\uc815\ub428.( complie-time constants )","title":"\ucc28\uc774\uc810"},{"location":"Flutter/dartGrammar/immutable_data/#final-list","text":"list\ub97c final\ub85c \uc120\uc5b8\ud558\uba74 \ub808\ud37c\ub7f0\uc2a4(\ucc38\uc870)\ub9cc immutable\uc774\uace0 \uac1d\uccb4 \ub0b4\ubd80\ub294 mutable\uc774\ub77c\uc11c \uac12\uc744 \ubcc0\uacbd\ud558\ub294 \uac83\uc740 \uac00\ub2a5\ud568. \uc989, \ucc38\uc870 \uac12\uc744 \ubcc0\uacbd\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc624\ub958\uac00 \ubc1c\uc0dd\ud568. void main () { final List < int > a = [ 1 , 2 , 3 ]; a . add ( 4 ); // \ub428 print ( a ); a [ 0 ] = 5 ; // \ub428 print ( a ); a = [ 2 , 3 , 4 ]; // error \ubc1c\uc0dd } \ub0b4\uac00 \uc774\ud574\ud55c \ub300\ub85c \uc815\ub9ac\ub97c \ud574\ubcf4\uc790\uba74 [1,2,3]\uc774\ub77c\ub294 \ub9ac\uc2a4\ud2b8\uc758 \uc8fc\uc18c(\ucc38\uc870 \uac12)\uc744 \ub2f4\uace0 \uc788\uc5c8\ub294\ub370 \uc774\ub97c \ub2e4\ub978 [2, 3, 4]\ub77c\ub294 \ub2e4\ub978 \ub9ac\uc2a4\ud2b8\uc758 \uc8fc\uc18c(\ucc38\uc870 \uac12)\uc73c\ub85c \ubcc0\uacbd\ud574\uc8fc\uac8c \ub418\uba74 \uc624\ub958\uac00 \ub098\ub294 \uac83 \uac19\uc74c.","title":"final list"},{"location":"Flutter/dartGrammar/immutable_data/#class-mutable","text":"void main () { User user1 = User ( name: '\uc9c0\uc740' , age: 30 ); User user2 = user1 ; user2 . name = '\uc6a9\uc900' ; // user2\uc5d0\uc11c \uc774\ub984\uc744 \ubc14\uafd4\ub3c4 \ucc38\uc870\ud558\ub294 \uc8fc\uc18c\uac00 \uac19\uae30 \ub54c\ubb38\uc5d0 print ( user1 . name ); // \uc6a9\uc900 \ucd9c\ub825 } class User { String ? name ; int ? age ; User ({ this . name , this . age }); }","title":"class\uc758 mutable\ud55c \uc18d\uc131"},{"location":"Flutter/dartGrammar/oopProgramming/","text":"\uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d \uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d(OOP, Object Oriented Programming)\uc774\ub780? Class\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud574\uc11c \ud560\ub2f9\uc744 \ud574\uc8fc\uba74 \ud574\ub2f9\ud558\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \ubb34\ud55c\ud788 \uc0dd\uc131\uac00\ub2a5. \uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d(OOP)\uc778 \uc774\uc720 class\ub97c \uae30\ubcf8\uc801\uc73c\ub85c \uc0dd\uc131\ud574\uc8fc\uba74 hashCode, runtimeType, toString, noSuchMethod \ub4f1\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ud560\ub2f9\uc774 \ub428. \uc774\ub294 class\uac00 \uc0dd\uc131\ub420 \ub54c \ubaa8\ub4e0 class\ub294 \ucd5c\uc0c1\uc704 \ubd80\ubaa8 class\ub85c Object\ub97c \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38 . \uadf8\ub9ac\uace0 \uc774 Object\uc758 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\uc774 \ub418\ub294 \uae30\ub2a5\uc774 \uc800 4\uac00\uc9c0 \uae30\ub2a5\uc784. void main () { Test test = Test (); // \uae30\ubcf8\uc801\uc73c\ub85c \ud560\ub2f9\ub418\uc5b4 \uc788\uc74c test . hashCode ; test . runtimeType ; test . toString (); test . noSuchMethod ( invocation ); } class test entends Object {} class \uae30\ubcf8\ud615 void main () { Idol blackPink = Idol ( \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); blackPink . sayHello (); blackPink . introduce (); Idol bigBang = Idol ( // \uc77c\ubc18\uc801\uc778 \uc0dd\uc131\uc790 \"\ube45\ubc45\" , [ \"\uad8c\uc9c0\uc6a9\" , \"\ucd5c\uc2b9\ud604\" , \"\ud328\ubc30\" , \"\ub3d9\uc601\ubc30\" , \"\uac15\ub300\uc131\" ], ); Idol namedBigBang = Idol . fromList ( // nammed \uc0dd\uc131\uc790 \ud560\ub2f9 [ [ \"\uad8c\uc9c0\uc6a9\" , \"\ucd5c\uc2b9\ud604\" , \"\ud328\ubc30\" , \"\ub3d9\uc601\ubc30\" , \"\uac15\ub300\uc131\" ], \"\ube45\ubc45\" , ] ); bigBang . sayHello (); bigBang . introduce (); namedBigBang . sayHello (); namedBigBang . introduce (); } class Idol { String name = \"\ube14\ub799\ud551\ud06c\" ; List < String > members = [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ]; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } /* constructor (\uc0dd\uc131\uc790) this\ub294 \ud604\uc7ac class\uc758 \ud504\ub85c\ud37c\ud2f0\ub97c \ub098\ud0c0\ub0c4 */ // Idol(String name, List<String> members): this.name = name, this.members = members; Idol ( this . name , this . members ); // named constructor Idol . fromList ( List values ) : this . members = values [ 0 ], this . name = values [ 1 ]; } Constructor Named Constructor class Employee { int empID ; String empName ; Employee . ID ( this . empID ); // Named Constructor Creation Employee . name ( this . empName ); } main () { var myEmployee01 = new Employee . ID ( 15 ); var myEmployee03 = new Employee . name ( \"rookedsysc\" ); print ( myEmployee01 . empID ); // 15 print ( myEmployee03 . empName ); // rookedsysc } Factory Contsructor https://stackoverflow.com/questions/60133252/what-is-the-purpose-of-a-factory-method-in-flutter-dart class DBHelper { static final DbHelper _dbHelper = DbHelper . _internal (); DbHelper . _internal (); factory DbHelper () => _dbHelper ; } \ub2e4\uc74c \ucf54\ub4dc\uc5d0\uc11c factory \ud0a4\uc6cc\ub4dc\ub97c DBHelper \uba54\uc11c\ub4dc \uc55e\uc5d0\uc11c \uc368\ub193\uc73c\uba74 DBHelper \uba54\uc11c\ub4dc\uc758 \uc778\uc2a4\ud134\uc2a4\ub294 \ub531 \ud55c \ubc88\ub9cc \uc0dd\uc131\ub420 \uc218 \uc788\uc74c. immutable \ud504\ub85c\uadf8\ub798\ubc0d: final \ud55c \ubc88 \uac12\uc744 \uc120\uc5b8\ud558\uace0 \ub098\uba74 \uac12\uc744 \ubcc0\ud615\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. void main () { Idol blackPink = Idol ( \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); // blackPink.name = \"\uc544\uc774\uc720\"; // error \ubc1c\uc0dd blackPink . sayHello (); blackPink . introduce (); } class Idol { // imutable \ud504\ub85c\uadf8\ub798\ubc0d : \uc120\uc5b8\ud55c \uc774\ud6c4\uc5d0 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. final String name ; List < String > members ; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } Idol ( this . name , this . members ); } immutable \ud504\ub85c\uadf8\ub798\ubc0d: const void main () { Idol blackPink = const Idol ( // const\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 \uac12\uc744 \uc120\uc5b8\ud558\ub294 \ubd80\ubd84\uc5d0\ub3c4 const\ub85c \ubcc0\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc918\uc57c \ud568 \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); // blackPink.name = \"\uc544\uc774\uc720\"; // error \ubc1c\uc0dd blackPink . sayHello (); blackPink . introduce (); } class Idol { final String name ; final List < String > members ; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } // imutable \ud504\ub85c\uadf8\ub798\ubc0d : \uc120\uc5b8\ud55c \uc774\ud6c4\uc5d0 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. const Idol ( this . name , this . members ); } const immutable class\uc758 \ud2b9\uc218\uc131 \uac19\uc740 class\uc758 \uc778\uc2a4\ud134\uc2a4 \ud504\ub85c\ud37c\ud2f0\ub97c \ube44\uad50\ud560 \ub54c const\ub85c \uc120\uc5b8\ud55c class \uc778\uc2a4\ud134\uc2a4\ub07c\ub9ac\ub294 \uac12\uc774 \uac19\uc73c\uba74 \uac19\ub2e4\uace0 return \ud574\uc90c. void main () { Idol blackPink = Idol ( // const\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 \uac12\uc744 \uc120\uc5b8\ud558\ub294 \ubd80\ubd84\uc5d0\ub3c4 const\ub85c \ubcc0\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc918\uc57c \ud568 \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); Idol blackPink2 = Idol ( \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); Idol bigBang = const Idol ( \"\ube45\ubc45\" , [ 'GD' , 'TOP' , '\ub300\uc131' , '\ud0dc\uc591' , '\ud328\ubc30' ], ); Idol bigBang2 = const Idol ( \"\ube45\ubc45\" , [ 'GD' , 'TOP' , '\ub300\uc131' , '\ud0dc\uc591' , '\ud328\ubc30' ], ); print ( blackPink == blackPink2 ); // false \ucd9c\ub825 print ( bigBang == bigBang2 ); // true \ucd9c\ub825 (const\ub85c \uc120\uc5b8\ud55c class\ub294 \uac12\uc744 \ube44\uad50\ud558\uba74 \uac19\ub2e4\uace0 return\ud574\uc90c) } class Idol { final String name ; final List < String > members ; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } // imutable \ud504\ub85c\uadf8\ub798\ubc0d : \uc120\uc5b8\ud55c \uc774\ud6c4\uc5d0 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. const Idol ( this . name , this . members ); } Getter\uc640 Setter \uc790\ub8cc\ud615 get getterName { code } \uc640 \uac19\uc740 \ud615\ud0dc\ub85c \uc0ac\uc6a9\ud558\uba70, setter\ub294 \uc798 \uc548\uc500. \ub370\uc774\ud130\ub97c \uac00\uc838\uc640\uc11c { code }\ub97c \uc218\ud589\ud574\uc90c. Getter\uc640 Setter Inheritance (\uc0c1\uc18d) Ingeritance Override \ubd80\ubaa8 \ud074\ub798\uc2a4\uc5d0 \uc788\ub294 method\uc640 \uac19\uc740 \uc2dc\uadf8\ub2c8\ucc98\uc758 \ud568\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc11c \ub36e\uc5b4\uc4f0\uae30(override)\ud574\uc904 \uc218 \uc788\uc74c. Override static class \ub0b4\ubd80\uc758 method\ub098 property\uc5d0 static\uc744 \ubd99\uc5ec\uc11c \uc0ac\uc6a9\ud558\uba70, \uc774\ub294 instance\uac00 \uc544\ub2cc class\uc5d0 \uac12\uc774 \uadc0\uc18d\ub428. \uc989, \ud574\ub2f9 class\uc5d0 static method\ub098 property\ub97c \uadc0\uc18d\ud574\uc8fc\uba74 \ud574\ub2f9 class\ub97c \uc0c1\uc18d\ubc1b\uc740 \ubaa8\ub4e0 \uc790\uc2dd class \ub294 \ud574\ub2f9 static\uc758 \uac12\uc744 \uadc0\uc18d\ubc1b\uc74c. static Interface\uc640 abstract \uc5b4\ub5a4 \ud2b9\uc218\ud55c \uad6c\uc870\ub97c \uac15\uc81c\ud558\uae30 \uc704\ud574\uc11c \uc0ac\uc6a9\ud558\uba70 swift\uc758 protocol\uc774\ub791 \ube44\uc2b7\ud568. Interface \uc55e\uc5d0 abstract \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud574\ub2f9 Interface\ub97c \ud1b5\ud574\uc11c instance\ub97c \uc0dd\uc131\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. Interface\uc640 abstract Generic (\ud0c0\uc785\ucd94\ub860) class\uc5d0 \ud0c0\uc785\uc744 \uc678\ubd80\uc5d0\uc11c \ubc1b\uc744 \ub54c \uc0ac\uc6a9\ud558\uba70 \uc678\ubd80\uc5d0\uc11c \ud0c0\uc785\uc744 \uc9c0\uc815\ud574\uc90c. \uc544\ub798\ub294 \uae30\ubcf8\ud615 \ud83d\udc47 \uc778\uc2a4\ud134\uc2a4\uba85 < Generic > () { } generic \ubcc0\uc218 \uc120\uc5b8 Private \ubcc0\uc218 private \ubcc0\uc218\ub294 \ud574\ub2f9 \ud30c\uc77c \ubc16\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \ubcc0\uc218\ub97c \ub73b\ud568. \ubcc0\uc218/\ud568\uc218/Class \ub4f1\uc758 \uc774\ub984 \uc55e\uc5d0 (&##95;) \ucd94\uac00. \uc774 \ub54c class\ub97c \ud560\ub2f9 \ud574\uc8fc\uac70\ub098 \ubcc0\uc218\ub97c \ucc38\uc870\ud560 \ub54c\ub3c4 \uc774\ub984 \uc55e\uc5d0 (&##95;)\ub97c \ubd99\uc5ec\uc918\uc57c \ud568. class _Idol { final String name ; final List < String > memebers ; _Idol ( this . name , this . members ); } Cusotm Copywith .copywith \ud568\uc218\ub97c custom\uc73c\ub85c \uad6c\ud604\ud574\ubcf4\uae30. \uad6c\ud604\ud558\ub294 \uc774\uc720: class\uc5d0\ub294 final\ub85c \ud568\uc218\uac00 \uc120\uc5b8\ub418\uc5b4 \uc788\uae30 \ub54c\ubb38\uc5d0 \ud574\ub2f9\ud558\ub294 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\uc74c. \uadf8\ub798\uc11c class_instance\uc5d0 .copywith \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud574\ub2f9 \uac12\uc744 \ubd88\ub7ec\uc628 \ud6c4 \ubc14\uafc0\uac12\ub9cc \ubc14\uafd4\uc11c \uc0c8\ub85c\uc6b4 instance\ub85c \ud560\ub2f9\ud574\uc11c \uc0ac\uc6a9\ud558\ub294 \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud568. \uc120\uc5b8 class ShoppingItemModel { final String name ; // \uc774\ub984 final int quantity ; // \uac2f\uc218 final bool hasBought ; // \uad6c\ub9e4 \ud588\ub294\uc9c0 final bool isSpicy ; // \ub9e4\uc6b4\uc9c0; ShoppingItemModel ( { required this . name , required this . quantity , required this . hasBought , required this . isSpicy }); ShoppingItemModel copyWith ({ String ? name , int ? quantity , bool ? hasBought , bool ? isSpicy , }) { return ShoppingItemModel ( name: name ?? this . name , quantity: quantity ?? this . quantity , hasBought: hasBought ?? this . hasBought , isSpicy: isSpicy ?? this . isSpicy ); } } \uc2e4\ud589 \uacb0\uacfc void main () { ShoppingItemModel _item1 = ShoppingItemModel ( name: '\uae40\uce58' , quantity: 5 , hasBought: true , isSpicy: true ); ShoppingItemModel _item2 = _item1 . copywith ( name: \"Spaghetti\" , isSpicy: false , hasBought: false ); // \uae40\uce58 5 true true print ( \" ${ _item1 . name } ${ _item1 . quantity } ${ _item1 . hasBought } ${ _item1 . isSpicy } \" ); // Spaghetti 5 false false print ( \" ${ _item2 . name } ${ _item2 . quantity } ${ _item2 . hasBought } ${ _item2 . isSpicy } \" ); }","title":"\uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d"},{"location":"Flutter/dartGrammar/oopProgramming/#_1","text":"\uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d(OOP, Object Oriented Programming)\uc774\ub780? Class\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud574\uc11c \ud560\ub2f9\uc744 \ud574\uc8fc\uba74 \ud574\ub2f9\ud558\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \ubb34\ud55c\ud788 \uc0dd\uc131\uac00\ub2a5.","title":"\uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d"},{"location":"Flutter/dartGrammar/oopProgramming/#oop","text":"class\ub97c \uae30\ubcf8\uc801\uc73c\ub85c \uc0dd\uc131\ud574\uc8fc\uba74 hashCode, runtimeType, toString, noSuchMethod \ub4f1\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ud560\ub2f9\uc774 \ub428. \uc774\ub294 class\uac00 \uc0dd\uc131\ub420 \ub54c \ubaa8\ub4e0 class\ub294 \ucd5c\uc0c1\uc704 \ubd80\ubaa8 class\ub85c Object\ub97c \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38 . \uadf8\ub9ac\uace0 \uc774 Object\uc758 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\uc774 \ub418\ub294 \uae30\ub2a5\uc774 \uc800 4\uac00\uc9c0 \uae30\ub2a5\uc784. void main () { Test test = Test (); // \uae30\ubcf8\uc801\uc73c\ub85c \ud560\ub2f9\ub418\uc5b4 \uc788\uc74c test . hashCode ; test . runtimeType ; test . toString (); test . noSuchMethod ( invocation ); } class test entends Object {}","title":"\uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d(OOP)\uc778 \uc774\uc720"},{"location":"Flutter/dartGrammar/oopProgramming/#class","text":"void main () { Idol blackPink = Idol ( \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); blackPink . sayHello (); blackPink . introduce (); Idol bigBang = Idol ( // \uc77c\ubc18\uc801\uc778 \uc0dd\uc131\uc790 \"\ube45\ubc45\" , [ \"\uad8c\uc9c0\uc6a9\" , \"\ucd5c\uc2b9\ud604\" , \"\ud328\ubc30\" , \"\ub3d9\uc601\ubc30\" , \"\uac15\ub300\uc131\" ], ); Idol namedBigBang = Idol . fromList ( // nammed \uc0dd\uc131\uc790 \ud560\ub2f9 [ [ \"\uad8c\uc9c0\uc6a9\" , \"\ucd5c\uc2b9\ud604\" , \"\ud328\ubc30\" , \"\ub3d9\uc601\ubc30\" , \"\uac15\ub300\uc131\" ], \"\ube45\ubc45\" , ] ); bigBang . sayHello (); bigBang . introduce (); namedBigBang . sayHello (); namedBigBang . introduce (); } class Idol { String name = \"\ube14\ub799\ud551\ud06c\" ; List < String > members = [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ]; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } /* constructor (\uc0dd\uc131\uc790) this\ub294 \ud604\uc7ac class\uc758 \ud504\ub85c\ud37c\ud2f0\ub97c \ub098\ud0c0\ub0c4 */ // Idol(String name, List<String> members): this.name = name, this.members = members; Idol ( this . name , this . members ); // named constructor Idol . fromList ( List values ) : this . members = values [ 0 ], this . name = values [ 1 ]; }","title":"class \uae30\ubcf8\ud615"},{"location":"Flutter/dartGrammar/oopProgramming/#constructor","text":"","title":"Constructor"},{"location":"Flutter/dartGrammar/oopProgramming/#immutable-final","text":"\ud55c \ubc88 \uac12\uc744 \uc120\uc5b8\ud558\uace0 \ub098\uba74 \uac12\uc744 \ubcc0\ud615\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. void main () { Idol blackPink = Idol ( \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); // blackPink.name = \"\uc544\uc774\uc720\"; // error \ubc1c\uc0dd blackPink . sayHello (); blackPink . introduce (); } class Idol { // imutable \ud504\ub85c\uadf8\ub798\ubc0d : \uc120\uc5b8\ud55c \uc774\ud6c4\uc5d0 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. final String name ; List < String > members ; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } Idol ( this . name , this . members ); }","title":"immutable \ud504\ub85c\uadf8\ub798\ubc0d: final"},{"location":"Flutter/dartGrammar/oopProgramming/#immutable-const","text":"void main () { Idol blackPink = const Idol ( // const\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 \uac12\uc744 \uc120\uc5b8\ud558\ub294 \ubd80\ubd84\uc5d0\ub3c4 const\ub85c \ubcc0\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc918\uc57c \ud568 \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); // blackPink.name = \"\uc544\uc774\uc720\"; // error \ubc1c\uc0dd blackPink . sayHello (); blackPink . introduce (); } class Idol { final String name ; final List < String > members ; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } // imutable \ud504\ub85c\uadf8\ub798\ubc0d : \uc120\uc5b8\ud55c \uc774\ud6c4\uc5d0 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. const Idol ( this . name , this . members ); }","title":"immutable \ud504\ub85c\uadf8\ub798\ubc0d: const"},{"location":"Flutter/dartGrammar/oopProgramming/#getter-setter","text":"\uc790\ub8cc\ud615 get getterName { code } \uc640 \uac19\uc740 \ud615\ud0dc\ub85c \uc0ac\uc6a9\ud558\uba70, setter\ub294 \uc798 \uc548\uc500. \ub370\uc774\ud130\ub97c \uac00\uc838\uc640\uc11c { code }\ub97c \uc218\ud589\ud574\uc90c. Getter\uc640 Setter","title":"Getter\uc640 Setter"},{"location":"Flutter/dartGrammar/oopProgramming/#inheritance","text":"Ingeritance","title":"Inheritance (\uc0c1\uc18d)"},{"location":"Flutter/dartGrammar/oopProgramming/#override","text":"\ubd80\ubaa8 \ud074\ub798\uc2a4\uc5d0 \uc788\ub294 method\uc640 \uac19\uc740 \uc2dc\uadf8\ub2c8\ucc98\uc758 \ud568\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc11c \ub36e\uc5b4\uc4f0\uae30(override)\ud574\uc904 \uc218 \uc788\uc74c. Override","title":"Override"},{"location":"Flutter/dartGrammar/oopProgramming/#static","text":"class \ub0b4\ubd80\uc758 method\ub098 property\uc5d0 static\uc744 \ubd99\uc5ec\uc11c \uc0ac\uc6a9\ud558\uba70, \uc774\ub294 instance\uac00 \uc544\ub2cc class\uc5d0 \uac12\uc774 \uadc0\uc18d\ub428. \uc989, \ud574\ub2f9 class\uc5d0 static method\ub098 property\ub97c \uadc0\uc18d\ud574\uc8fc\uba74 \ud574\ub2f9 class\ub97c \uc0c1\uc18d\ubc1b\uc740 \ubaa8\ub4e0 \uc790\uc2dd class \ub294 \ud574\ub2f9 static\uc758 \uac12\uc744 \uadc0\uc18d\ubc1b\uc74c. static","title":"static"},{"location":"Flutter/dartGrammar/oopProgramming/#interface-abstract","text":"\uc5b4\ub5a4 \ud2b9\uc218\ud55c \uad6c\uc870\ub97c \uac15\uc81c\ud558\uae30 \uc704\ud574\uc11c \uc0ac\uc6a9\ud558\uba70 swift\uc758 protocol\uc774\ub791 \ube44\uc2b7\ud568. Interface \uc55e\uc5d0 abstract \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud574\ub2f9 Interface\ub97c \ud1b5\ud574\uc11c instance\ub97c \uc0dd\uc131\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. Interface\uc640 abstract","title":"Interface\uc640 abstract"},{"location":"Flutter/dartGrammar/oopProgramming/#generic","text":"class\uc5d0 \ud0c0\uc785\uc744 \uc678\ubd80\uc5d0\uc11c \ubc1b\uc744 \ub54c \uc0ac\uc6a9\ud558\uba70 \uc678\ubd80\uc5d0\uc11c \ud0c0\uc785\uc744 \uc9c0\uc815\ud574\uc90c. \uc544\ub798\ub294 \uae30\ubcf8\ud615 \ud83d\udc47 \uc778\uc2a4\ud134\uc2a4\uba85 < Generic > () { } generic","title":"Generic (\ud0c0\uc785\ucd94\ub860)"},{"location":"Flutter/dartGrammar/oopProgramming/#_2","text":"","title":"\ubcc0\uc218 \uc120\uc5b8"},{"location":"Flutter/dartGrammar/oopProgramming/#private","text":"private \ubcc0\uc218\ub294 \ud574\ub2f9 \ud30c\uc77c \ubc16\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \ubcc0\uc218\ub97c \ub73b\ud568. \ubcc0\uc218/\ud568\uc218/Class \ub4f1\uc758 \uc774\ub984 \uc55e\uc5d0 (&##95;) \ucd94\uac00. \uc774 \ub54c class\ub97c \ud560\ub2f9 \ud574\uc8fc\uac70\ub098 \ubcc0\uc218\ub97c \ucc38\uc870\ud560 \ub54c\ub3c4 \uc774\ub984 \uc55e\uc5d0 (&##95;)\ub97c \ubd99\uc5ec\uc918\uc57c \ud568. class _Idol { final String name ; final List < String > memebers ; _Idol ( this . name , this . members ); }","title":"Private \ubcc0\uc218"},{"location":"Flutter/dartGrammar/oopProgramming/#cusotm-copywith","text":".copywith \ud568\uc218\ub97c custom\uc73c\ub85c \uad6c\ud604\ud574\ubcf4\uae30. \uad6c\ud604\ud558\ub294 \uc774\uc720: class\uc5d0\ub294 final\ub85c \ud568\uc218\uac00 \uc120\uc5b8\ub418\uc5b4 \uc788\uae30 \ub54c\ubb38\uc5d0 \ud574\ub2f9\ud558\ub294 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\uc74c. \uadf8\ub798\uc11c class_instance\uc5d0 .copywith \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud574\ub2f9 \uac12\uc744 \ubd88\ub7ec\uc628 \ud6c4 \ubc14\uafc0\uac12\ub9cc \ubc14\uafd4\uc11c \uc0c8\ub85c\uc6b4 instance\ub85c \ud560\ub2f9\ud574\uc11c \uc0ac\uc6a9\ud558\ub294 \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud568. \uc120\uc5b8 class ShoppingItemModel { final String name ; // \uc774\ub984 final int quantity ; // \uac2f\uc218 final bool hasBought ; // \uad6c\ub9e4 \ud588\ub294\uc9c0 final bool isSpicy ; // \ub9e4\uc6b4\uc9c0; ShoppingItemModel ( { required this . name , required this . quantity , required this . hasBought , required this . isSpicy }); ShoppingItemModel copyWith ({ String ? name , int ? quantity , bool ? hasBought , bool ? isSpicy , }) { return ShoppingItemModel ( name: name ?? this . name , quantity: quantity ?? this . quantity , hasBought: hasBought ?? this . hasBought , isSpicy: isSpicy ?? this . isSpicy ); } } \uc2e4\ud589 \uacb0\uacfc void main () { ShoppingItemModel _item1 = ShoppingItemModel ( name: '\uae40\uce58' , quantity: 5 , hasBought: true , isSpicy: true ); ShoppingItemModel _item2 = _item1 . copywith ( name: \"Spaghetti\" , isSpicy: false , hasBought: false ); // \uae40\uce58 5 true true print ( \" ${ _item1 . name } ${ _item1 . quantity } ${ _item1 . hasBought } ${ _item1 . isSpicy } \" ); // Spaghetti 5 false false print ( \" ${ _item2 . name } ${ _item2 . quantity } ${ _item2 . hasBought } ${ _item2 . isSpicy } \" ); }","title":"Cusotm Copywith"},{"location":"Flutter/design/Builder/","text":"Builder Flutter\uc5d0\uc11c \ubaa8\ub4e0 \uc704\uc82f\uc740 builder() \ud568\uc218\ub97c \uac00\uc9c0\uace0 \uc778\uc790\uac12\uc73c\ub85c context\ub97c \uc804\ub2ec\ud568. context Widget tree\uc5d0\uc11c \ud604\uc7ac Widget\uc758 \uc704\uce58\ub97c \uc54c \uc218 \uc788\ub294 \uc815\ubcf4. builder: (_)\uc758 \uc758\ubbf8 builder \ud568\uc218\ub4e4\uc740 \uc704\uc82f\uc758 build \ud568\uc218\uc640 \uac19\uc774 \uccab\ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc5d0 BuildContext\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. \uadf8\ub798\uc11c (BuildContext context){} \uc774 \ud45c\ud604\uc744 (_){} \uc774\ub807\uac8c \ud55c\uac83\ubfd0\uc785\ub2c8\ub2e4. \ud2b9\uc815 \ud30c\ub77c\ubbf8\ud130\ub97c _\ub85c \ud45c\ud604\ud558\ub294 \uacbd\uc6b0 \uc77c\ubc18\uc801\uc73c\ub85c \uac1c\ubc1c\uc790\ub4e4\uc774 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc744 \ud30c\ub77c\ubbf8\ud130\ub77c\ub294 \ub73b\uc744 \uc804\ub2ec\ud558\uae30\uc704\ud55c \ubaa9\uc801\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uc870","title":"Builder"},{"location":"Flutter/design/Builder/#builder","text":"Flutter\uc5d0\uc11c \ubaa8\ub4e0 \uc704\uc82f\uc740 builder() \ud568\uc218\ub97c \uac00\uc9c0\uace0 \uc778\uc790\uac12\uc73c\ub85c context\ub97c \uc804\ub2ec\ud568.","title":"Builder"},{"location":"Flutter/design/Builder/#context","text":"Widget tree\uc5d0\uc11c \ud604\uc7ac Widget\uc758 \uc704\uce58\ub97c \uc54c \uc218 \uc788\ub294 \uc815\ubcf4.","title":"context"},{"location":"Flutter/design/Builder/#builder-_","text":"builder \ud568\uc218\ub4e4\uc740 \uc704\uc82f\uc758 build \ud568\uc218\uc640 \uac19\uc774 \uccab\ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc5d0 BuildContext\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. \uadf8\ub798\uc11c (BuildContext context){} \uc774 \ud45c\ud604\uc744 (_){} \uc774\ub807\uac8c \ud55c\uac83\ubfd0\uc785\ub2c8\ub2e4. \ud2b9\uc815 \ud30c\ub77c\ubbf8\ud130\ub97c _\ub85c \ud45c\ud604\ud558\ub294 \uacbd\uc6b0 \uc77c\ubc18\uc801\uc73c\ub85c \uac1c\ubc1c\uc790\ub4e4\uc774 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc744 \ud30c\ub77c\ubbf8\ud130\ub77c\ub294 \ub73b\uc744 \uc804\ub2ec\ud558\uae30\uc704\ud55c \ubaa9\uc801\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uc870","title":"builder: (_)\uc758 \uc758\ubbf8"},{"location":"Flutter/design/Button/","text":"Button\uc758 \uc885\ub958 ElevatedButton : \uc57d\uac04 3D \ud615\ub85c \ub3cc\ucd9c\ub418\uc5b4 \uc788\uace0 \ubc30\uacbd \uc788\uc74c. OutlinedButton : \ud14c\ub450\ub9ac\uc640 \ud14d\uc2a4\ud2b8\ub9cc \uc788\uc74c. TextButton : \ud14d\uc2a4\ud2b8\ub9cc \uc788\uc74c. styleFrom\uc744 \ud1b5\ud574\uc11c \uc18d\uc131 \ub123\uae30 Button\uc758 Structor, style\uc5d0 ButtonType.styleFrom()\uc744 \ub123\uc5b4\uc8fc\uace0 \uc5ec\uae30\uc5d0 Style\uc744 \uc9c0\uc815\ud574\uc904 \uc218 \uc788\uc74c. styleForm\uc740 ButtonStyle() class\ub97c \uc0c1\uc18d\ubc1b\uace0 \uc788\uc74c. \uc608\uc2dc OutlinedButton ( onPressed: (){}, child: Text ( 'OutlinedButton' ), style: OutlinedButton . styleFrom ( // \uae00\uc790\uc640 \uc560\ub2c8\uba54\uc774\uc158 \ud6a8\uacfc\uc758 \uc0c9\uc0c1\uc744 \ubcc0\uacbd\ud574\uc90c. // \ubc30\uacbd \uc0c9\uc0c1\uc740 backgroundColor\uc5d0 \ub123\uc5b4\uc11c \uc0ac\uc6a9\uac00\ub2a5\ud558\uae34 \ud568, \uadfc\ub370 \uadf8\ub7ec\uba74 OutlinedButton\uc744 \uc0ac\uc6a9\ud558\ub294 \uc774\uc720\uac00 \uc5c6\uc74c. primary: Colors . green , textStyle: TextStyle ( fontWeight: FontWeight . w700 , // \ud14d\uc2a4\ud2b8 \uad75\uae30 fontSize: 20.0 , // \ud14d\uc2a4\ud2b8 \uc0ac\uc774\uc988 ), ), ), resolveWith\ub97c \uc0ac\uc6a9\ud574\uc11c Button\uc758 \uc18d\uc131\uc744 \uc9c0\uc815\ud574\uc8fc\ub294 \ubc29\ubc95 material state Material State\ub294 Flutter \uc804\ubc18\uc801\uc73c\ub85c (\uc571, \uc6f9, \ub370\uc2a4\ud06c\ud0d1 \uc571 \uc804\uccb4 \ud3ec\ud568) \uc0ac\uc6a9\ud558\uac8c \ub418\ub294 \uae30\ubcf8\uc801\uc778 \uc0c1\ud0dc\ub4e4\uc784. - hovered : \ud638\ubc84\ub9c1 \uc0c1\ud0dc (\ub9c8\uc6b0\uc2a4 \ucee4\uc11c\ub97c \uc62c\ub824\ub193\uc740 \uc0c1\ud0dc) - \ubaa8\ubc14\uc77c \uc0ac\uc6a9 \ubd88\uac00 - focused : \ud3ec\ucee4\uc2a4 \ub410\uc744 \ub54c (\ud14d\uc2a4\ud2b8 \ud544\ub4dc) - pressed : \ub20c\ub800\uc744 \ub54c - dragged : \ub4dc\ub798\uadf8 \ub410\uc744 \ub54c (o) - selected : \uc120\ud0dd\ub410\uc744 \ub54c (\uccb4\ud06c\ubc15\uc2a4, \ub77c\ub514\uc624 \ubc84\ud2bc) - scrollUnder : \ub2e4\ub978 \ucef4\ud3ec\ub10c\ud2b8 \ubc11\uc73c\ub85c \uc2a4\ud06c\ub864\ub9c1 \ub410\uc744 \ub54c - diabled : \ube44\ud65c\uc131\ud654 \ub410\uc744 \ub54c (Button\uc5d0\uc11c onPressed: null \ud574\ubc84\ub9ac\uba74 \ube44\ud65c\uc131\ud654 \uc0c1\ud0dc\uac00 \ub428.) (o) - error : \uc5d0\ub7ec\uc0c1\ud0dc (\ud14d\uc2a4\ud2b8 \ud544\ub4dc\uc5d0\uc11c \ub9ce\uc774 \uc0ac\uc6a9\ud568.) resolveWith MaterialSatePropert Material State\uc758 \uc9d1\ud569\uc73c\ub85c \uc815\uc758\ub418\ub294 \uc704\uc82f\uc758 \ub300\ud654\ud615 \"\uc0c1\ud0dc\"\ub97c \uae30\ubc18\uc73c\ub85c \uc720\ud615 \uac12\uc73c\ub85c \ud655\uc778 \ub418\ub294 class \uc6a9 \uc778\ud130\ud398\uc774\uc2a4 \uc784. resolveWith resolveWith\uc5d0\ub294 \ud568\uc218\ub97c \ub123\uc5b4\uc918\uc57c \ud558\uba70 \ubc18\ub4dc\uc2dc return\uac12\uc744(null\uc774\ub77c\ub3c4) \ubc1b\uc544\uc57c\ud568. Set <MeterialState> states\uc5d0\ub294 \ud604\uc7ac \uc704\uc82f(Button)\uc758 Meterail State \uac12\uc774 \ub4e4\uc5b4\uac00\uac8c \ub428. \uc0ac\uc6a9 \uc608\uc2dc foregroundColor: MaterialStateProperty . resolveWith (( Set < MaterialState > states ) { // states\uc5d0 MaterialState.pressed \uc0c1\ud0dc\uac12\uc744 \ud3ec\ud568 \uc911\uc774\ub77c\uba74 if \ubb38 \uc9c4\uc785 if ( states . contains ( MaterialState . pressed )){ return Colors . white ; } // resolveWith\ub97c \uc0ac\uc6a9\ud558\uac8c\ub418\uba74 \ud568\uc218\ub97c \ub123\uc5b4\uc918\uc57c \ud558\ubbc0\ub85c \ubc18\ub4dc\uc2dc return \uac12\uc744(null \uc774\ub77c\ub3c4) \uac00\uc838\uc57c \ud568. return Colors . red ; } \ucc38\uc870 Button Project","title":"Button"},{"location":"Flutter/design/Button/#button","text":"ElevatedButton : \uc57d\uac04 3D \ud615\ub85c \ub3cc\ucd9c\ub418\uc5b4 \uc788\uace0 \ubc30\uacbd \uc788\uc74c. OutlinedButton : \ud14c\ub450\ub9ac\uc640 \ud14d\uc2a4\ud2b8\ub9cc \uc788\uc74c. TextButton : \ud14d\uc2a4\ud2b8\ub9cc \uc788\uc74c.","title":"Button\uc758 \uc885\ub958"},{"location":"Flutter/design/Button/#stylefrom","text":"Button\uc758 Structor, style\uc5d0 ButtonType.styleFrom()\uc744 \ub123\uc5b4\uc8fc\uace0 \uc5ec\uae30\uc5d0 Style\uc744 \uc9c0\uc815\ud574\uc904 \uc218 \uc788\uc74c. styleForm\uc740 ButtonStyle() class\ub97c \uc0c1\uc18d\ubc1b\uace0 \uc788\uc74c. \uc608\uc2dc OutlinedButton ( onPressed: (){}, child: Text ( 'OutlinedButton' ), style: OutlinedButton . styleFrom ( // \uae00\uc790\uc640 \uc560\ub2c8\uba54\uc774\uc158 \ud6a8\uacfc\uc758 \uc0c9\uc0c1\uc744 \ubcc0\uacbd\ud574\uc90c. // \ubc30\uacbd \uc0c9\uc0c1\uc740 backgroundColor\uc5d0 \ub123\uc5b4\uc11c \uc0ac\uc6a9\uac00\ub2a5\ud558\uae34 \ud568, \uadfc\ub370 \uadf8\ub7ec\uba74 OutlinedButton\uc744 \uc0ac\uc6a9\ud558\ub294 \uc774\uc720\uac00 \uc5c6\uc74c. primary: Colors . green , textStyle: TextStyle ( fontWeight: FontWeight . w700 , // \ud14d\uc2a4\ud2b8 \uad75\uae30 fontSize: 20.0 , // \ud14d\uc2a4\ud2b8 \uc0ac\uc774\uc988 ), ), ),","title":"styleFrom\uc744 \ud1b5\ud574\uc11c \uc18d\uc131 \ub123\uae30"},{"location":"Flutter/design/Button/#resolvewith-button","text":"","title":"resolveWith\ub97c \uc0ac\uc6a9\ud574\uc11c Button\uc758 \uc18d\uc131\uc744 \uc9c0\uc815\ud574\uc8fc\ub294 \ubc29\ubc95"},{"location":"Flutter/design/Button/#material-state","text":"Material State\ub294 Flutter \uc804\ubc18\uc801\uc73c\ub85c (\uc571, \uc6f9, \ub370\uc2a4\ud06c\ud0d1 \uc571 \uc804\uccb4 \ud3ec\ud568) \uc0ac\uc6a9\ud558\uac8c \ub418\ub294 \uae30\ubcf8\uc801\uc778 \uc0c1\ud0dc\ub4e4\uc784. - hovered : \ud638\ubc84\ub9c1 \uc0c1\ud0dc (\ub9c8\uc6b0\uc2a4 \ucee4\uc11c\ub97c \uc62c\ub824\ub193\uc740 \uc0c1\ud0dc) - \ubaa8\ubc14\uc77c \uc0ac\uc6a9 \ubd88\uac00 - focused : \ud3ec\ucee4\uc2a4 \ub410\uc744 \ub54c (\ud14d\uc2a4\ud2b8 \ud544\ub4dc) - pressed : \ub20c\ub800\uc744 \ub54c - dragged : \ub4dc\ub798\uadf8 \ub410\uc744 \ub54c (o) - selected : \uc120\ud0dd\ub410\uc744 \ub54c (\uccb4\ud06c\ubc15\uc2a4, \ub77c\ub514\uc624 \ubc84\ud2bc) - scrollUnder : \ub2e4\ub978 \ucef4\ud3ec\ub10c\ud2b8 \ubc11\uc73c\ub85c \uc2a4\ud06c\ub864\ub9c1 \ub410\uc744 \ub54c - diabled : \ube44\ud65c\uc131\ud654 \ub410\uc744 \ub54c (Button\uc5d0\uc11c onPressed: null \ud574\ubc84\ub9ac\uba74 \ube44\ud65c\uc131\ud654 \uc0c1\ud0dc\uac00 \ub428.) (o) - error : \uc5d0\ub7ec\uc0c1\ud0dc (\ud14d\uc2a4\ud2b8 \ud544\ub4dc\uc5d0\uc11c \ub9ce\uc774 \uc0ac\uc6a9\ud568.)","title":"material state"},{"location":"Flutter/design/Button/#resolvewith","text":"MaterialSatePropert Material State\uc758 \uc9d1\ud569\uc73c\ub85c \uc815\uc758\ub418\ub294 \uc704\uc82f\uc758 \ub300\ud654\ud615 \"\uc0c1\ud0dc\"\ub97c \uae30\ubc18\uc73c\ub85c \uc720\ud615 \uac12\uc73c\ub85c \ud655\uc778 \ub418\ub294 class \uc6a9 \uc778\ud130\ud398\uc774\uc2a4 \uc784. resolveWith resolveWith\uc5d0\ub294 \ud568\uc218\ub97c \ub123\uc5b4\uc918\uc57c \ud558\uba70 \ubc18\ub4dc\uc2dc return\uac12\uc744(null\uc774\ub77c\ub3c4) \ubc1b\uc544\uc57c\ud568. Set <MeterialState> states\uc5d0\ub294 \ud604\uc7ac \uc704\uc82f(Button)\uc758 Meterail State \uac12\uc774 \ub4e4\uc5b4\uac00\uac8c \ub428.","title":"resolveWith"},{"location":"Flutter/design/GestureDetector/","text":"Gesture Detector Widget\uc5d0\uc11c Gesutre\uac00 \uac10\uc9c0\ub420 \ub54c \uc2e4\ud589\ub420 \ud568\uc218\ub97c \uc815\uc758\ud574\uc904 \uc218 \uc788\uc74c. GestureDetector ( onTap () { \uc2e4\ud589\ud560 \ud568\uc218 } ) Focus \ud574\uc81c\ud558\uae30 \ub2e4\uc74c \ud568\uc218\ub294 Focus\ub97c \ud574\uc81c\ud574\uc90c. \uc989, \ud0a4\ubcf4\ub4dc\ub97c \uc785\ub825\ud558\ub2e4\uac00 onTap() {} \uc548\uc5d0 \uc2e4\ud589\ud560 \ud568\uc218\ub85c \ub123\uc5b4\uc8fc\uba74 \ud0a4\ubcf4\ub4dc\uc758 \ud3ec\ucee4\uc2f1\uc774 \ud574\uc81c\ub428. FocusScope . of ( context ). requestFocus ( FocusNode ());","title":"Gesture Detector"},{"location":"Flutter/design/GestureDetector/#gesture-detector","text":"Widget\uc5d0\uc11c Gesutre\uac00 \uac10\uc9c0\ub420 \ub54c \uc2e4\ud589\ub420 \ud568\uc218\ub97c \uc815\uc758\ud574\uc904 \uc218 \uc788\uc74c. GestureDetector ( onTap () { \uc2e4\ud589\ud560 \ud568\uc218 } )","title":"Gesture Detector"},{"location":"Flutter/design/GestureDetector/#focus","text":"\ub2e4\uc74c \ud568\uc218\ub294 Focus\ub97c \ud574\uc81c\ud574\uc90c. \uc989, \ud0a4\ubcf4\ub4dc\ub97c \uc785\ub825\ud558\ub2e4\uac00 onTap() {} \uc548\uc5d0 \uc2e4\ud589\ud560 \ud568\uc218\ub85c \ub123\uc5b4\uc8fc\uba74 \ud0a4\ubcf4\ub4dc\uc758 \ud3ec\ucee4\uc2f1\uc774 \ud574\uc81c\ub428. FocusScope . of ( context ). requestFocus ( FocusNode ());","title":"Focus \ud574\uc81c\ud558\uae30"},{"location":"Flutter/design/animatedOpacity/","text":"AnimatedOpacity ( // \ub3d9\uc791 \ud654\uba74 : (1) opacity: _visible ? 1.0 : 0.0 , duration: const Duration ( milliseconds: 500 ), child: Container ( width: 200.0 , height: 200.0 , color: Colors . green , ), );","title":"Animated Opacity: \ud654\uba74 \uc804\ud658"},{"location":"Flutter/design/drawer/","text":"\uc67c\ucabd\uc5d0\uc11c BottomSheet\ub098 SnackBar\ucc98\ub7fc \ud654\uba74\uc744 \ub36e\uc73c\uba74\uc11c \ub098\uc624\ub294 \ucc3d. Scaffold \uc548\uc5d0 \ub123\uc5b4\uc8fc\uae30\ub9cc \ud558\uba74 \ubc14\ub85c \ub098\ud0c0\ub0a8. Scaffold ( drawer: Drawer ( child: , ) ) \u314f drawer \ub2eb\ub294 \ubc29\ubc95 drawer\ub3c4 \ud558\ub098\uc758 \ud654\uba74\uc73c\ub85c \ucde8\uae09\ud558\uae30 \ub54c\ubb38\uc5d0, Navigation . of ( context ). pop (); \uc73c\ub85c \ub2eb\uc544\uc904 \uc218 \uc788\uc74c.","title":"Drawer"},{"location":"Flutter/design/drawer/#drawer","text":"drawer\ub3c4 \ud558\ub098\uc758 \ud654\uba74\uc73c\ub85c \ucde8\uae09\ud558\uae30 \ub54c\ubb38\uc5d0, Navigation . of ( context ). pop (); \uc73c\ub85c \ub2eb\uc544\uc904 \uc218 \uc788\uc74c.","title":"drawer \ub2eb\ub294 \ubc29\ubc95"},{"location":"Flutter/design/modal_bottom_sheet/","text":"Floating Modal Page pub.dev \ud398\uc774\uc9c0 IconButton ( // (1) onPressed: () { showFloatingModalBottomSheet ( context: context , builder: ( context ) { return ModalFit (); }); }, icon: Icon ( Icons . category ))), FloatingModal class class FloatingModal extends StatelessWidget { final Widget child ; final Color ? backgroundColor ; const FloatingModal ({ Key ? key , required this . child , this . backgroundColor }) : super ( key: key ); @override Widget build ( BuildContext context ) { return SafeArea ( child: Padding ( padding: EdgeInsets . symmetric ( horizontal: 20 ), child: Material ( color: backgroundColor , clipBehavior: Clip . antiAlias , borderRadius: BorderRadius . circular ( 12 ), child: child , ), ), ); } }; showFloatingModalBottomSheet \ud568\uc218 Future < T > showFloatingModalBottomSheet < T > ({ required BuildContext context , required WidgetBuilder builder , Color ? backgroundColor , }) async { final result = await showCustomModalBottomSheet ( context: context , builder: builder , containerWidget: ( _ , animation , child ) => FloatingModal ( child: child , ), expand: false ); return result ; } CategoryModalFit(\ub9ac\uc2a4\ud2b8) FloatingModalBottomSheet\uc5d0 \ubcf4\uc5ec\uc9c0\ub294 List Tile class ModalFit extends StatelessWidget { ModalFit ({ Key ? key }) : super ( key: key ); List < String > items = [ 'Item1' , 'item2' , 'Item3' , 'Item4' ]; @override Widget build ( BuildContext context ) { return Material ( child: SafeArea ( child: Column ( mainAxisSize: MainAxisSize . min , children: < Widget > [ ... List . generate ( items . length , ( index ) { return ListTile ( title: Text ( items [ index ]), leading: Icon ( Icons . insert_emoticon ), onTap: () => Navigator . of ( context ). pop (), ); }), ], ), )); } }","title":"Modal Bottom Sheet"},{"location":"Flutter/design/modal_bottom_sheet/#floating-modal-page","text":"pub.dev \ud398\uc774\uc9c0 IconButton ( // (1) onPressed: () { showFloatingModalBottomSheet ( context: context , builder: ( context ) { return ModalFit (); }); }, icon: Icon ( Icons . category ))),","title":"Floating Modal Page"},{"location":"Flutter/design/modal_bottom_sheet/#floatingmodal-class","text":"class FloatingModal extends StatelessWidget { final Widget child ; final Color ? backgroundColor ; const FloatingModal ({ Key ? key , required this . child , this . backgroundColor }) : super ( key: key ); @override Widget build ( BuildContext context ) { return SafeArea ( child: Padding ( padding: EdgeInsets . symmetric ( horizontal: 20 ), child: Material ( color: backgroundColor , clipBehavior: Clip . antiAlias , borderRadius: BorderRadius . circular ( 12 ), child: child , ), ), ); } };","title":"FloatingModal class"},{"location":"Flutter/design/modal_bottom_sheet/#showfloatingmodalbottomsheet","text":"Future < T > showFloatingModalBottomSheet < T > ({ required BuildContext context , required WidgetBuilder builder , Color ? backgroundColor , }) async { final result = await showCustomModalBottomSheet ( context: context , builder: builder , containerWidget: ( _ , animation , child ) => FloatingModal ( child: child , ), expand: false ); return result ; }","title":"showFloatingModalBottomSheet \ud568\uc218"},{"location":"Flutter/design/modal_bottom_sheet/#categorymodalfit","text":"FloatingModalBottomSheet\uc5d0 \ubcf4\uc5ec\uc9c0\ub294 List Tile class ModalFit extends StatelessWidget { ModalFit ({ Key ? key }) : super ( key: key ); List < String > items = [ 'Item1' , 'item2' , 'Item3' , 'Item4' ]; @override Widget build ( BuildContext context ) { return Material ( child: SafeArea ( child: Column ( mainAxisSize: MainAxisSize . min , children: < Widget > [ ... List . generate ( items . length , ( index ) { return ListTile ( title: Text ( items [ index ]), leading: Icon ( Icons . insert_emoticon ), onTap: () => Navigator . of ( context ). pop (), ); }), ], ), )); } }","title":"CategoryModalFit(\ub9ac\uc2a4\ud2b8)"},{"location":"Flutter/design/row_and_column/","text":"Row and Column row : \uc138\ub85c column : \uac00\ub85c children\uc744 \uc0ac\uc6a9\ud574\uc11c \ub2e4\uc218\uc758 \uc790\uc2dd \uc694\uc18c\ub97c \ub123\uc5b4\uc904 \uc218 \uc788\uc74c. mainAxisAlignment \uc8fc\ucd95 \uc815\ub82c, \uc8fc\ucd95\uc774 column\uc774\ub77c\uba74 \uac00\ub85c \ubc29\ud5a5\uc73c\ub85c, row \ub77c\uba74 \uc138\ub85c \ubc29\ud5a5\uc73c\ub85c \uc815\ub82c\ud574\uc90c. Column ( /* MainAxisAlignment - \uc8fc\ucd95 \uc815\ub82c. start - \uc2dc\uc791\uc5d0 \uc815\ub82c. end - \ub05d\uc5d0 \uc815\ub82c. center - \uac00\uc6b4\ub370 \uc815\ub82c. spaceBetween - \uc2dc\uc791\uacfc \ub05d\uc5d0 \ubc30\uce58\ub418\uace0 \uc704\uc82f\uacfc \uc704\uc82f\uc758 \uc0ac\uc774\uac00 \ub3d9\uc77c\ud558\uae30 \ubc30\uce58\ub428. spaceEvenly - \uc704\uc82f\uc744 \uac19\uc740 \uac04\uaca9\uc73c\ub85c \ubc30\uce58\ud558\uc9c0\ub9cc \ub05d\uacfc \ub05d\uc5d0\ub3c4 \uc704\uc82f\uc774 \uc544\ub2cc \ube48 \uac04\uaca9\uc73c\ub85c \uc2dc\uc791\ud568. spaceArround - spaceEvenly\uc5d0\uc11c \ub05d\uacfc \ub05d\uc758 \uac04\uaca9\uc744 \ubc18\ub9cc \uc90c. */ mainAxisAlignment: MainAxisAlignment . spaceEvenly , ) crossAxisAlignment \ubc18\ub300\ucd95 \uc815\ub82c, \uc8fc\ucd95\uc774 column\uc774\ub77c\uba74 \uc138\ub85c\ucd95\uc744 \uc815\ub82c\ud558\uace0 row\ub77c\uba74 \uac00\ub85c\ucd95\uc744 \uc815\ub82c\ud574\uc90c. Column ( // CrossAxisAlignment - \ubc18\ub300\ucd95 \uc815\ub82c, \uae30\ubcf8\uac12\uc740 center // strech - \uc0ac\uc774\uc988 \ucd5c\ub300 \uc0ac\uc774\uc988\ub85c \ub298\ub9bc. crossAxisAlignment: CrossAxisAlignment . start , ) mainAxisSize \uc8fc\ucd95\ud06c\uae30 \uc124\uc815. Column ( // \uc8fc\ucd95 \ud06c\uae30, max - \ucd5c\ub300, min - \ucd5c\uc18c mainAxisSize: MainAxisSize . min , ) Expanded or Flexible Column\uc774\ub098 Row\uc548\uc5d0\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c. Flexible \uacf5\uac04\uc744 \ucc28\uc9c0\ud558\uace0 \ub0a8\uc740 \ubd80\ubd84\uc744 Column\uc5d0 \ub3cc\ub824\uc90c. Column ( children: [ // Expanded / Flexible - column\uc774\ub098 row\uc548\uc5d0\ub2e4\uac00\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c. Flexible ( // \ubc11\uc5d0 \uc9c0\uc815\ub418\uc5b4 \uc788\ub294\ub9cc\ud07c\uc758 \uacf5\uac04\uc744 \ucc28\uc9c0\ud558\uace0 \ub0a8\uc740 \ubd80\ubd84\uc744 Column\uc5d0 \ub3cc\ub824\uc90c. child: Container ( color: Colors . red , width: 50.0 , height: 50.0 , ), ), ] ) Exmpanded \uacf5\uac04\uc744 \uc804\ubd80 \ucc28\uc9c0\ud558\ub77c\ub294 \ub73b. Column ( children: [ Expanded ( // \ub0a8\uc544\uc788\ub294 \uacf5\uac04\uc744 \ubaa8\ub450 \ucc28\uc9c0\ud558\ub77c\ub294 \ub73b. child: Container ( color: Colors . green , width: 50.0 , height: 50.0 , ), ), ] ) Reference Commit \uc774\ub825","title":"Row and Column"},{"location":"Flutter/design/row_and_column/#row-and-column","text":"row : \uc138\ub85c column : \uac00\ub85c children\uc744 \uc0ac\uc6a9\ud574\uc11c \ub2e4\uc218\uc758 \uc790\uc2dd \uc694\uc18c\ub97c \ub123\uc5b4\uc904 \uc218 \uc788\uc74c.","title":"Row and Column"},{"location":"Flutter/design/row_and_column/#mainaxisalignment","text":"\uc8fc\ucd95 \uc815\ub82c, \uc8fc\ucd95\uc774 column\uc774\ub77c\uba74 \uac00\ub85c \ubc29\ud5a5\uc73c\ub85c, row \ub77c\uba74 \uc138\ub85c \ubc29\ud5a5\uc73c\ub85c \uc815\ub82c\ud574\uc90c. Column ( /* MainAxisAlignment - \uc8fc\ucd95 \uc815\ub82c. start - \uc2dc\uc791\uc5d0 \uc815\ub82c. end - \ub05d\uc5d0 \uc815\ub82c. center - \uac00\uc6b4\ub370 \uc815\ub82c. spaceBetween - \uc2dc\uc791\uacfc \ub05d\uc5d0 \ubc30\uce58\ub418\uace0 \uc704\uc82f\uacfc \uc704\uc82f\uc758 \uc0ac\uc774\uac00 \ub3d9\uc77c\ud558\uae30 \ubc30\uce58\ub428. spaceEvenly - \uc704\uc82f\uc744 \uac19\uc740 \uac04\uaca9\uc73c\ub85c \ubc30\uce58\ud558\uc9c0\ub9cc \ub05d\uacfc \ub05d\uc5d0\ub3c4 \uc704\uc82f\uc774 \uc544\ub2cc \ube48 \uac04\uaca9\uc73c\ub85c \uc2dc\uc791\ud568. spaceArround - spaceEvenly\uc5d0\uc11c \ub05d\uacfc \ub05d\uc758 \uac04\uaca9\uc744 \ubc18\ub9cc \uc90c. */ mainAxisAlignment: MainAxisAlignment . spaceEvenly , )","title":"mainAxisAlignment"},{"location":"Flutter/design/row_and_column/#crossaxisalignment","text":"\ubc18\ub300\ucd95 \uc815\ub82c, \uc8fc\ucd95\uc774 column\uc774\ub77c\uba74 \uc138\ub85c\ucd95\uc744 \uc815\ub82c\ud558\uace0 row\ub77c\uba74 \uac00\ub85c\ucd95\uc744 \uc815\ub82c\ud574\uc90c. Column ( // CrossAxisAlignment - \ubc18\ub300\ucd95 \uc815\ub82c, \uae30\ubcf8\uac12\uc740 center // strech - \uc0ac\uc774\uc988 \ucd5c\ub300 \uc0ac\uc774\uc988\ub85c \ub298\ub9bc. crossAxisAlignment: CrossAxisAlignment . start , )","title":"crossAxisAlignment"},{"location":"Flutter/design/row_and_column/#mainaxissize","text":"\uc8fc\ucd95\ud06c\uae30 \uc124\uc815. Column ( // \uc8fc\ucd95 \ud06c\uae30, max - \ucd5c\ub300, min - \ucd5c\uc18c mainAxisSize: MainAxisSize . min , )","title":"mainAxisSize"},{"location":"Flutter/design/row_and_column/#expanded-or-flexible","text":"Column\uc774\ub098 Row\uc548\uc5d0\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c.","title":"Expanded or Flexible"},{"location":"Flutter/design/row_and_column/#flexible","text":"\uacf5\uac04\uc744 \ucc28\uc9c0\ud558\uace0 \ub0a8\uc740 \ubd80\ubd84\uc744 Column\uc5d0 \ub3cc\ub824\uc90c. Column ( children: [ // Expanded / Flexible - column\uc774\ub098 row\uc548\uc5d0\ub2e4\uac00\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c. Flexible ( // \ubc11\uc5d0 \uc9c0\uc815\ub418\uc5b4 \uc788\ub294\ub9cc\ud07c\uc758 \uacf5\uac04\uc744 \ucc28\uc9c0\ud558\uace0 \ub0a8\uc740 \ubd80\ubd84\uc744 Column\uc5d0 \ub3cc\ub824\uc90c. child: Container ( color: Colors . red , width: 50.0 , height: 50.0 , ), ), ] )","title":"Flexible"},{"location":"Flutter/design/row_and_column/#exmpanded","text":"\uacf5\uac04\uc744 \uc804\ubd80 \ucc28\uc9c0\ud558\ub77c\ub294 \ub73b. Column ( children: [ Expanded ( // \ub0a8\uc544\uc788\ub294 \uacf5\uac04\uc744 \ubaa8\ub450 \ucc28\uc9c0\ud558\ub77c\ub294 \ub73b. child: Container ( color: Colors . green , width: 50.0 , height: 50.0 , ), ), ] )","title":"Exmpanded"},{"location":"Flutter/design/row_and_column/#reference","text":"Commit \uc774\ub825","title":"Reference"},{"location":"Flutter/design/size/","text":"kToolbarHeight Appbar\uc758 \uc0ac\uc774\uc988\ub97c \uad6c\ud568. margin: EdgeInsets . only ( // (1) top: kToolbarHeight ), \uc801\uc6a9\uc804 \uc801\uc6a9\ud6c4 \ud654\uba74 \uc804\uccb4 \uc0ac\uc774\uc988 MediaQuery . of ( context ). size . width // \uac00\ub85c MediaQuery . of ( context ). size . height // \uc138\ub85c \ud0a4\ubcf4\ub4dc \uc0ac\uc774\uc988 \uc5ec\uae30\uc5d0\ub2e4\uac00 \ub192\uc774 \ub354 \ud574\uc8fc\uba74 \ud0a4\ubcf4\ub4dc \uc62c\ub77c\uc624\uba74 \ud0a4\ubcf4\ub4dc \ud06c\uae30\ub9cc\ud07c \ub192\uc774 \uc62c\ub77c\uac10. final bottomInsets = MediaQuery . of ( context ). viewInsets . bottom ;","title":"\ud06c\uae30 \uad6c\ud558\uae30 Tip"},{"location":"Flutter/design/size/#ktoolbarheight","text":"Appbar\uc758 \uc0ac\uc774\uc988\ub97c \uad6c\ud568. margin: EdgeInsets . only ( // (1) top: kToolbarHeight ), \uc801\uc6a9\uc804 \uc801\uc6a9\ud6c4","title":"kToolbarHeight"},{"location":"Flutter/design/size/#_1","text":"MediaQuery . of ( context ). size . width // \uac00\ub85c MediaQuery . of ( context ). size . height // \uc138\ub85c","title":"\ud654\uba74 \uc804\uccb4 \uc0ac\uc774\uc988"},{"location":"Flutter/design/size/#_2","text":"\uc5ec\uae30\uc5d0\ub2e4\uac00 \ub192\uc774 \ub354 \ud574\uc8fc\uba74 \ud0a4\ubcf4\ub4dc \uc62c\ub77c\uc624\uba74 \ud0a4\ubcf4\ub4dc \ud06c\uae30\ub9cc\ud07c \ub192\uc774 \uc62c\ub77c\uac10. final bottomInsets = MediaQuery . of ( context ). viewInsets . bottom ;","title":"\ud0a4\ubcf4\ub4dc \uc0ac\uc774\uc988"},{"location":"Flutter/design/scrollable_widget/","text":"Single Child Scroll View \uae30\ubcf8\uc740 \uc2a4\ud06c\ub864\uc774 \uc548\ub418\uc9c0\ub9cc, \ud654\uba74\uc774 \uae38\uc5b4\uc9c0\uba74 Scroll\uc774 \uac00\ub2a5\ud568. \ubdf0\ub97c \ud638\ucd9c\ud560 \ub54c \uc804\uccb4 \ub9ac\uc2a4\ud2b8\ub97c \ud55c\uaebc\ubc88\uc5d0 \ubd88\ub7ec\uc628\ub2e4\ub294 \ubb38\uc81c\uc810\uc774 \uc788\uc74c. \uc774\ub294 \uc131\ub2a5 \uc774\uc288\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\uc74c. SingleChildScrollView ( child: Column ( children: rainbowColors . map (( e ) => RenderColorContainer ( color: e )). toList (), ), ) physics: \uc2a4\ud06c\ub864 \uc2a4\ud0c0\uc77c \uac1c\uccb4\uac00 \ud654\uba74\uc744 \ub118\uc5b4\uac00\uc9c0 \uc54a\uc73c\uba74 scroll\uc774 \ubd88\uac00\ub2a5 \ud558\uc9c0\ub9cc \uc774\ub97c \uc5b5\uc9c0\ub85c \uac00\ub2a5\ud558\uac8c \ud574\uc8fc\ub294 \ubc29\ubc95\ub3c4 \uc788\uc74c. SingleChildScrollView ( /* Single Child ScrollView\uac00 \uc5b4\ub5a4 \ubc29\uc2dd\uc73c\ub85c \uc791\uc6a9\ud558\ub294\uc9c0 \uc815\ud560 \uc218 \uc788\uc74c. AlwaysScrollableScrollPhysics() - \ud56d\uc0c1 \uc2a4\ud06c\ub864 \uac00\ub2a5 NeverScrollableScrollPhysics()- \uc808\ub300 \uc2a4\ud06c\ub864 \ubd88\uac00\ub2a5 BouncingScrollPhysics() - iOS Style (\ud295\uae40.) ClampingScrollPhysics() - Android Style (\ud295\uae30\uc9c0 \uc54a\uc74c.) */ physics: AlwaysScrollableScrollPhysics (), child: Column ( children: [ RenderColorContainer ( color: Colors . black ), ], ), ); PageScroll \ub9d0\ub85c \uc124\uba85\ud558\uc790\uba74 \uc5b4\ub824\uc6b4\ub370 \ucc45\uc7a5 \ub118\uae30\ub4ef\uc774 \ub2e4\uc74c \ud398\uc774\uc9c0\ub85c \ub118\uc5b4\uac00\uac8c\ub054 \ud574\uc8fc\ub294 \uae30\ub2a5, \uc911\uac04\uc5d0 \uac78\ub9ac\uac70\ub098 \uadf8\ub7ec\uc9c0 \uc54a\uace0 \ub2e4\uc74c List\ub85c \ub118\uc5b4\uac10. physics: PageScrollPhysics (), // (1) \uc801\uc6a9 \uc804 \uc801\uc6a9 \ud6c4 clipBehavior: \ud654\uba74 \uc798\ub9bc \uc704\uc5d0\uc11c \ubcf4\uba74 \ud654\uba74\uc774 \uc2a4\ud06c\ub864 \ub420 \ub54c \uc798\ub9ac\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc74c. \uc774\ub294 clipBehavior \uc18d\uc131\uc744 \ucd94\uac00\ud574\uc11c \ud574\uacb0\ud560 \uc218 \uc788\uc74c. clipBehavior: Clip . none \uc804\uccb4 \uc801\uc6a9 \ud83d\udc47 SingleChildScrollView ( physics: AlwaysScrollableScrollPhysics (), // Clip.none : \ud654\uba74 \uc798\ub9ac\uc9c0 \uc54a\uac8c \ud574\uc90c. clipBehavior: Clip . none , child: Column ( children: [ RenderColorContainer ( color: Colors . black ), ], ), ); List View \ubaa8\ub4e0 \ubdf0\ub97c \ud55c \ubc88\uc5d0 \ubcf4\uc5ec\uc8fc\ub294 \ubc29\ubc95, \uae30\ubcf8\uc801\uc778 \uc0ac\uc6a9 \ubc29\ubc95\uc774\uc9c0\ub9cc \uc774\ub294 \uc704\uc758 Single Child List View\uc640 \uac19\uc774 \uc131\ub2a5 \uc774\uc288\ub85c \uc774\uc5b4\uc9c8 \uac00\ub2a5\uc131\uc774 \uc788\uc74c. ListView ( children: [ ] ) Builder: Build\ub418\ub294 View\ub9cc \uc0dd\uc131 Build \ub418\ub294 View\ub9cc \uc0dd\uc131\ud558\ubbc0\ub85c \uc131\ub2a5 \uc774\uc288 \uc548\uc815\ud654. ListView . builder ( itemCount: 100 , itemBuilder: ( context , index ) { print ( index ); // \uc0c8\ub85c\uc6b4 \ubdf0\uac00 \ud638\ucd9c\ub420 \ub54c\ub9c8\ub2e4 \uc0dd\uc131 return RenderColorContainer ( color: rainbowColors [ index % rainbowColors . length ], index: index , ); }, ); seperate: \uc0ac\uc774\uc0ac\uc774\uc5d0 view \uc0dd\uc131 ListView . separated ( itemBuilder: ( context , index ){ return RenderColorContainer ( // \ub79c\ub354\ud558\uace0 \uc2f6\uc740 \ubdf0 color: rainbowColors [ index % rainbowColors . length ]); }, separatorBuilder: ( context , index ){ return RenderColorContainer ( // \uc0ac\uc774\uc0ac\uc774\uc5d0 \ub80c\ub354\ud558\uace0 \uc2f6\uc740 \ubdf0 color: Colors . black , height: 50 , ); }, itemCount: 100 ); } ListTile \ud14d\uc2a4\ud2b8 \ub610\ub294 \uc544\uc774\ucf58\uc744 \ud3ec\ud568\ud558\ub294 \uace0\uc815 \ub192\uc774\uc758 \ub2e8\uc77c \ud589. ListTile ( tileColor: Colors . white , selectedTileColor: lightColor , selectedColor: Colors . black , selected: e == '\uc11c\uc6b8' , onTap: () {}, title: Text ( e ), ), // (1) Grid View \uac00\ub85c\ub85c \uc5ec\ub7ec \uac1c\uc758 View\ub97c \ud45c\uc2dc\ud560 \uc218 \uc788\uc74c. Count \ubdf0\ub97c \ud55c \ubc88\uc5d0 \ub2e4 \uadf8\ub824\ub0b8\ub2e4\ub294 \ub2e8\uc810\uc774 \uc788\uc74c. crossAxisCount \uc5d0 \uac00\ub85c\ub85c \ud45c\uc2dc\ub420 \ubdf0\uc758 \uac2f\uc218\ub97c \ub123\uc5b4\uc904 \uc218 \uc788\uc74c. \uc804\uccb4 \ucf54\ub4dc \ud83d\udc47 GridView . count ( crossAxisCount: 2 , // \uac00\ub85c \ubdf0 \uac2f\uc218 crossAxisSpacing: 12.0 , // \uac00\ub85c \uac04\uaca9 mainAxisSpacing: 12.0 , // \uac00\ub85c \uac04\uaca9 children: numbers . map ( ( e ) => RenderColorContainer ( color: rainbowColors [ e % rainbowColors . length ], index: e , ), ). toList (), ); AxisSpacing crossAxisSpacing : \uac00\ub85c\ub85c \uac04\uaca9 \ub098\ub214 (float) mainAxisSpacing : \uc138\ub85c\ub85c \uac04\uaca9 \ub098\ub214 (float) builder: \ud654\uba74\uc5d0 \ubcf4\uc774\ub294 \uac2f\uc218\ub9cc\ud07c (delegate)CrossAxisCount: \uc9c0\uc815\ud55c \uac2f\uc218 \uae30\uc900 \uac00\ub85c\ub85c \uc9c0\uc815\ud55c \uac2f\uc218\ub9cc\ud07c \ubdf0\ub97c \ubcf4\uc5ec\uc90c. GridView . builder ( gridDelegate: SliverGridDelegateWithFixedCrossAxisCount ( crossAxisCount: 2 // \uac00\ub85c\ub85c \ubdf0 \uac2f\uc218 \uace0\uc815\ud568 ), itemBuilder: ( context , index ) { return RenderColorContainer ( color: rainbowColors [ index % rainbowColors . length ], index: index , ); }, ); (delegate)CrossAxisEntent: \ucd5c\ub300 \uc0ac\uc774\uc988 \uae30\uc900 \uc9c0\uc815\ud55c \ucd5c\ub300 \ud06c\uae30 \uae30\uc900\uc73c\ub85c \uadf8 \ucd5c\ub300 \ud06c\uae30\ub97c \ub118\uc9c0 \uc54a\ub294 \uc120\uc5d0\uc11c \uac00\ub85c\ub85c \ucd5c\ub300\ub85c \ubdf0 \uac2f\uc218\ub97c \ucc44\uc6c0. gridDelegate: SliverGridDelegateWithMaxCrossAxisExtent ( maxCrossAxisExtent: 50 , // \ucd5c\ub300 \ud06c\uae30\uac00 50\uc774 \ub418\ub294 \ud55c\ub3c4 \ub0b4\uc5d0\uc11c \uac00\ub85c\ub85c \uaf49 \ucc44\uc6c0. ) Reorderable List View \uc7ac\uc815\ub82c \uac00\ub2a5\ud55c List View. builder\ub97c \ud1b5\ud55c \uad6c\ud604 \ud83d\udc47 ReorderableListView . builder ( itemBuilder: ( context , index ) { return RenderColorContainer ( key: Key ( index . toString ()), color: rainbowColors [ renderNumbers [ index ] % rainbowColors . length ], index: renderNumbers [ index ]); // (1)! }, itemCount: renderNumbers . length , onReorder: ( int oldIndex , int newIndex ) { setState (() { if ( oldIndex < newIndex ) { newIndex -= 1 ; } // (2)! final item = renderNumbers . removeAt ( oldIndex ); renderNumbers . insert ( newIndex , item ); }); }, ) index number\uac00 \uc774\ub3d9\ud558\uba74 \uc774\ub3d9\ud55c \uc704\uce58\uc758 \uc0c8\ub85c\uc6b4 index number(3 > 5\ub85c \uc62e\uae30\uace0 \ub098\uba74 3\uc790\ub9ac\uc5d0 3\uc774 \uadf8\ub300\ub85c \ub4e4\uc5b4\uc634)\uac00 \ub428, \uadf8\ub7ec\ub098 \ud574\ub2f9 index\uc5d0 \uc788\ub358 renderNumber\ub294 \ubc14\ub00c\uac8c \ub428(3\uc790\ub9ac\uc5d0 \uc788\ub358 3\uc744 5\ub85c \ubcf4\ub0b4\uac8c \ub418\uba74 3\uc790\ub9ac\uc5d0 4\uac00 \ub4e4\uc5b4\uc634). \uc989, 3\uc5d0 \uc788\ub358 renderNumber\ub97c 5\ub85c \ubcf4\ub0b4\uba74 \uc5ec\uc804\ud788 3\ubc88\uc9f8 \uc778\ub371\uc2a4\ub97c \ubd24\uc744 \ub54c 3\ubc88\uc9f8 \uc778\ub371\uc2a4\ub85c \ubcf4\uc774\uc9c0\ub9cc \ud574\ub2f9\ud558\ub294 \uc778\ub371\uc2a4\uc5d0\ub294 renderNumber\uc758 \ub2e4\uc74c \uc778\ub371\uc2a4\uac00 \uadf8 \uc778\ub371\uc2a4 \ubc88\ud638\ub97c \ucc28\uc9c0\ud558\uac8c \ub428. oldIndex\uc640 newIndex \ubaa8\ub450 \uc774\ub3d9\uc774 \ub418\uae30 \uc804\uc5d0 \uc0b0\uc815\ub428. [red, orange, yellow] [0, 1, 2] red\ub97c yellow \ub2e4\uc74c\uc73c\ub85c \uc62e\uae30\uace0 \uc2f6\uc744 \uacbd\uc6b0 oldIndex\ub294 0\uc73c\ub85c newIndex\ub294 3\uc73c\ub85c \uc9c0\uc815\uc774 \ub428. [orange, yellow, red] \uc62e\uae30\uace0 \ub09c \ud6c4\uc758 Red\uc758 index\ub294 2\ubc88\uc774 \ub428. \ub530\ub77c\uc11c \ub0ae\uc740 \uc778\ub371\uc2a4\ub97c \ub192\uc740 \uc778\ub371\uc2a4\ub85c \uc62e\uae38 \ub54c\ub294 newIndex\uc5d0 -1\uc744 \ud574\uc918\uc57c\ud568. [red, orange, yellow] yellow\ub97c \ub9e8 \uc55e\uc73c\ub85c \uc62e\uae30\uace0 \uc2f6\uc744 \uacbd\uc6b0. yellow : 2 oldIndex -> 0 newIndex [yellow, red, orange] Custom Scroll View Grid View\uc640 List View\ub97c \uc5f0\uc18d\ud574\uc11c \uc368\uc57c\ud560 \uc77c\uc774 \uc788\uac70\ub098\ud560 \ub54c Custom\ud574\uc11c \uc0ac\uc6a9\uc790\uac00 \uc815\uc758\ud55c \ubc29\uc2dd\ub300\ub85c \ub3d9\uc791\ud558\ub294 Scroll View. Sliver List @override Widget build ( BuildContext context ) { return Scaffold ( body: CustomScrollView ( slivers: [ renderSliverAppBar (), renderBuilderSliverList (), ], ), ); } SliverList renderBuilderSliverList () { return SliverList ( delegate: SliverChildBuilderDelegate ( // delegate \uc9c0\uc815\ud574\uc918\uc57c\ud568. ( context , index ) { return RenderColorContainer ( index: index , color: rainbowColors [ index % rainbowColors . length ]); }, // (1)! childCount: 100 , // itemCount\uc640 \uac19\uc74c, view \ucd5c\ub300 \uac2f\uc218 \uc9c0\uc815 ), ); } ListView\uc5d0\uc11c\ub294 itemBuilder\uc758 \ud30c\ub77c\ubbf8\ud130\ub85c \ub4e4\uc5b4\uac14\uc9c0\ub9cc \uc5ec\uae30\uc5d0\uc120 Delegate\uc5d0 \ud568\uc218 \ud615\ud0dc\ub85c \ub4e4\uc5b4\uac00\uac8c \ub428. Sliver Grid Sliver List\uc5d0\uc11c gridDelegate\uac00 \ucd94\uac00\ub428. Widget build ( BuildContext context ) { return Scaffold ( body: CustomScrollView ( slivers: [ renderSliverAppBar (), renderSliverGrid (), ], ), ); } SliverGrid renderSliverGrid () { return SliverGrid ( delegate: SliverChildBuilderDelegate ( ( context , index ) { return RenderColorContainer ( index: index , color: rainbowColors [ index % rainbowColors . length ]); }, childCount: 100 , // itemCount\uc640 \uc720\uc0ac\ud568 ), gridDelegate: SliverGridDelegateWithFixedCrossAxisCount ( crossAxisCount: 2 ), ); // (1)! } Grid View\uc5d0\uc11c \ucd94\uac00\ud558\ub294 Delegate\uc5d0 Sliver\ub9cc \ubd99\uc784. Sliver Appbar \ucee4\uc2a4\ud140 Appbar, Default \uc124\uc815\uc73c\ub85c \uc790\ub3d9\uc73c\ub85c \uc5c6\uc5b4\uc9c0\uac8c \ub054 \ub418\uc5b4 \uc788\uc74c. SliverAppBar ( floating: true , snap: false , // (1)! stretch: true , pinned: false , // (2)! expandedHeight: 400 , // \ucd5c\ub300\ub85c \ub298\uc5b4\ub098\ub294 \uc0ac\uc774\uc988 collapsedHeight: 100 , // \uc811\ud614\uc744 \ub54c \uc0ac\uc774\uc988 flexibleSpace: FlexibleSpaceBar ( background: Image . asset ( 'asset/img/image_1.jpeg' , fit: BoxFit . cover ), title: Text ( 'FlexibleSpaceBar' , style: TextStyle ( color: Colors . black ), ), ), // (3)! title: Text ( 'Custom Scroll View Screen' ), ); floating : true\ub85c \ud558\uba74\uc704\ub85c \uc7a0\uae50 \uc2a4\ud06c\ub864\ud558\uba74 AppBar \ub098\ud0c0\ub0a8. snap : flaoting True \uc0c1\ud0dc\ub85c \uc0ac\uc6a9, true\uc2dc \uc870\uae08\ub9cc \uc2a4\ud06c\ub864\ud574\ub3c4 AppBar \uc6c0\uc9c1\uc784. stretch : \ub9e8 \uc704\uc5d0\uc11c \ud55c\uacc4 \uc774\uc0c1\uc73c\ub85c \uc2a4\ud06c\ub864 \ud588\uc744 \ub54c Scaffold \ub300\uc2e0 Appbar\uac00 \ucc28\uc9c0\ud568. pinned : true\ub85c \ud558\uba74 \uc704\uc5d0 AppBar \uace0\uc815\ub428. \uace0\uc815 \uc804 \uace0\uc815 \ud6c4 \ub298\uc5b4\ub0ac\uc744 \ub54c \ubcf4\uc5ec\uc9c0\ub294 \uacf5\uac04 Sliver Header Sliver Header\ub294 Custom Scroll View \uc0ac\uc774\uc0ac\uc774\uc5d0 Header\ub97c \ub123\uc744 \uc218 \uc788\ub294 \uae30\ub2a5\uc784. SliverPersistentHeader SliverPersistentHeader ( pinned: true , // \uc0c1\ub2e8\uc5d0 \uace0\uc815\ud568 // Delegate\uc5d0\uc11c \uc2e4\uc81c \ub3d9\uc791 \uad6c\ud604 //(1)! delegate: _SliverFixedHeaderDelegate ( child: Container ( color: Colors . black , child: Center ( child: Text ( '\uc2e0\uae30\ud558\uc9c0~' , style: TextStyle ( color: Colors . white , ), ), ), ), maxHeight: 200 , minHeigt: 10 ), ); \ub3d9\uc791 \ud654\uba74 Delegate Class (\uc2e4\uc81c\ub85c \ub3d9\uc791\ud558\ub294 \ubd80\ubd84) class _SliverFixedHeaderDelegate extends SliverPersistentHeaderDelegate { final Widget child ; final double maxHeight ; final double minHeigt ; _SliverFixedHeaderDelegate ({ required this . child , required this . maxHeight , required this . minHeigt , }); // \uc2e4\uc81c\ub85c build \ud558\ub294 \ubd80\ubd84 @override Widget build ( BuildContext context , double shrinkOffset , bool overlapsContent ) { return SizedBox . expand ( child: child , ); } // \ucd5c\ub300 \ub192\uc774 @override double get maxExtent => maxHeight ; // \ucd5c\uc18c \ub192\uc774 @override double get minExtent => minHeigt ; // oldDelegate - build\uac00 \uc2e4\ud589\uc774 \ub410\uc744 \ub54c \uc774\uc804 Delegate // return \uac12\uc774 true\uba74 \uc7ac\ube4c\ub4dc \ud568 @override bool shouldRebuild ( _SliverFixedHeaderDelegate oldDelegate ) { return oldDelegate . minHeigt != minHeigt || oldDelegate . maxHeight != maxHeight || oldDelegate . child != child ; } } Sliver To Box Adaptor slivers = [] \uc548\uc5d0\ub294 Sliver \uc704\uc82f\ub4e4 \ubc16\uc5d0 \ub4e4\uc5b4\uc62c \uc218 \uc5c6\uc9c0\ub9cc Sliver To Box Adaptor\ub97c \uc0ac\uc6a9\ud558\uba74 Card\ub098 Container \ub4f1\uc758 \uc704\uc82f\uc774 \ub4e4\uc5b4\uc62c \uc218 \uc788\uc74c. Slvier To Box Adaptor SliverToBoxAdapter ( child: Container ( color: Colors . white , height: 200 , child: Column ( mainAxisAlignment: MainAxisAlignment . center , children: [ Text ( '\uc774\uac74 \ub418\uc9c0\ub871 !!!!!' , style: TextStyle ( fontSize: 18 , fontWeight: FontWeight . w700 ), textAlign: TextAlign . center , ), ], ), ), ); Scrollbar Scroll \uac00\ub2a5\ud55c \uc704\uc82f\uc744 Widget(Scrollbar)\ub85c \uac10\uc2f8\uc90c. \uae30\ubcf8\uc801\uc73c\ub85c \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uc2a4\ud06c\ub864 \ubc14\uac00 \uc0dd\uae40. Scrollbar ( // \ub3d9\uc791 \ud654\uba74 (1) child: SingleChildScrollView ( child: Column ( children: renderNumbers . map ( ( e ) => RenderColorContainer ( index: e , color: rainbowColors [ e % rainbowColors . length ], ), ) . toList (), ), ), ), 1. Refresh Indicator Scrollable View\uc758 \ucd5c\uc0c1\ub2e8\uc5d0\uc11c \uc544\ub798\ub85c \ub2f9\uacbc\uc744 \ub54c loading \ucc3d\uc774 \uad6c\ud604\ub428. ScrollBar\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c Scrollable \uc704\uc82f\uc744 Refresh Indicator\ub85c \uac10\uc2f8\uace0 onRefresh\ub85c refresh \uc2e4\ud589\uc2dc \ub3d9\uc791\ud560 \ud568\uc218\ub97c \uad6c\ud604\ud568. RefreshIndicator ( // refresh \uc2e4\ud589\ud558\uba74 \uc2e4\ud589\ub420 \ud568\uc218 onRefresh: () async { await Future . delayed ( Duration ( seconds: 2 )); }, child: ListView ( children: renderNumbers . map ( ( e ) => RenderColorContainer ( index: e , color: rainbowColors [ e % rainbowColors . length ], ), ). toList (), ), ); // \uc2e4\ud589 \ud654\uba74 : (1)","title":"Scrollable Widget"},{"location":"Flutter/design/scrollable_widget/#single-child-scroll-view","text":"\uae30\ubcf8\uc740 \uc2a4\ud06c\ub864\uc774 \uc548\ub418\uc9c0\ub9cc, \ud654\uba74\uc774 \uae38\uc5b4\uc9c0\uba74 Scroll\uc774 \uac00\ub2a5\ud568. \ubdf0\ub97c \ud638\ucd9c\ud560 \ub54c \uc804\uccb4 \ub9ac\uc2a4\ud2b8\ub97c \ud55c\uaebc\ubc88\uc5d0 \ubd88\ub7ec\uc628\ub2e4\ub294 \ubb38\uc81c\uc810\uc774 \uc788\uc74c. \uc774\ub294 \uc131\ub2a5 \uc774\uc288\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\uc74c. SingleChildScrollView ( child: Column ( children: rainbowColors . map (( e ) => RenderColorContainer ( color: e )). toList (), ), )","title":"Single Child Scroll View"},{"location":"Flutter/design/scrollable_widget/#physics","text":"\uac1c\uccb4\uac00 \ud654\uba74\uc744 \ub118\uc5b4\uac00\uc9c0 \uc54a\uc73c\uba74 scroll\uc774 \ubd88\uac00\ub2a5 \ud558\uc9c0\ub9cc \uc774\ub97c \uc5b5\uc9c0\ub85c \uac00\ub2a5\ud558\uac8c \ud574\uc8fc\ub294 \ubc29\ubc95\ub3c4 \uc788\uc74c. SingleChildScrollView ( /* Single Child ScrollView\uac00 \uc5b4\ub5a4 \ubc29\uc2dd\uc73c\ub85c \uc791\uc6a9\ud558\ub294\uc9c0 \uc815\ud560 \uc218 \uc788\uc74c. AlwaysScrollableScrollPhysics() - \ud56d\uc0c1 \uc2a4\ud06c\ub864 \uac00\ub2a5 NeverScrollableScrollPhysics()- \uc808\ub300 \uc2a4\ud06c\ub864 \ubd88\uac00\ub2a5 BouncingScrollPhysics() - iOS Style (\ud295\uae40.) ClampingScrollPhysics() - Android Style (\ud295\uae30\uc9c0 \uc54a\uc74c.) */ physics: AlwaysScrollableScrollPhysics (), child: Column ( children: [ RenderColorContainer ( color: Colors . black ), ], ), );","title":"physics: \uc2a4\ud06c\ub864 \uc2a4\ud0c0\uc77c"},{"location":"Flutter/design/scrollable_widget/#pagescroll","text":"\ub9d0\ub85c \uc124\uba85\ud558\uc790\uba74 \uc5b4\ub824\uc6b4\ub370 \ucc45\uc7a5 \ub118\uae30\ub4ef\uc774 \ub2e4\uc74c \ud398\uc774\uc9c0\ub85c \ub118\uc5b4\uac00\uac8c\ub054 \ud574\uc8fc\ub294 \uae30\ub2a5, \uc911\uac04\uc5d0 \uac78\ub9ac\uac70\ub098 \uadf8\ub7ec\uc9c0 \uc54a\uace0 \ub2e4\uc74c List\ub85c \ub118\uc5b4\uac10. physics: PageScrollPhysics (), // (1) \uc801\uc6a9 \uc804 \uc801\uc6a9 \ud6c4","title":"PageScroll"},{"location":"Flutter/design/scrollable_widget/#clipbehavior","text":"\uc704\uc5d0\uc11c \ubcf4\uba74 \ud654\uba74\uc774 \uc2a4\ud06c\ub864 \ub420 \ub54c \uc798\ub9ac\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc74c. \uc774\ub294 clipBehavior \uc18d\uc131\uc744 \ucd94\uac00\ud574\uc11c \ud574\uacb0\ud560 \uc218 \uc788\uc74c. clipBehavior: Clip . none \uc804\uccb4 \uc801\uc6a9 \ud83d\udc47 SingleChildScrollView ( physics: AlwaysScrollableScrollPhysics (), // Clip.none : \ud654\uba74 \uc798\ub9ac\uc9c0 \uc54a\uac8c \ud574\uc90c. clipBehavior: Clip . none , child: Column ( children: [ RenderColorContainer ( color: Colors . black ), ], ), );","title":"clipBehavior: \ud654\uba74 \uc798\ub9bc"},{"location":"Flutter/design/scrollable_widget/#list-view","text":"\ubaa8\ub4e0 \ubdf0\ub97c \ud55c \ubc88\uc5d0 \ubcf4\uc5ec\uc8fc\ub294 \ubc29\ubc95, \uae30\ubcf8\uc801\uc778 \uc0ac\uc6a9 \ubc29\ubc95\uc774\uc9c0\ub9cc \uc774\ub294 \uc704\uc758 Single Child List View\uc640 \uac19\uc774 \uc131\ub2a5 \uc774\uc288\ub85c \uc774\uc5b4\uc9c8 \uac00\ub2a5\uc131\uc774 \uc788\uc74c. ListView ( children: [ ] )","title":"List View"},{"location":"Flutter/design/scrollable_widget/#builder-build-view","text":"Build \ub418\ub294 View\ub9cc \uc0dd\uc131\ud558\ubbc0\ub85c \uc131\ub2a5 \uc774\uc288 \uc548\uc815\ud654. ListView . builder ( itemCount: 100 , itemBuilder: ( context , index ) { print ( index ); // \uc0c8\ub85c\uc6b4 \ubdf0\uac00 \ud638\ucd9c\ub420 \ub54c\ub9c8\ub2e4 \uc0dd\uc131 return RenderColorContainer ( color: rainbowColors [ index % rainbowColors . length ], index: index , ); }, );","title":"Builder: Build\ub418\ub294 View\ub9cc \uc0dd\uc131"},{"location":"Flutter/design/scrollable_widget/#seperate-view","text":"ListView . separated ( itemBuilder: ( context , index ){ return RenderColorContainer ( // \ub79c\ub354\ud558\uace0 \uc2f6\uc740 \ubdf0 color: rainbowColors [ index % rainbowColors . length ]); }, separatorBuilder: ( context , index ){ return RenderColorContainer ( // \uc0ac\uc774\uc0ac\uc774\uc5d0 \ub80c\ub354\ud558\uace0 \uc2f6\uc740 \ubdf0 color: Colors . black , height: 50 , ); }, itemCount: 100 ); }","title":"seperate: \uc0ac\uc774\uc0ac\uc774\uc5d0 view \uc0dd\uc131"},{"location":"Flutter/design/scrollable_widget/#listtile","text":"\ud14d\uc2a4\ud2b8 \ub610\ub294 \uc544\uc774\ucf58\uc744 \ud3ec\ud568\ud558\ub294 \uace0\uc815 \ub192\uc774\uc758 \ub2e8\uc77c \ud589. ListTile ( tileColor: Colors . white , selectedTileColor: lightColor , selectedColor: Colors . black , selected: e == '\uc11c\uc6b8' , onTap: () {}, title: Text ( e ), ), // (1)","title":"ListTile"},{"location":"Flutter/design/scrollable_widget/#grid-view","text":"\uac00\ub85c\ub85c \uc5ec\ub7ec \uac1c\uc758 View\ub97c \ud45c\uc2dc\ud560 \uc218 \uc788\uc74c.","title":"Grid View"},{"location":"Flutter/design/scrollable_widget/#count","text":"\ubdf0\ub97c \ud55c \ubc88\uc5d0 \ub2e4 \uadf8\ub824\ub0b8\ub2e4\ub294 \ub2e8\uc810\uc774 \uc788\uc74c. crossAxisCount \uc5d0 \uac00\ub85c\ub85c \ud45c\uc2dc\ub420 \ubdf0\uc758 \uac2f\uc218\ub97c \ub123\uc5b4\uc904 \uc218 \uc788\uc74c. \uc804\uccb4 \ucf54\ub4dc \ud83d\udc47 GridView . count ( crossAxisCount: 2 , // \uac00\ub85c \ubdf0 \uac2f\uc218 crossAxisSpacing: 12.0 , // \uac00\ub85c \uac04\uaca9 mainAxisSpacing: 12.0 , // \uac00\ub85c \uac04\uaca9 children: numbers . map ( ( e ) => RenderColorContainer ( color: rainbowColors [ e % rainbowColors . length ], index: e , ), ). toList (), );","title":"Count"},{"location":"Flutter/design/scrollable_widget/#axisspacing","text":"crossAxisSpacing : \uac00\ub85c\ub85c \uac04\uaca9 \ub098\ub214 (float) mainAxisSpacing : \uc138\ub85c\ub85c \uac04\uaca9 \ub098\ub214 (float)","title":"AxisSpacing"},{"location":"Flutter/design/scrollable_widget/#builder","text":"","title":"builder: \ud654\uba74\uc5d0 \ubcf4\uc774\ub294 \uac2f\uc218\ub9cc\ud07c"},{"location":"Flutter/design/scrollable_widget/#delegatecrossaxiscount","text":"\uac00\ub85c\ub85c \uc9c0\uc815\ud55c \uac2f\uc218\ub9cc\ud07c \ubdf0\ub97c \ubcf4\uc5ec\uc90c. GridView . builder ( gridDelegate: SliverGridDelegateWithFixedCrossAxisCount ( crossAxisCount: 2 // \uac00\ub85c\ub85c \ubdf0 \uac2f\uc218 \uace0\uc815\ud568 ), itemBuilder: ( context , index ) { return RenderColorContainer ( color: rainbowColors [ index % rainbowColors . length ], index: index , ); }, );","title":"(delegate)CrossAxisCount: \uc9c0\uc815\ud55c \uac2f\uc218 \uae30\uc900"},{"location":"Flutter/design/scrollable_widget/#delegatecrossaxisentent","text":"\uc9c0\uc815\ud55c \ucd5c\ub300 \ud06c\uae30 \uae30\uc900\uc73c\ub85c \uadf8 \ucd5c\ub300 \ud06c\uae30\ub97c \ub118\uc9c0 \uc54a\ub294 \uc120\uc5d0\uc11c \uac00\ub85c\ub85c \ucd5c\ub300\ub85c \ubdf0 \uac2f\uc218\ub97c \ucc44\uc6c0. gridDelegate: SliverGridDelegateWithMaxCrossAxisExtent ( maxCrossAxisExtent: 50 , // \ucd5c\ub300 \ud06c\uae30\uac00 50\uc774 \ub418\ub294 \ud55c\ub3c4 \ub0b4\uc5d0\uc11c \uac00\ub85c\ub85c \uaf49 \ucc44\uc6c0. )","title":"(delegate)CrossAxisEntent: \ucd5c\ub300 \uc0ac\uc774\uc988 \uae30\uc900"},{"location":"Flutter/design/scrollable_widget/#reorderable-list-view","text":"\uc7ac\uc815\ub82c \uac00\ub2a5\ud55c List View. builder\ub97c \ud1b5\ud55c \uad6c\ud604 \ud83d\udc47 ReorderableListView . builder ( itemBuilder: ( context , index ) { return RenderColorContainer ( key: Key ( index . toString ()), color: rainbowColors [ renderNumbers [ index ] % rainbowColors . length ], index: renderNumbers [ index ]); // (1)! }, itemCount: renderNumbers . length , onReorder: ( int oldIndex , int newIndex ) { setState (() { if ( oldIndex < newIndex ) { newIndex -= 1 ; } // (2)! final item = renderNumbers . removeAt ( oldIndex ); renderNumbers . insert ( newIndex , item ); }); }, ) index number\uac00 \uc774\ub3d9\ud558\uba74 \uc774\ub3d9\ud55c \uc704\uce58\uc758 \uc0c8\ub85c\uc6b4 index number(3 > 5\ub85c \uc62e\uae30\uace0 \ub098\uba74 3\uc790\ub9ac\uc5d0 3\uc774 \uadf8\ub300\ub85c \ub4e4\uc5b4\uc634)\uac00 \ub428, \uadf8\ub7ec\ub098 \ud574\ub2f9 index\uc5d0 \uc788\ub358 renderNumber\ub294 \ubc14\ub00c\uac8c \ub428(3\uc790\ub9ac\uc5d0 \uc788\ub358 3\uc744 5\ub85c \ubcf4\ub0b4\uac8c \ub418\uba74 3\uc790\ub9ac\uc5d0 4\uac00 \ub4e4\uc5b4\uc634). \uc989, 3\uc5d0 \uc788\ub358 renderNumber\ub97c 5\ub85c \ubcf4\ub0b4\uba74 \uc5ec\uc804\ud788 3\ubc88\uc9f8 \uc778\ub371\uc2a4\ub97c \ubd24\uc744 \ub54c 3\ubc88\uc9f8 \uc778\ub371\uc2a4\ub85c \ubcf4\uc774\uc9c0\ub9cc \ud574\ub2f9\ud558\ub294 \uc778\ub371\uc2a4\uc5d0\ub294 renderNumber\uc758 \ub2e4\uc74c \uc778\ub371\uc2a4\uac00 \uadf8 \uc778\ub371\uc2a4 \ubc88\ud638\ub97c \ucc28\uc9c0\ud558\uac8c \ub428. oldIndex\uc640 newIndex \ubaa8\ub450 \uc774\ub3d9\uc774 \ub418\uae30 \uc804\uc5d0 \uc0b0\uc815\ub428. [red, orange, yellow] [0, 1, 2] red\ub97c yellow \ub2e4\uc74c\uc73c\ub85c \uc62e\uae30\uace0 \uc2f6\uc744 \uacbd\uc6b0 oldIndex\ub294 0\uc73c\ub85c newIndex\ub294 3\uc73c\ub85c \uc9c0\uc815\uc774 \ub428. [orange, yellow, red] \uc62e\uae30\uace0 \ub09c \ud6c4\uc758 Red\uc758 index\ub294 2\ubc88\uc774 \ub428. \ub530\ub77c\uc11c \ub0ae\uc740 \uc778\ub371\uc2a4\ub97c \ub192\uc740 \uc778\ub371\uc2a4\ub85c \uc62e\uae38 \ub54c\ub294 newIndex\uc5d0 -1\uc744 \ud574\uc918\uc57c\ud568. [red, orange, yellow] yellow\ub97c \ub9e8 \uc55e\uc73c\ub85c \uc62e\uae30\uace0 \uc2f6\uc744 \uacbd\uc6b0. yellow : 2 oldIndex -> 0 newIndex [yellow, red, orange]","title":"Reorderable List View"},{"location":"Flutter/design/scrollable_widget/#custom-scroll-view","text":"Grid View\uc640 List View\ub97c \uc5f0\uc18d\ud574\uc11c \uc368\uc57c\ud560 \uc77c\uc774 \uc788\uac70\ub098\ud560 \ub54c Custom\ud574\uc11c \uc0ac\uc6a9\uc790\uac00 \uc815\uc758\ud55c \ubc29\uc2dd\ub300\ub85c \ub3d9\uc791\ud558\ub294 Scroll View.","title":"Custom Scroll View"},{"location":"Flutter/design/scrollable_widget/#sliver-list","text":"@override Widget build ( BuildContext context ) { return Scaffold ( body: CustomScrollView ( slivers: [ renderSliverAppBar (), renderBuilderSliverList (), ], ), ); } SliverList renderBuilderSliverList () { return SliverList ( delegate: SliverChildBuilderDelegate ( // delegate \uc9c0\uc815\ud574\uc918\uc57c\ud568. ( context , index ) { return RenderColorContainer ( index: index , color: rainbowColors [ index % rainbowColors . length ]); }, // (1)! childCount: 100 , // itemCount\uc640 \uac19\uc74c, view \ucd5c\ub300 \uac2f\uc218 \uc9c0\uc815 ), ); } ListView\uc5d0\uc11c\ub294 itemBuilder\uc758 \ud30c\ub77c\ubbf8\ud130\ub85c \ub4e4\uc5b4\uac14\uc9c0\ub9cc \uc5ec\uae30\uc5d0\uc120 Delegate\uc5d0 \ud568\uc218 \ud615\ud0dc\ub85c \ub4e4\uc5b4\uac00\uac8c \ub428.","title":"Sliver List"},{"location":"Flutter/design/scrollable_widget/#sliver-grid","text":"Sliver List\uc5d0\uc11c gridDelegate\uac00 \ucd94\uac00\ub428. Widget build ( BuildContext context ) { return Scaffold ( body: CustomScrollView ( slivers: [ renderSliverAppBar (), renderSliverGrid (), ], ), ); } SliverGrid renderSliverGrid () { return SliverGrid ( delegate: SliverChildBuilderDelegate ( ( context , index ) { return RenderColorContainer ( index: index , color: rainbowColors [ index % rainbowColors . length ]); }, childCount: 100 , // itemCount\uc640 \uc720\uc0ac\ud568 ), gridDelegate: SliverGridDelegateWithFixedCrossAxisCount ( crossAxisCount: 2 ), ); // (1)! } Grid View\uc5d0\uc11c \ucd94\uac00\ud558\ub294 Delegate\uc5d0 Sliver\ub9cc \ubd99\uc784.","title":"Sliver Grid"},{"location":"Flutter/design/scrollable_widget/#sliver-appbar","text":"\ucee4\uc2a4\ud140 Appbar, Default \uc124\uc815\uc73c\ub85c \uc790\ub3d9\uc73c\ub85c \uc5c6\uc5b4\uc9c0\uac8c \ub054 \ub418\uc5b4 \uc788\uc74c. SliverAppBar ( floating: true , snap: false , // (1)! stretch: true , pinned: false , // (2)! expandedHeight: 400 , // \ucd5c\ub300\ub85c \ub298\uc5b4\ub098\ub294 \uc0ac\uc774\uc988 collapsedHeight: 100 , // \uc811\ud614\uc744 \ub54c \uc0ac\uc774\uc988 flexibleSpace: FlexibleSpaceBar ( background: Image . asset ( 'asset/img/image_1.jpeg' , fit: BoxFit . cover ), title: Text ( 'FlexibleSpaceBar' , style: TextStyle ( color: Colors . black ), ), ), // (3)! title: Text ( 'Custom Scroll View Screen' ), ); floating : true\ub85c \ud558\uba74\uc704\ub85c \uc7a0\uae50 \uc2a4\ud06c\ub864\ud558\uba74 AppBar \ub098\ud0c0\ub0a8. snap : flaoting True \uc0c1\ud0dc\ub85c \uc0ac\uc6a9, true\uc2dc \uc870\uae08\ub9cc \uc2a4\ud06c\ub864\ud574\ub3c4 AppBar \uc6c0\uc9c1\uc784. stretch : \ub9e8 \uc704\uc5d0\uc11c \ud55c\uacc4 \uc774\uc0c1\uc73c\ub85c \uc2a4\ud06c\ub864 \ud588\uc744 \ub54c Scaffold \ub300\uc2e0 Appbar\uac00 \ucc28\uc9c0\ud568. pinned : true\ub85c \ud558\uba74 \uc704\uc5d0 AppBar \uace0\uc815\ub428. \uace0\uc815 \uc804 \uace0\uc815 \ud6c4 \ub298\uc5b4\ub0ac\uc744 \ub54c \ubcf4\uc5ec\uc9c0\ub294 \uacf5\uac04","title":"Sliver Appbar"},{"location":"Flutter/design/scrollable_widget/#sliver-header","text":"Sliver Header\ub294 Custom Scroll View \uc0ac\uc774\uc0ac\uc774\uc5d0 Header\ub97c \ub123\uc744 \uc218 \uc788\ub294 \uae30\ub2a5\uc784. SliverPersistentHeader SliverPersistentHeader ( pinned: true , // \uc0c1\ub2e8\uc5d0 \uace0\uc815\ud568 // Delegate\uc5d0\uc11c \uc2e4\uc81c \ub3d9\uc791 \uad6c\ud604 //(1)! delegate: _SliverFixedHeaderDelegate ( child: Container ( color: Colors . black , child: Center ( child: Text ( '\uc2e0\uae30\ud558\uc9c0~' , style: TextStyle ( color: Colors . white , ), ), ), ), maxHeight: 200 , minHeigt: 10 ), ); \ub3d9\uc791 \ud654\uba74 Delegate Class (\uc2e4\uc81c\ub85c \ub3d9\uc791\ud558\ub294 \ubd80\ubd84) class _SliverFixedHeaderDelegate extends SliverPersistentHeaderDelegate { final Widget child ; final double maxHeight ; final double minHeigt ; _SliverFixedHeaderDelegate ({ required this . child , required this . maxHeight , required this . minHeigt , }); // \uc2e4\uc81c\ub85c build \ud558\ub294 \ubd80\ubd84 @override Widget build ( BuildContext context , double shrinkOffset , bool overlapsContent ) { return SizedBox . expand ( child: child , ); } // \ucd5c\ub300 \ub192\uc774 @override double get maxExtent => maxHeight ; // \ucd5c\uc18c \ub192\uc774 @override double get minExtent => minHeigt ; // oldDelegate - build\uac00 \uc2e4\ud589\uc774 \ub410\uc744 \ub54c \uc774\uc804 Delegate // return \uac12\uc774 true\uba74 \uc7ac\ube4c\ub4dc \ud568 @override bool shouldRebuild ( _SliverFixedHeaderDelegate oldDelegate ) { return oldDelegate . minHeigt != minHeigt || oldDelegate . maxHeight != maxHeight || oldDelegate . child != child ; } }","title":"Sliver Header"},{"location":"Flutter/design/scrollable_widget/#sliver-to-box-adaptor","text":"slivers = [] \uc548\uc5d0\ub294 Sliver \uc704\uc82f\ub4e4 \ubc16\uc5d0 \ub4e4\uc5b4\uc62c \uc218 \uc5c6\uc9c0\ub9cc Sliver To Box Adaptor\ub97c \uc0ac\uc6a9\ud558\uba74 Card\ub098 Container \ub4f1\uc758 \uc704\uc82f\uc774 \ub4e4\uc5b4\uc62c \uc218 \uc788\uc74c. Slvier To Box Adaptor SliverToBoxAdapter ( child: Container ( color: Colors . white , height: 200 , child: Column ( mainAxisAlignment: MainAxisAlignment . center , children: [ Text ( '\uc774\uac74 \ub418\uc9c0\ub871 !!!!!' , style: TextStyle ( fontSize: 18 , fontWeight: FontWeight . w700 ), textAlign: TextAlign . center , ), ], ), ), );","title":"Sliver To Box Adaptor"},{"location":"Flutter/design/scrollable_widget/#scrollbar","text":"Scroll \uac00\ub2a5\ud55c \uc704\uc82f\uc744 Widget(Scrollbar)\ub85c \uac10\uc2f8\uc90c. \uae30\ubcf8\uc801\uc73c\ub85c \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uc2a4\ud06c\ub864 \ubc14\uac00 \uc0dd\uae40. Scrollbar ( // \ub3d9\uc791 \ud654\uba74 (1) child: SingleChildScrollView ( child: Column ( children: renderNumbers . map ( ( e ) => RenderColorContainer ( index: e , color: rainbowColors [ e % rainbowColors . length ], ), ) . toList (), ), ), ), 1.","title":"Scrollbar"},{"location":"Flutter/design/scrollable_widget/#refresh-indicator","text":"Scrollable View\uc758 \ucd5c\uc0c1\ub2e8\uc5d0\uc11c \uc544\ub798\ub85c \ub2f9\uacbc\uc744 \ub54c loading \ucc3d\uc774 \uad6c\ud604\ub428. ScrollBar\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c Scrollable \uc704\uc82f\uc744 Refresh Indicator\ub85c \uac10\uc2f8\uace0 onRefresh\ub85c refresh \uc2e4\ud589\uc2dc \ub3d9\uc791\ud560 \ud568\uc218\ub97c \uad6c\ud604\ud568. RefreshIndicator ( // refresh \uc2e4\ud589\ud558\uba74 \uc2e4\ud589\ub420 \ud568\uc218 onRefresh: () async { await Future . delayed ( Duration ( seconds: 2 )); }, child: ListView ( children: renderNumbers . map ( ( e ) => RenderColorContainer ( index: e , color: rainbowColors [ e % rainbowColors . length ], ), ). toList (), ), ); // \uc2e4\ud589 \ud654\uba74 : (1)","title":"Refresh Indicator"},{"location":"Flutter/design/scrollable_widget/move_to_top/","text":"Scrollable Widget\uc5d0\uc11c \uc5b4\ub5a0\ud55c Button\uc744 \ub20c\ub838\uc744 \ub54c (\ucd5c\uc0c1\ub2e8\uc73c\ub85c \uc774\ub3d9\ud558\uae30 \ub4f1) \ud2b9\uc815 \uc704\uc82f\uc73c\ub85c \uc774\ub3d9\ud558\uae30 \uc704\ud574\uc11c \uad6c\ud604. Key \ud65c\uc6a9\ud558\ub294 \ubc29\uc2dd Key \uc120\uc5b8 GlobalKey customContainerKey = GlobalKey (); \uc704\uc82f\uc5d0 Key \ub123\uc5b4\uc8fc\uae30 \uc778\ub371\uc2a4\uac00 0\ubc88\uc778 \uc704\uc82f(\ucd5c\uc0c1\ub2e8\uc5d0 \uc704\uce58\ud558\ub294 \uc704\uc82f)\uc5d0 key\uac12 \ub123\uc5b4\uc90c. Container ( key: index == 0 ? customContainerKey : Key ( index . toString ()), height: height ?? 200 , color: color , child: Center ( child: Text ( index . toString (), style: const TextStyle ( color: Colors . white , fontWeight: FontWeight . w700 , fontSize: 30.0 ), ), ), ); \uc704\uc82f\uc73c\ub85c \uc774\ub3d9\ud558\uae30 \uad6c\ud604 Scrollable.ensureVisible\uc5d0 \uc6d0\ud558\ub294 \uc704\uc82f\uc758 key \uac12\uc744 \ub123\uc5b4\uc8fc\uba74 \ud574\ub2f9\ud558\ub294 key \uac12\uc744 \ub4e4\uace0 \uc788\ub294 \uc704\uc82f\uc73c\ub85c \uc774\ub3d9\ud568. Floating Action Button floatingActionButton: FloatingActionButton ( onPressed: () { // (1) \uc2e4\ud589 \uacb0\uacfc Scrollable . ensureVisible ( customContainerKey . currentContext ! ); }, \ucc38\uc870 Move To Top Floating Button/main.dart","title":"Scroll \uc774\ub3d9 Button \uad6c\ud604"},{"location":"Flutter/design/scrollable_widget/move_to_top/#key","text":"","title":"Key \ud65c\uc6a9\ud558\ub294 \ubc29\uc2dd"},{"location":"Flutter/design/scrollable_widget/move_to_top/#key_1","text":"GlobalKey customContainerKey = GlobalKey ();","title":"Key \uc120\uc5b8"},{"location":"Flutter/design/scrollable_widget/move_to_top/#key_2","text":"\uc778\ub371\uc2a4\uac00 0\ubc88\uc778 \uc704\uc82f(\ucd5c\uc0c1\ub2e8\uc5d0 \uc704\uce58\ud558\ub294 \uc704\uc82f)\uc5d0 key\uac12 \ub123\uc5b4\uc90c. Container ( key: index == 0 ? customContainerKey : Key ( index . toString ()), height: height ?? 200 , color: color , child: Center ( child: Text ( index . toString (), style: const TextStyle ( color: Colors . white , fontWeight: FontWeight . w700 , fontSize: 30.0 ), ), ), );","title":"\uc704\uc82f\uc5d0 Key \ub123\uc5b4\uc8fc\uae30"},{"location":"Flutter/design/scrollable_widget/move_to_top/#_1","text":"Scrollable.ensureVisible\uc5d0 \uc6d0\ud558\ub294 \uc704\uc82f\uc758 key \uac12\uc744 \ub123\uc5b4\uc8fc\uba74 \ud574\ub2f9\ud558\ub294 key \uac12\uc744 \ub4e4\uace0 \uc788\ub294 \uc704\uc82f\uc73c\ub85c \uc774\ub3d9\ud568. Floating Action Button floatingActionButton: FloatingActionButton ( onPressed: () { // (1) \uc2e4\ud589 \uacb0\uacfc Scrollable . ensureVisible ( customContainerKey . currentContext ! ); },","title":"\uc704\uc82f\uc73c\ub85c \uc774\ub3d9\ud558\uae30 \uad6c\ud604"},{"location":"Flutter/design/scrollable_widget/move_to_top/#_2","text":"Move To Top Floating Button/main.dart","title":"\ucc38\uc870"},{"location":"Flutter/design/scrollable_widget/scrollListner/","text":"\uad6c\ud604\ud558\ub294 \uc774\uc720(\ud65c\uc6a9) \uc2a4\ud06c\ub864\uc774 \uc77c\uc815\uc774\uc0c1 \ub418\uba74 \ub3d9\uc791\ud558\ub294 \ud589\uc704\ub97c \uad6c\ud604\ud558\uae30 \uc704\ud574\uc11c // (1) \uad6c\ud604 ScollController() \uc120\uc5b8 CrollController scrollController = ScrollController (); scrollListner() {} scrollListner\ub85c \ub3d9\uc791\ud560 \ud568\uc218 \uc120\uc5b8 scrollListener () { // \ubcf4\uc774\ub294 \uac12 \ub9d0\uace0 \uc2e4\uc81c \ucd5c\uc0c1\ub2e8\uc5d0\uc11c \ubd80\ud130 \ud604\uc7ac \uc2a4\ud06c\ub864\ud558\ub294 \uc704\uce58\uae4c\uc9c0\uc758 \uac04\uaca9 // 500\uc744 \ub118\uc5b4\uac00\uba74 \ub2eb\ud600\uc788\ub294 \uc0c1\ud0dc bool isExpanded = scrollController . offset < 500 - kToolbarHeight ; if ( isExpanded != this . isExpanded ) { setState (() { this . isExpanded = isExpanded ; }); } } initState\uc5d0\uc11c Contoller \ucd94\uac00 initState\uc5d0\uc11c scroller\uc5d0 Listner \ud560\ub2f9\ud574\uc90c @override initState () { super . initState (); scrollController . addListener ( scrollListener ); } dispose() initState\uc5d0\uc11c \ucd94\uac00\ud55c Listner\ub4e4\uc740 \ubaa8\ub450 dispose\uc5d0\uc11c \ubaa8\uba54\ub9ac\uc5d0\uc11c \ud574\uc81c\uc2dc\ucf1c\uc918\uc57c \ud568 @override dispose () { scrollController . removeListener ( scrollListener ); scrollController . dispose (); super . dispose (); } ScrollView\uc5d0 controller \ucd94\uac00 scrollView\uc5d0\uc11c \ub3d9\uc791\ud560 controller \ucd94\uac00 CustomScrollView ( ..., controller: scrollController , ..., ) : \ucc38\uc870 \ubbf8\uc138\uba3c\uc9c0 \ud504\ub85c\uc81d\ud2b8","title":"\ud604\uc7ac scroll \uc704\uce58 \uad6c\ud558\uae30"},{"location":"Flutter/design/scrollable_widget/scrollListner/#_1","text":"\uc2a4\ud06c\ub864\uc774 \uc77c\uc815\uc774\uc0c1 \ub418\uba74 \ub3d9\uc791\ud558\ub294 \ud589\uc704\ub97c \uad6c\ud604\ud558\uae30 \uc704\ud574\uc11c // (1)","title":"\uad6c\ud604\ud558\ub294 \uc774\uc720(\ud65c\uc6a9)"},{"location":"Flutter/design/scrollable_widget/scrollListner/#_2","text":"","title":"\uad6c\ud604"},{"location":"Flutter/design/scrollable_widget/scrollListner/#scollcontroller","text":"CrollController scrollController = ScrollController ();","title":"ScollController() \uc120\uc5b8"},{"location":"Flutter/design/scrollable_widget/scrollListner/#scrolllistner","text":"scrollListner\ub85c \ub3d9\uc791\ud560 \ud568\uc218 \uc120\uc5b8 scrollListener () { // \ubcf4\uc774\ub294 \uac12 \ub9d0\uace0 \uc2e4\uc81c \ucd5c\uc0c1\ub2e8\uc5d0\uc11c \ubd80\ud130 \ud604\uc7ac \uc2a4\ud06c\ub864\ud558\ub294 \uc704\uce58\uae4c\uc9c0\uc758 \uac04\uaca9 // 500\uc744 \ub118\uc5b4\uac00\uba74 \ub2eb\ud600\uc788\ub294 \uc0c1\ud0dc bool isExpanded = scrollController . offset < 500 - kToolbarHeight ; if ( isExpanded != this . isExpanded ) { setState (() { this . isExpanded = isExpanded ; }); } }","title":"scrollListner() {}"},{"location":"Flutter/design/scrollable_widget/scrollListner/#initstate-contoller","text":"initState\uc5d0\uc11c scroller\uc5d0 Listner \ud560\ub2f9\ud574\uc90c @override initState () { super . initState (); scrollController . addListener ( scrollListener ); }","title":"initState\uc5d0\uc11c Contoller \ucd94\uac00"},{"location":"Flutter/design/scrollable_widget/scrollListner/#dispose","text":"initState\uc5d0\uc11c \ucd94\uac00\ud55c Listner\ub4e4\uc740 \ubaa8\ub450 dispose\uc5d0\uc11c \ubaa8\uba54\ub9ac\uc5d0\uc11c \ud574\uc81c\uc2dc\ucf1c\uc918\uc57c \ud568 @override dispose () { scrollController . removeListener ( scrollListener ); scrollController . dispose (); super . dispose (); }","title":"dispose()"},{"location":"Flutter/design/scrollable_widget/scrollListner/#scrollview-controller","text":"scrollView\uc5d0\uc11c \ub3d9\uc791\ud560 controller \ucd94\uac00 CustomScrollView ( ..., controller: scrollController , ..., ) :","title":"ScrollView\uc5d0 controller \ucd94\uac00"},{"location":"Flutter/design/scrollable_widget/scrollListner/#_3","text":"\ubbf8\uc138\uba3c\uc9c0 \ud504\ub85c\uc81d\ud2b8","title":"\ucc38\uc870"}]}