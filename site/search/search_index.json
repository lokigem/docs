{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"ProgrammingLanguage/flutter/","text":"","title":"Flutter"},{"location":"ProgrammingLanguage/flutter/dartGrammar/DartGrammar/","text":"Basic Grammar \uae30\ubcf8\uc790\ub8cc\ud615 \uae30\ubcf8 \uc790\ub8cc\ud615 Final\uacfc Const Final\uacfc Const Operation:: is\uc640 is! Operation:: is\uc640 is! List\uc640 Map List\uc640 Map Set Set \uc870\uac74\ubb38 \uc870\uac74\ubb38 \ubc18\ubcf5\ubb38 \ubc18\ubcf5\ubb38 enum enum \ud568\uc218\uc640 typedef \ud568\uc218\uc640 typedef","title":"Basic Grammar"},{"location":"ProgrammingLanguage/flutter/dartGrammar/DartGrammar/#basic-grammar","text":"","title":"Basic Grammar"},{"location":"ProgrammingLanguage/flutter/dartGrammar/DartGrammar/#_1","text":"\uae30\ubcf8 \uc790\ub8cc\ud615","title":"\uae30\ubcf8\uc790\ub8cc\ud615"},{"location":"ProgrammingLanguage/flutter/dartGrammar/DartGrammar/#final-const","text":"Final\uacfc Const","title":"Final\uacfc Const"},{"location":"ProgrammingLanguage/flutter/dartGrammar/DartGrammar/#operation-is-is","text":"Operation:: is\uc640 is!","title":"Operation:: is\uc640 is!"},{"location":"ProgrammingLanguage/flutter/dartGrammar/DartGrammar/#list-map","text":"List\uc640 Map","title":"List\uc640 Map"},{"location":"ProgrammingLanguage/flutter/dartGrammar/DartGrammar/#set","text":"Set","title":"Set"},{"location":"ProgrammingLanguage/flutter/dartGrammar/DartGrammar/#_2","text":"\uc870\uac74\ubb38","title":"\uc870\uac74\ubb38"},{"location":"ProgrammingLanguage/flutter/dartGrammar/DartGrammar/#_3","text":"\ubc18\ubcf5\ubb38","title":"\ubc18\ubcf5\ubb38"},{"location":"ProgrammingLanguage/flutter/dartGrammar/DartGrammar/#enum","text":"enum","title":"enum"},{"location":"ProgrammingLanguage/flutter/dartGrammar/DartGrammar/#typedef","text":"\ud568\uc218\uc640 typedef","title":"\ud568\uc218\uc640 typedef"},{"location":"ProgrammingLanguage/flutter/dartGrammar/asyncProgramming/","text":"Async Programming \uae30\uc874\uc758 cpu\uc758 \ub3d9\uc791\uc740 \uc2e4\ud589\ud55c \ucf54\ub4dc\uac00 \uc788\uc73c\uba74 \ud574\ub2f9 \ucf54\ub4dc\uac00 \uc2e4\ud589\uc774 \ub420 \ub54c\uae4c\uc9c0 \ub2e4\uc74c \ub3d9\uc791\uc744 \uc2e4\ud589\ud560 \uc218 \uc5c6\uc5c8\uc74c. \uc774\ub294 http \uc694\uccad \uac19\uc740 \uc791\uc5c5\uc744 \ud560 \ub54c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294\ub370, \uc11c\ubc84\uc5d0\uc11c \uc694\uccad\uac12\uc744 \ubc1b\uc544\uc624\uae30 \uc804\uae4c\uc9c0 cpu\uac00 \uc218\ud589\ud560 \uc218 \uc788\ub294 \ub3d9\uc791\uc774 \uc544\ubb34\uac83\ub3c4 \uc5c6\uc5b4\uc9c4\ub2e4\ub294 \ubb38\uc81c\uc810\uc774 \ubc1c\uc0dd\ud568. \ub2e4\uc74c\uc740 \uae30\uc874 cpu\uc758 \ub3d9\uc791 \ubc29\uc2dd \ud83d\udc47 \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574\uc11c \ub4f1\uc7a5\ud55c \ubc29\uc2dd\uc774 \ubc14\ub85c Async Programming\uc778\ub370, \ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d \uc774\ub77c\uace0\ub3c4 \ubd88\ub9ac\uba70 \ud604\uc7ac \uc2e4\ud589\uc911\uc778 \ub3d9\uc791\uc774 \uc644\ub8cc\ub418\uc9c0 \uc54a\ub354\ub77c\ub3c4 \ub2e4\uc74c \ub3d9\uc791\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc744 \ub73b\ud568. Future and await Future \ub370\uc774\ud130 \ud0c0\uc785\uc73c\ub85c \uc815\uc758\ud560 \uc218 \uc788\uc73c\uba70, Future \uad00\ub828 method \ub4f1\uc744 \uc368\uc904 \uc218 \uc788\uc74c. Future < returnType > functionName ( Parameter1 , Parameter2 ...) async { Future.delayed \uccab \ud30c\ub77c\ubbf8\ud130\uc5d0\ub294 \uc9c0\uc5f0\ud560 \uae30\uac04(\uc5bc\ub9c8\ub098 \uc9c0\uc5f0\ud560\uac74\uc9c0) Duration \uac12\uc744 \ub123\uc5b4\uc8fc\uace0 \ub450 \ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc5d0\ub294 \uc9c0\uc5f0\uc2dc\uac04\uc774 \uc9c0\ub09c \ud6c4 \uc2e4\ud589\ud560 \ud568\uc218\ub97c \ub123\uc5b4\uc90c. Future . delayed ( Duration ( seconds: ), () {} await await\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc120 \ud568\uc218\uc5d0\ub2e4\uac00 async\ub97c \ucd94\uac00\ud574\uc57c\uc9c0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c. void main () async { await \uc2e4\ud589\ud560\ud568\uc218 (); } Future and await \ucc38\uc870 Future and await \ucc38\uc870 1 Future and await \ucc38\uc870 2 Stream \ub9ac\uc2a4\ub108\ub97c \uc0dd\uc131\ud574\uc11c \ub9ac\uc2a4\ub108\uac00 \ub9ac\uc2a4\ub2dd\uc744 \ud558\uace0 \uc788\ub294 \ub3d9\uc548 controller\uac00 \uac12\uc744 \ub123\uc5b4\uc8fc\uba74 \ud568\uc218\uac00 \uc2e4\ud589\ub428. \uc774 \ub54c return \ub418\ub294 \uac12\ub4e4\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \ubc18\ud658\ud574\uc90c. \uc608\uc2dc import 'dart:async' ; void main () { final controller = StreamController (); // asBroadcastStream\uc744 \uc774\uc6a9\ud574\uc918\uc57c \uc5ec\ub7ec\ubc88 listening\uc744 \ud560 \uc218 \uc788\uc74c. final Stream = controller . stream . asBroadcastStream (); // \uc9dd\uc218\ub9cc \ucd9c\ub825 // \ub9ac\uc2a4\ub108 \uc0dd\uc131, \uc774 \ub9ac\uc2a4\ub108\uac00 \ub9ac\uc2a4\ub2dd\uc744 \ud558\uace0 \uc788\uc744 \ub54c \uac12\uc774 \ub4e4\uc5b4\uc624\uba74 \ud568\uc218\uac00 \uc2e4\ud589\ub428. final streamListener1 = Stream . where (( val ) => val % 2 == 0 ). listen (( val ) { print ( 'Listener1 : $ val ' ); }); // \ud640\uc218\ub9cc \ucd9c\ub825 final streamListener2 = Stream . where (( val ) => val % 2 == 1 ). listen (( val ) { print ( 'Listener2 : $ val ' ); }); // controller\ub97c \ud1b5\ud574\uc11c \ub9ac\uc2a4\ub108\uc5d0 \uac12\uc744 \ub123\uc5b4\uc90c controller . sink . add ( 1 ); controller . sink . add ( 2 ); controller . sink . add ( 3 ); controller . sink . add ( 4 ); } Reference \ucc38\uc870 1 \ucc38\uc870 2","title":"Async Programming"},{"location":"ProgrammingLanguage/flutter/dartGrammar/asyncProgramming/#async-programming","text":"\uae30\uc874\uc758 cpu\uc758 \ub3d9\uc791\uc740 \uc2e4\ud589\ud55c \ucf54\ub4dc\uac00 \uc788\uc73c\uba74 \ud574\ub2f9 \ucf54\ub4dc\uac00 \uc2e4\ud589\uc774 \ub420 \ub54c\uae4c\uc9c0 \ub2e4\uc74c \ub3d9\uc791\uc744 \uc2e4\ud589\ud560 \uc218 \uc5c6\uc5c8\uc74c. \uc774\ub294 http \uc694\uccad \uac19\uc740 \uc791\uc5c5\uc744 \ud560 \ub54c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294\ub370, \uc11c\ubc84\uc5d0\uc11c \uc694\uccad\uac12\uc744 \ubc1b\uc544\uc624\uae30 \uc804\uae4c\uc9c0 cpu\uac00 \uc218\ud589\ud560 \uc218 \uc788\ub294 \ub3d9\uc791\uc774 \uc544\ubb34\uac83\ub3c4 \uc5c6\uc5b4\uc9c4\ub2e4\ub294 \ubb38\uc81c\uc810\uc774 \ubc1c\uc0dd\ud568. \ub2e4\uc74c\uc740 \uae30\uc874 cpu\uc758 \ub3d9\uc791 \ubc29\uc2dd \ud83d\udc47 \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574\uc11c \ub4f1\uc7a5\ud55c \ubc29\uc2dd\uc774 \ubc14\ub85c Async Programming\uc778\ub370, \ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d \uc774\ub77c\uace0\ub3c4 \ubd88\ub9ac\uba70 \ud604\uc7ac \uc2e4\ud589\uc911\uc778 \ub3d9\uc791\uc774 \uc644\ub8cc\ub418\uc9c0 \uc54a\ub354\ub77c\ub3c4 \ub2e4\uc74c \ub3d9\uc791\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc744 \ub73b\ud568.","title":"Async Programming"},{"location":"ProgrammingLanguage/flutter/dartGrammar/asyncProgramming/#future-and-await","text":"Future \ub370\uc774\ud130 \ud0c0\uc785\uc73c\ub85c \uc815\uc758\ud560 \uc218 \uc788\uc73c\uba70, Future \uad00\ub828 method \ub4f1\uc744 \uc368\uc904 \uc218 \uc788\uc74c. Future < returnType > functionName ( Parameter1 , Parameter2 ...) async {","title":"Future and await"},{"location":"ProgrammingLanguage/flutter/dartGrammar/asyncProgramming/#futuredelayed","text":"\uccab \ud30c\ub77c\ubbf8\ud130\uc5d0\ub294 \uc9c0\uc5f0\ud560 \uae30\uac04(\uc5bc\ub9c8\ub098 \uc9c0\uc5f0\ud560\uac74\uc9c0) Duration \uac12\uc744 \ub123\uc5b4\uc8fc\uace0 \ub450 \ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc5d0\ub294 \uc9c0\uc5f0\uc2dc\uac04\uc774 \uc9c0\ub09c \ud6c4 \uc2e4\ud589\ud560 \ud568\uc218\ub97c \ub123\uc5b4\uc90c. Future . delayed ( Duration ( seconds: ), () {}","title":"Future.delayed"},{"location":"ProgrammingLanguage/flutter/dartGrammar/asyncProgramming/#await","text":"await\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc120 \ud568\uc218\uc5d0\ub2e4\uac00 async\ub97c \ucd94\uac00\ud574\uc57c\uc9c0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c. void main () async { await \uc2e4\ud589\ud560\ud568\uc218 (); }","title":"await"},{"location":"ProgrammingLanguage/flutter/dartGrammar/asyncProgramming/#future-and-await_1","text":"Future and await \ucc38\uc870 1 Future and await \ucc38\uc870 2","title":"Future and await \ucc38\uc870"},{"location":"ProgrammingLanguage/flutter/dartGrammar/asyncProgramming/#stream","text":"\ub9ac\uc2a4\ub108\ub97c \uc0dd\uc131\ud574\uc11c \ub9ac\uc2a4\ub108\uac00 \ub9ac\uc2a4\ub2dd\uc744 \ud558\uace0 \uc788\ub294 \ub3d9\uc548 controller\uac00 \uac12\uc744 \ub123\uc5b4\uc8fc\uba74 \ud568\uc218\uac00 \uc2e4\ud589\ub428. \uc774 \ub54c return \ub418\ub294 \uac12\ub4e4\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \ubc18\ud658\ud574\uc90c.","title":"Stream"},{"location":"ProgrammingLanguage/flutter/dartGrammar/asyncProgramming/#_1","text":"import 'dart:async' ; void main () { final controller = StreamController (); // asBroadcastStream\uc744 \uc774\uc6a9\ud574\uc918\uc57c \uc5ec\ub7ec\ubc88 listening\uc744 \ud560 \uc218 \uc788\uc74c. final Stream = controller . stream . asBroadcastStream (); // \uc9dd\uc218\ub9cc \ucd9c\ub825 // \ub9ac\uc2a4\ub108 \uc0dd\uc131, \uc774 \ub9ac\uc2a4\ub108\uac00 \ub9ac\uc2a4\ub2dd\uc744 \ud558\uace0 \uc788\uc744 \ub54c \uac12\uc774 \ub4e4\uc5b4\uc624\uba74 \ud568\uc218\uac00 \uc2e4\ud589\ub428. final streamListener1 = Stream . where (( val ) => val % 2 == 0 ). listen (( val ) { print ( 'Listener1 : $ val ' ); }); // \ud640\uc218\ub9cc \ucd9c\ub825 final streamListener2 = Stream . where (( val ) => val % 2 == 1 ). listen (( val ) { print ( 'Listener2 : $ val ' ); }); // controller\ub97c \ud1b5\ud574\uc11c \ub9ac\uc2a4\ub108\uc5d0 \uac12\uc744 \ub123\uc5b4\uc90c controller . sink . add ( 1 ); controller . sink . add ( 2 ); controller . sink . add ( 3 ); controller . sink . add ( 4 ); }","title":"\uc608\uc2dc"},{"location":"ProgrammingLanguage/flutter/dartGrammar/asyncProgramming/#reference","text":"\ucc38\uc870 1 \ucc38\uc870 2","title":"Reference"},{"location":"ProgrammingLanguage/flutter/dartGrammar/functionalProgramming/","text":"Functional Programming map . map (( x ) => return ); . map (( x ){ code }; map \ucc38\uc870 reduce reduce \uc0ac\uc6a9\uc2dc parameter\uc758 data tyep\uacfc return result\uc758 data type\uc774 \uac19\uc544\uc57c \ud568. \ubc30\uc5f4\uc758 \ub05d\uae4c\uc9c0 loop \ubc1c\uc0dd, \uccab \ubc88\uc9f8\ub294 prev + next \ud574\uc8fc\uace0 \uadf8 \uc774\ud6c4\ub85c\ub294 total + next \ud574\uc90c. . reduce (( prev , next ) => code ); fold reduce\uc640\ub294 \ub2e4\ub974\uac8c return tyep\uacfc parameter type\uc774 \uac19\uc9c0 \uc54a\uc544\ub3c4 \ub428. \ub300\uc2e0, \uc120\uc5b8\ud574\uc904 \ub54c return type\uc744 \uc124\uc815\ud574\uc918\uc57c \ud558\uba70 (prev, next)\uc804\uc5d0 \uccab \ubc88\uc9f8 parameter\ub97c \ubc1b\uace0 \uc774\ub97c \uccab \ubc88\uc9f8 \uacc4\uc0b0\uac12\uc73c\ub85c \uc0ac\uc6a9\ud568. . fold < returnType > ( 0 , ( prev , next ) => prev + next ); reduce and fold \ucc38\uc870 where where((x) => \uc870\uac74); \uc870\uac74\uc774 true\uc778 \uac12\ub9cc return \ud574\uc90c. where (( x ) => \uc870\uac74 ); where \ucc38\uc870 cascading operator List \uc774\uc5b4\uc8fc\ub294 \uae30\ub2a5(?) cascading operator functional programming \uc0ac\uc6a9 \uc608\uc2dc \uc608\uc2dc1 void main () { String number = '12345' ; final numberJPEG = number . split ( '' ). map (( x ) => ' $ x .jpeg' ). toList (); print ( numberJPEG ); example2 (); example3 (); } // Map > Map use map void example2 () { Map < String , String > harryPoter = { \"Harry Potter\" : \"\ud574\ub9ac \ud3ec\ud130\" , \"Ron Weasley\" : \"\ub860 \uc704\uc990\ub9ac\" , \"Hermione Granger\" : \"\ud5e4\ub974\ubbf8\uc628\ub290 \uadf8\ub808\uc778\uc800\" }; // map > map // Map Entry\ub294 class \uc784. MapEntry(key, value)\uc21c\uc73c\ub85c \ub418\uc5b4 \uc788\uc73c\uba70 key\uc640 value\uc5d0 \uac01\uac01 \uc811\uadfc\ud574\uc11c return \ud574\uc90c. final result = harryPoter . map (( key , value ) => MapEntry ( 'Harry Poter Character $ key ' , '\ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 $ value ' , ), ); print ( result ); final keys = harryPoter . keys . map (( x ) => 'HPC $ x ' ). toList ; print ( keys ); } void example3 () { Set blackPinkSet = { '\ub85c\uc81c' , '\uc9c0\uc218' , '\uc81c\ub2c8' , '\ub9ac\uc0ac' , }; final newSet = blackPinkSet . map (( x ) => '\ube14\ub799\ud551\ud06c $ x ' ); print ( newSet ); } > \ucd9c\ub825\uac12 [1.jpeg, 2.jpeg, 3.jpeg, 4.jpeg, 5.jpeg] {Harry Poter Character Harry Potter: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ud574\ub9ac \ud3ec\ud130, Harry Poter Character Ron Weasley: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ub860 \uc704\uc990\ub9ac, Harry Poter Character Hermione Granger: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ud5e4\ub974\ubbf8\uc628\ub290 \uadf8\ub808\uc778\uc800} [HPC Harry Potter, HPC Ron Weasley, HPC Hermione Granger] (\ube14\ub799\ud551\ud06c \ub85c\uc81c, \ube14\ub799\ud551\ud06c \uc9c0\uc218, \ube14\ub799\ud551\ud06c \uc81c\ub2c8, \ube14\ub799\ud551\ud06c \ub9ac\uc0ac) \uc608\uc2dc2 void main () { List < Map < String , String >> people = [ { \"name\" : \"\ub85c\uc81c\" , \"group\" : \"\ube14\ub799\ud551\ud06c\" , }, { \"name\" : \"\uc9c0\uc218\" , \"group\" : \"\ube14\ub799\ud551\ud06c\" , }, { \"name\" : \"RM\" , \"group\" : \"BTS\" , }, { \"name\" : \"\ubdd4\" , \"group\" : \"BTS\" , }, ]; print ( people ); final parsedPeople = people . map (( x ) => Person ( name: x [ 'name' ] ! , // \uac12\uc774 \ubc18\ub4dc\uc2dc \uc874\uc7ac\ud55c\ub2e4\ub294 \ub73b. ! \uc548\ubd99\uc5ec\uc8fc\uba74 \ucc38\uc870 error \ubc1c\uc0dd\ud568. group: x [ 'group' ] ! , )). toList (); print ( parsedPeople ); for ( Person person in parsedPeople ) { print ( person . name ); print ( person . group ); }; final bts = parsedPeople . where ( ( x ) => x . group == \"BTS\" , ); } class Person { final String name ; final String group ; Person ({ required this . name , required this . group , }); // class\uc758 \ucd08\uae30 \uac12\ub4e4\uc740 Instance of \ub77c\ub294 \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\uc774 \ub428. // print\ub97c \ud588\uc744 \ub54c \uc5b4\ub5a4 \ud615\uc2dd\uc744 \ucde8\ud558\ub294\uc9c0 object class\uc5d0 String\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\ub294\ub370 \uc774\ub97c \ubc14\uafd4\uc90c\uc73c\ub85c\uc11c \ucd9c\ub825\ud615\ud0dc\ub97c \ubc14\uafd4\uc90c. @override String toString (){ return 'Person(name: $ name , group: $ group ' ; } }","title":"Functional Programming"},{"location":"ProgrammingLanguage/flutter/dartGrammar/functionalProgramming/#functional-programming","text":"","title":"Functional Programming"},{"location":"ProgrammingLanguage/flutter/dartGrammar/functionalProgramming/#map","text":". map (( x ) => return ); . map (( x ){ code }; map \ucc38\uc870","title":"map"},{"location":"ProgrammingLanguage/flutter/dartGrammar/functionalProgramming/#reduce","text":"reduce \uc0ac\uc6a9\uc2dc parameter\uc758 data tyep\uacfc return result\uc758 data type\uc774 \uac19\uc544\uc57c \ud568. \ubc30\uc5f4\uc758 \ub05d\uae4c\uc9c0 loop \ubc1c\uc0dd, \uccab \ubc88\uc9f8\ub294 prev + next \ud574\uc8fc\uace0 \uadf8 \uc774\ud6c4\ub85c\ub294 total + next \ud574\uc90c. . reduce (( prev , next ) => code );","title":"reduce"},{"location":"ProgrammingLanguage/flutter/dartGrammar/functionalProgramming/#fold","text":"reduce\uc640\ub294 \ub2e4\ub974\uac8c return tyep\uacfc parameter type\uc774 \uac19\uc9c0 \uc54a\uc544\ub3c4 \ub428. \ub300\uc2e0, \uc120\uc5b8\ud574\uc904 \ub54c return type\uc744 \uc124\uc815\ud574\uc918\uc57c \ud558\uba70 (prev, next)\uc804\uc5d0 \uccab \ubc88\uc9f8 parameter\ub97c \ubc1b\uace0 \uc774\ub97c \uccab \ubc88\uc9f8 \uacc4\uc0b0\uac12\uc73c\ub85c \uc0ac\uc6a9\ud568. . fold < returnType > ( 0 , ( prev , next ) => prev + next ); reduce and fold \ucc38\uc870","title":"fold"},{"location":"ProgrammingLanguage/flutter/dartGrammar/functionalProgramming/#where","text":"where((x) => \uc870\uac74); \uc870\uac74\uc774 true\uc778 \uac12\ub9cc return \ud574\uc90c. where (( x ) => \uc870\uac74 ); where \ucc38\uc870","title":"where"},{"location":"ProgrammingLanguage/flutter/dartGrammar/functionalProgramming/#cascading-operator","text":"List \uc774\uc5b4\uc8fc\ub294 \uae30\ub2a5(?) cascading operator","title":"cascading operator"},{"location":"ProgrammingLanguage/flutter/dartGrammar/functionalProgramming/#functional-programming_1","text":"\uc608\uc2dc1 void main () { String number = '12345' ; final numberJPEG = number . split ( '' ). map (( x ) => ' $ x .jpeg' ). toList (); print ( numberJPEG ); example2 (); example3 (); } // Map > Map use map void example2 () { Map < String , String > harryPoter = { \"Harry Potter\" : \"\ud574\ub9ac \ud3ec\ud130\" , \"Ron Weasley\" : \"\ub860 \uc704\uc990\ub9ac\" , \"Hermione Granger\" : \"\ud5e4\ub974\ubbf8\uc628\ub290 \uadf8\ub808\uc778\uc800\" }; // map > map // Map Entry\ub294 class \uc784. MapEntry(key, value)\uc21c\uc73c\ub85c \ub418\uc5b4 \uc788\uc73c\uba70 key\uc640 value\uc5d0 \uac01\uac01 \uc811\uadfc\ud574\uc11c return \ud574\uc90c. final result = harryPoter . map (( key , value ) => MapEntry ( 'Harry Poter Character $ key ' , '\ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 $ value ' , ), ); print ( result ); final keys = harryPoter . keys . map (( x ) => 'HPC $ x ' ). toList ; print ( keys ); } void example3 () { Set blackPinkSet = { '\ub85c\uc81c' , '\uc9c0\uc218' , '\uc81c\ub2c8' , '\ub9ac\uc0ac' , }; final newSet = blackPinkSet . map (( x ) => '\ube14\ub799\ud551\ud06c $ x ' ); print ( newSet ); } > \ucd9c\ub825\uac12 [1.jpeg, 2.jpeg, 3.jpeg, 4.jpeg, 5.jpeg] {Harry Poter Character Harry Potter: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ud574\ub9ac \ud3ec\ud130, Harry Poter Character Ron Weasley: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ub860 \uc704\uc990\ub9ac, Harry Poter Character Hermione Granger: \ud574\ub9ac\ud3ec\ud130 \uce90\ub9ad\ud130 \ud5e4\ub974\ubbf8\uc628\ub290 \uadf8\ub808\uc778\uc800} [HPC Harry Potter, HPC Ron Weasley, HPC Hermione Granger] (\ube14\ub799\ud551\ud06c \ub85c\uc81c, \ube14\ub799\ud551\ud06c \uc9c0\uc218, \ube14\ub799\ud551\ud06c \uc81c\ub2c8, \ube14\ub799\ud551\ud06c \ub9ac\uc0ac) \uc608\uc2dc2 void main () { List < Map < String , String >> people = [ { \"name\" : \"\ub85c\uc81c\" , \"group\" : \"\ube14\ub799\ud551\ud06c\" , }, { \"name\" : \"\uc9c0\uc218\" , \"group\" : \"\ube14\ub799\ud551\ud06c\" , }, { \"name\" : \"RM\" , \"group\" : \"BTS\" , }, { \"name\" : \"\ubdd4\" , \"group\" : \"BTS\" , }, ]; print ( people ); final parsedPeople = people . map (( x ) => Person ( name: x [ 'name' ] ! , // \uac12\uc774 \ubc18\ub4dc\uc2dc \uc874\uc7ac\ud55c\ub2e4\ub294 \ub73b. ! \uc548\ubd99\uc5ec\uc8fc\uba74 \ucc38\uc870 error \ubc1c\uc0dd\ud568. group: x [ 'group' ] ! , )). toList (); print ( parsedPeople ); for ( Person person in parsedPeople ) { print ( person . name ); print ( person . group ); }; final bts = parsedPeople . where ( ( x ) => x . group == \"BTS\" , ); } class Person { final String name ; final String group ; Person ({ required this . name , required this . group , }); // class\uc758 \ucd08\uae30 \uac12\ub4e4\uc740 Instance of \ub77c\ub294 \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\uc774 \ub428. // print\ub97c \ud588\uc744 \ub54c \uc5b4\ub5a4 \ud615\uc2dd\uc744 \ucde8\ud558\ub294\uc9c0 object class\uc5d0 String\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\ub294\ub370 \uc774\ub97c \ubc14\uafd4\uc90c\uc73c\ub85c\uc11c \ucd9c\ub825\ud615\ud0dc\ub97c \ubc14\uafd4\uc90c. @override String toString (){ return 'Person(name: $ name , group: $ group ' ; } }","title":"functional programming \uc0ac\uc6a9 \uc608\uc2dc"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/","text":"\uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d \uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d(OOP, Object Oriented Programming)\uc774\ub780? Class\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud574\uc11c \ud560\ub2f9\uc744 \ud574\uc8fc\uba74 \ud574\ub2f9\ud558\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \ubb34\ud55c\ud788 \uc0dd\uc131\uac00\ub2a5. \uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d(OOP)\uc778 \uc774\uc720 class\ub97c \uae30\ubcf8\uc801\uc73c\ub85c \uc0dd\uc131\ud574\uc8fc\uba74 hashCode, runtimeType, toString, noSuchMethod \ub4f1\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ud560\ub2f9\uc774 \ub428. \uc774\ub294 class\uac00 \uc0dd\uc131\ub420 \ub54c \ubaa8\ub4e0 class\ub294 \ucd5c\uc0c1\uc704 \ubd80\ubaa8 class\ub85c Object\ub97c \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38 . \uadf8\ub9ac\uace0 \uc774 Object\uc758 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\uc774 \ub418\ub294 \uae30\ub2a5\uc774 \uc800 4\uac00\uc9c0 \uae30\ub2a5\uc784. void main () { Test test = Test (); // \uae30\ubcf8\uc801\uc73c\ub85c \ud560\ub2f9\ub418\uc5b4 \uc788\uc74c test . hashCode ; test . runtimeType ; test . toString (); test . noSuchMethod ( invocation ); } class test entends Object {} class \uae30\ubcf8\ud615 void main () { Idol blackPink = Idol ( \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); blackPink . sayHello (); blackPink . introduce (); Idol bigBang = Idol ( // \uc77c\ubc18\uc801\uc778 \uc0dd\uc131\uc790 \"\ube45\ubc45\" , [ \"\uad8c\uc9c0\uc6a9\" , \"\ucd5c\uc2b9\ud604\" , \"\ud328\ubc30\" , \"\ub3d9\uc601\ubc30\" , \"\uac15\ub300\uc131\" ], ); Idol namedBigBang = Idol . fromList ( // nammed \uc0dd\uc131\uc790 \ud560\ub2f9 [ [ \"\uad8c\uc9c0\uc6a9\" , \"\ucd5c\uc2b9\ud604\" , \"\ud328\ubc30\" , \"\ub3d9\uc601\ubc30\" , \"\uac15\ub300\uc131\" ], \"\ube45\ubc45\" , ] ); bigBang . sayHello (); bigBang . introduce (); namedBigBang . sayHello (); namedBigBang . introduce (); } class Idol { String name = \"\ube14\ub799\ud551\ud06c\" ; List < String > members = [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ]; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } /* constructor (\uc0dd\uc131\uc790) this\ub294 \ud604\uc7ac class\uc758 \ud504\ub85c\ud37c\ud2f0\ub97c \ub098\ud0c0\ub0c4 */ // Idol(String name, List<String> members): this.name = name, this.members = members; Idol ( this . name , this . members ); // named constructor Idol . fromList ( List values ) : this . members = values [ 0 ], this . name = values [ 1 ]; } immutable \ud504\ub85c\uadf8\ub798\ubc0d: final \ud55c \ubc88 \uac12\uc744 \uc120\uc5b8\ud558\uace0 \ub098\uba74 \uac12\uc744 \ubcc0\ud615\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. void main () { Idol blackPink = Idol ( \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); // blackPink.name = \"\uc544\uc774\uc720\"; // error \ubc1c\uc0dd blackPink . sayHello (); blackPink . introduce (); } class Idol { // imutable \ud504\ub85c\uadf8\ub798\ubc0d : \uc120\uc5b8\ud55c \uc774\ud6c4\uc5d0 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. final String name ; List < String > members ; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } Idol ( this . name , this . members ); } immutable \ud504\ub85c\uadf8\ub798\ubc0d: const void main () { Idol blackPink = const Idol ( // const\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 \uac12\uc744 \uc120\uc5b8\ud558\ub294 \ubd80\ubd84\uc5d0\ub3c4 const\ub85c \ubcc0\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc918\uc57c \ud568 \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); // blackPink.name = \"\uc544\uc774\uc720\"; // error \ubc1c\uc0dd blackPink . sayHello (); blackPink . introduce (); } class Idol { final String name ; final List < String > members ; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } // imutable \ud504\ub85c\uadf8\ub798\ubc0d : \uc120\uc5b8\ud55c \uc774\ud6c4\uc5d0 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. const Idol ( this . name , this . members ); } const immutable class\uc758 \ud2b9\uc218\uc131 \uac19\uc740 class\uc758 \uc778\uc2a4\ud134\uc2a4 \ud504\ub85c\ud37c\ud2f0\ub97c \ube44\uad50\ud560 \ub54c const\ub85c \uc120\uc5b8\ud55c class \uc778\uc2a4\ud134\uc2a4\ub07c\ub9ac\ub294 \uac12\uc774 \uac19\uc73c\uba74 \uac19\ub2e4\uace0 return \ud574\uc90c. void main () { Idol blackPink = Idol ( // const\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 \uac12\uc744 \uc120\uc5b8\ud558\ub294 \ubd80\ubd84\uc5d0\ub3c4 const\ub85c \ubcc0\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc918\uc57c \ud568 \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); Idol blackPink2 = Idol ( \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); Idol bigBang = const Idol ( \"\ube45\ubc45\" , [ 'GD' , 'TOP' , '\ub300\uc131' , '\ud0dc\uc591' , '\ud328\ubc30' ], ); Idol bigBang2 = const Idol ( \"\ube45\ubc45\" , [ 'GD' , 'TOP' , '\ub300\uc131' , '\ud0dc\uc591' , '\ud328\ubc30' ], ); print ( blackPink == blackPink2 ); // false \ucd9c\ub825 print ( bigBang == bigBang2 ); // true \ucd9c\ub825 (const\ub85c \uc120\uc5b8\ud55c class\ub294 \uac12\uc744 \ube44\uad50\ud558\uba74 \uac19\ub2e4\uace0 return\ud574\uc90c) } class Idol { final String name ; final List < String > members ; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } // imutable \ud504\ub85c\uadf8\ub798\ubc0d : \uc120\uc5b8\ud55c \uc774\ud6c4\uc5d0 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. const Idol ( this . name , this . members ); } Getter\uc640 Setter \uc790\ub8cc\ud615 getter getterName { code } \uc640 \uac19\uc740 \ud615\ud0dc\ub85c \uc0ac\uc6a9\ud558\uba70, setter\ub294 \uc798 \uc548\uc500. \ub370\uc774\ud130\ub97c \uac00\uc838\uc640\uc11c { code }\ub97c \uc218\ud589\ud574\uc90c. Getter\uc640 Setter Inheritance (\uc0c1\uc18d) Ingeritance Override \ubd80\ubaa8 \ud074\ub798\uc2a4\uc5d0 \uc788\ub294 method\uc640 \uac19\uc740 \uc2dc\uadf8\ub2c8\ucc98\uc758 \ud568\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc11c \ub36e\uc5b4\uc4f0\uae30(override)\ud574\uc904 \uc218 \uc788\uc74c. Override static class \ub0b4\ubd80\uc758 method\ub098 property\uc5d0 static\uc744 \ubd99\uc5ec\uc11c \uc0ac\uc6a9\ud558\uba70, \uc774\ub294 instance\uac00 \uc544\ub2cc class\uc5d0 \uac12\uc774 \uadc0\uc18d\ub428. \uc989, \ud574\ub2f9 class\uc5d0 static method\ub098 property\ub97c \uadc0\uc18d\ud574\uc8fc\uba74 \ud574\ub2f9 class\ub97c \uc0c1\uc18d\ubc1b\uc740 \ubaa8\ub4e0 \uc790\uc2dd class \ub294 \ud574\ub2f9 static\uc758 \uac12\uc744 \uadc0\uc18d\ubc1b\uc74c. static Interface\uc640 abstract \uc5b4\ub5a4 \ud2b9\uc218\ud55c \uad6c\uc870\ub97c \uac15\uc81c\ud558\uae30 \uc704\ud574\uc11c \uc0ac\uc6a9\ud558\uba70 swift\uc758 protocol\uc774\ub791 \ube44\uc2b7\ud568. Interface \uc55e\uc5d0 abstract \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud574\ub2f9 Interface\ub97c \ud1b5\ud574\uc11c instance\ub97c \uc0dd\uc131\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. Interface\uc640 abstract Generic (\ud0c0\uc785\ucd94\ub860) class\uc5d0 \ud0c0\uc785\uc744 \uc678\ubd80\uc5d0\uc11c \ubc1b\uc744 \ub54c \uc0ac\uc6a9\ud558\uba70 \uc678\ubd80\uc5d0\uc11c \ud0c0\uc785\uc744 \uc9c0\uc815\ud574\uc90c. generic \ubcc0\uc218 \uc120\uc5b8 Private \ubcc0\uc218 private \ubcc0\uc218\ub294 \ud574\ub2f9 \ud30c\uc77c \ubc16\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \ubcc0\uc218\ub97c \ub73b\ud568. \ubcc0\uc218/\ud568\uc218/Class \ub4f1\uc758 \uc774\ub984 \uc55e\uc5d0 (&##95;) \ucd94\uac00. \uc774 \ub54c class\ub97c \ud560\ub2f9 \ud574\uc8fc\uac70\ub098 \ubcc0\uc218\ub97c \ucc38\uc870\ud560 \ub54c\ub3c4 \uc774\ub984 \uc55e\uc5d0 (&##95;)\ub97c \ubd99\uc5ec\uc918\uc57c \ud568. class _Idol { final String name ; final List < String > memebers ; _Idol ( this . name , this . members ); }","title":"\uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#_1","text":"\uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d(OOP, Object Oriented Programming)\uc774\ub780? Class\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud574\uc11c \ud560\ub2f9\uc744 \ud574\uc8fc\uba74 \ud574\ub2f9\ud558\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \ubb34\ud55c\ud788 \uc0dd\uc131\uac00\ub2a5.","title":"\uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#oop","text":"class\ub97c \uae30\ubcf8\uc801\uc73c\ub85c \uc0dd\uc131\ud574\uc8fc\uba74 hashCode, runtimeType, toString, noSuchMethod \ub4f1\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ud560\ub2f9\uc774 \ub428. \uc774\ub294 class\uac00 \uc0dd\uc131\ub420 \ub54c \ubaa8\ub4e0 class\ub294 \ucd5c\uc0c1\uc704 \ubd80\ubaa8 class\ub85c Object\ub97c \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38 . \uadf8\ub9ac\uace0 \uc774 Object\uc758 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\uc774 \ub418\ub294 \uae30\ub2a5\uc774 \uc800 4\uac00\uc9c0 \uae30\ub2a5\uc784. void main () { Test test = Test (); // \uae30\ubcf8\uc801\uc73c\ub85c \ud560\ub2f9\ub418\uc5b4 \uc788\uc74c test . hashCode ; test . runtimeType ; test . toString (); test . noSuchMethod ( invocation ); } class test entends Object {}","title":"\uac1d\uccb4\uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d(OOP)\uc778 \uc774\uc720"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#class","text":"void main () { Idol blackPink = Idol ( \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); blackPink . sayHello (); blackPink . introduce (); Idol bigBang = Idol ( // \uc77c\ubc18\uc801\uc778 \uc0dd\uc131\uc790 \"\ube45\ubc45\" , [ \"\uad8c\uc9c0\uc6a9\" , \"\ucd5c\uc2b9\ud604\" , \"\ud328\ubc30\" , \"\ub3d9\uc601\ubc30\" , \"\uac15\ub300\uc131\" ], ); Idol namedBigBang = Idol . fromList ( // nammed \uc0dd\uc131\uc790 \ud560\ub2f9 [ [ \"\uad8c\uc9c0\uc6a9\" , \"\ucd5c\uc2b9\ud604\" , \"\ud328\ubc30\" , \"\ub3d9\uc601\ubc30\" , \"\uac15\ub300\uc131\" ], \"\ube45\ubc45\" , ] ); bigBang . sayHello (); bigBang . introduce (); namedBigBang . sayHello (); namedBigBang . introduce (); } class Idol { String name = \"\ube14\ub799\ud551\ud06c\" ; List < String > members = [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ]; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } /* constructor (\uc0dd\uc131\uc790) this\ub294 \ud604\uc7ac class\uc758 \ud504\ub85c\ud37c\ud2f0\ub97c \ub098\ud0c0\ub0c4 */ // Idol(String name, List<String> members): this.name = name, this.members = members; Idol ( this . name , this . members ); // named constructor Idol . fromList ( List values ) : this . members = values [ 0 ], this . name = values [ 1 ]; }","title":"class \uae30\ubcf8\ud615"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#immutable-final","text":"\ud55c \ubc88 \uac12\uc744 \uc120\uc5b8\ud558\uace0 \ub098\uba74 \uac12\uc744 \ubcc0\ud615\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. void main () { Idol blackPink = Idol ( \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); // blackPink.name = \"\uc544\uc774\uc720\"; // error \ubc1c\uc0dd blackPink . sayHello (); blackPink . introduce (); } class Idol { // imutable \ud504\ub85c\uadf8\ub798\ubc0d : \uc120\uc5b8\ud55c \uc774\ud6c4\uc5d0 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. final String name ; List < String > members ; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } Idol ( this . name , this . members ); }","title":"immutable \ud504\ub85c\uadf8\ub798\ubc0d: final"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#immutable-const","text":"void main () { Idol blackPink = const Idol ( // const\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 \uac12\uc744 \uc120\uc5b8\ud558\ub294 \ubd80\ubd84\uc5d0\ub3c4 const\ub85c \ubcc0\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc918\uc57c \ud568 \"\ube14\ub799\ud551\ud06c\" , [ '\uc81c\ub2c8' , '\uc9c0\uc218' , '\ub9ac\uc0ac' , '\ub85c\uc81c' ], ); // blackPink.name = \"\uc544\uc774\uc720\"; // error \ubc1c\uc0dd blackPink . sayHello (); blackPink . introduce (); } class Idol { final String name ; final List < String > members ; void sayHello () { print ( \"\uc548\ub155\ud558\uc138\uc694. ${ this . name } \uc785\ub2c8\ub2e4.\" ); } void introduce () { print ( '\uc800\ud76c \uba64\ubc84\ub294 ${ this . members } \uac00 \uc788\uc2b5\ub2c8\ub2e4.' ); } // imutable \ud504\ub85c\uadf8\ub798\ubc0d : \uc120\uc5b8\ud55c \uc774\ud6c4\uc5d0 \uac12\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. const Idol ( this . name , this . members ); }","title":"immutable \ud504\ub85c\uadf8\ub798\ubc0d: const"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#getter-setter","text":"\uc790\ub8cc\ud615 getter getterName { code } \uc640 \uac19\uc740 \ud615\ud0dc\ub85c \uc0ac\uc6a9\ud558\uba70, setter\ub294 \uc798 \uc548\uc500. \ub370\uc774\ud130\ub97c \uac00\uc838\uc640\uc11c { code }\ub97c \uc218\ud589\ud574\uc90c. Getter\uc640 Setter","title":"Getter\uc640 Setter"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#inheritance","text":"Ingeritance","title":"Inheritance (\uc0c1\uc18d)"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#override","text":"\ubd80\ubaa8 \ud074\ub798\uc2a4\uc5d0 \uc788\ub294 method\uc640 \uac19\uc740 \uc2dc\uadf8\ub2c8\ucc98\uc758 \ud568\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc11c \ub36e\uc5b4\uc4f0\uae30(override)\ud574\uc904 \uc218 \uc788\uc74c. Override","title":"Override"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#static","text":"class \ub0b4\ubd80\uc758 method\ub098 property\uc5d0 static\uc744 \ubd99\uc5ec\uc11c \uc0ac\uc6a9\ud558\uba70, \uc774\ub294 instance\uac00 \uc544\ub2cc class\uc5d0 \uac12\uc774 \uadc0\uc18d\ub428. \uc989, \ud574\ub2f9 class\uc5d0 static method\ub098 property\ub97c \uadc0\uc18d\ud574\uc8fc\uba74 \ud574\ub2f9 class\ub97c \uc0c1\uc18d\ubc1b\uc740 \ubaa8\ub4e0 \uc790\uc2dd class \ub294 \ud574\ub2f9 static\uc758 \uac12\uc744 \uadc0\uc18d\ubc1b\uc74c. static","title":"static"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#interface-abstract","text":"\uc5b4\ub5a4 \ud2b9\uc218\ud55c \uad6c\uc870\ub97c \uac15\uc81c\ud558\uae30 \uc704\ud574\uc11c \uc0ac\uc6a9\ud558\uba70 swift\uc758 protocol\uc774\ub791 \ube44\uc2b7\ud568. Interface \uc55e\uc5d0 abstract \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud574\ub2f9 Interface\ub97c \ud1b5\ud574\uc11c instance\ub97c \uc0dd\uc131\ud560 \uc218 \uc5c6\ub3c4\ub85d \ud574\uc90c. Interface\uc640 abstract","title":"Interface\uc640 abstract"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#generic","text":"class\uc5d0 \ud0c0\uc785\uc744 \uc678\ubd80\uc5d0\uc11c \ubc1b\uc744 \ub54c \uc0ac\uc6a9\ud558\uba70 \uc678\ubd80\uc5d0\uc11c \ud0c0\uc785\uc744 \uc9c0\uc815\ud574\uc90c. generic","title":"Generic (\ud0c0\uc785\ucd94\ub860)"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#_2","text":"","title":"\ubcc0\uc218 \uc120\uc5b8"},{"location":"ProgrammingLanguage/flutter/dartGrammar/oopProgramming/#private","text":"private \ubcc0\uc218\ub294 \ud574\ub2f9 \ud30c\uc77c \ubc16\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \ubcc0\uc218\ub97c \ub73b\ud568. \ubcc0\uc218/\ud568\uc218/Class \ub4f1\uc758 \uc774\ub984 \uc55e\uc5d0 (&##95;) \ucd94\uac00. \uc774 \ub54c class\ub97c \ud560\ub2f9 \ud574\uc8fc\uac70\ub098 \ubcc0\uc218\ub97c \ucc38\uc870\ud560 \ub54c\ub3c4 \uc774\ub984 \uc55e\uc5d0 (&##95;)\ub97c \ubd99\uc5ec\uc918\uc57c \ud568. class _Idol { final String name ; final List < String > memebers ; _Idol ( this . name , this . members ); }","title":"Private \ubcc0\uc218"},{"location":"ProgrammingLanguage/flutter/flutterPackages/web_view/","text":"Error Fix web_view Warning: The plugin webview_flutter_android requires Android SDK version 32. \ub77c\ub294 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud568. \uc5d0\ub7ec \uba54\uc2dc\uc9c0\ub97c \uc798 \uc77d\uc5b4\ubcf4\ub2c8 compileSdkVersion\uc744 32\ub85c \ubc14\uafb8\ub77c\ub294 \uac83 \uac19\uc544\uc11c \uadf8\ub807\uac8c \ud574\uc90c. \uadf8\ub9ac\uace0 webview_flutter READEME\uc5d0\uc11c minSdkVersion\uc744 19\ub85c \ubc14\uafb8\ub77c\uace0 \ub418\uc5b4 \uc788\ub294\ub370 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub418\uc5b4 \uc788\ub294 Version\uc744 \uc548 \uc9c0\uc6cc\uc8fc\ub2c8 error\uac00 \ubc1c\uc0dd\ud558\ub294 \uac83\uc774\uc5c8\uc74c.","title":"Web View"},{"location":"ProgrammingLanguage/flutter/flutterPackages/web_view/#error-fix","text":"","title":"Error Fix"},{"location":"ProgrammingLanguage/flutter/flutterPackages/web_view/#web_view","text":"Warning: The plugin webview_flutter_android requires Android SDK version 32. \ub77c\ub294 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud568. \uc5d0\ub7ec \uba54\uc2dc\uc9c0\ub97c \uc798 \uc77d\uc5b4\ubcf4\ub2c8 compileSdkVersion\uc744 32\ub85c \ubc14\uafb8\ub77c\ub294 \uac83 \uac19\uc544\uc11c \uadf8\ub807\uac8c \ud574\uc90c. \uadf8\ub9ac\uace0 webview_flutter READEME\uc5d0\uc11c minSdkVersion\uc744 19\ub85c \ubc14\uafb8\ub77c\uace0 \ub418\uc5b4 \uc788\ub294\ub370 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub418\uc5b4 \uc788\ub294 Version\uc744 \uc548 \uc9c0\uc6cc\uc8fc\ub2c8 error\uac00 \ubc1c\uc0dd\ud558\ub294 \uac83\uc774\uc5c8\uc74c.","title":"web_view"},{"location":"ProgrammingLanguage/flutter/flutterTheory/widget/","text":"Widget Tree\ub780? Widget\ub4e4\uc758 \ubd80\ubaa8, \uc790\uc2dd \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294\uac78 Widget Tree\ub77c\uace0 \ud568. Widget \uc774\ub860 Widget\uc740 \ubaa8\ub450 \"\ubd88\ubcc0\"\uc758 \ubc95\uce59\uc744 \uac16\uace0 \uc788\uc74c. \ud558\uc9c0\ub9cc \uc704\uc82f\uc758 \uac12\uc744 \ubcc0\uacbd\ud574\uc57c\ud560 \ub54c\uac00 \uc788\uc74c. \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \uae30\uc874 \uc704\uc82f\uc744 \uc0ad\uc81c\ud574\ubc84\ub9ac\uace0 \uc644\uc804 \uc0c8\ub85c\uc6b4 \uc704\uc82f\uc73c\ub85c \ub300\uccb4\ud568. StatelessWidget\uc758 \ub77c\uc774\ud504 \uc0ac\uc774\ud074 Constructor \ub85c \uc0dd\uc131\uc774\ub418\uace0 \uc0dd\uc131\uc774 \ub418\uc790\ub9c8\uc790 build \ud568\uc218\uac00 \uc2e4\ud589\ub428. \uc774\uc804 Container \uc608\uc81c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \uc0c8\ub85c\uc6b4 \uc704\uc82f\uc744 \ub9cc\ub4e4\uc5b4\ubc84\ub9bc. \ud558\ub098\uc758 StatelessWidhget\uc740 \ub77c\uc774\ud504 \uc0ac\uc774\ud074\ub3d9\uc548 \ub2e8 \ud55c\ubc88\ub9cc build \ud568\uc218\ub97c \uc2e4\ud589\ud568. (\uc989, \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \ud604\uc7ac widget\uc744 \uc0ad\uc81c\ud558\uace0 \uc0c8\ub85c\uc6b4 widget\uc744 \uc0dd\uc131.) StatefulWidget\uc758 \ub77c\uc774\ud504 \uc0ac\uc774\ud074 \uc0c1\ud0dc\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 Widget. build \ud568\uc218\ub97c \uc5ec\ub7ec\ubc88 \ubc14\uafd4\uc918\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 StatefullWidget\uacfc State class\ub85c \ub098\ub258\uc5c8\uc74c. \ud30c\ub77c\ubbf8\ud130\uac00 \ubc14\ub00c\uc5c8\uc744 \ub54c \ub77c\uc774\ud504 \uc0ac\uc774\ud074 \uc6d0\ub798 \uc788\ub358 State\ub97c \uc7ac\ud65c\uc6a9 \ud568. setState\ub97c \uc2e4\ud589\ud588\uc744 \ub54c \ub77c\uc774\ud504 \uc0ac\uc774\ud074 Parameter\ub97c \ubcc0\uacbd\ud558\uba74\uc11c \uc704\uc82f\uc744 \ud1b5\ud558\uc9c0 \uc54a\uace0 State \uc548\uc5d0\uc11c \uc9c1\uc811 \uc2e4\ud589\ud568.","title":"Widget: Stateful Widget"},{"location":"ProgrammingLanguage/flutter/flutterTheory/widget/#widget-tree","text":"Widget\ub4e4\uc758 \ubd80\ubaa8, \uc790\uc2dd \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\ub294\uac78 Widget Tree\ub77c\uace0 \ud568.","title":"Widget Tree\ub780?"},{"location":"ProgrammingLanguage/flutter/flutterTheory/widget/#widget","text":"Widget\uc740 \ubaa8\ub450 \"\ubd88\ubcc0\"\uc758 \ubc95\uce59\uc744 \uac16\uace0 \uc788\uc74c. \ud558\uc9c0\ub9cc \uc704\uc82f\uc758 \uac12\uc744 \ubcc0\uacbd\ud574\uc57c\ud560 \ub54c\uac00 \uc788\uc74c. \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \uae30\uc874 \uc704\uc82f\uc744 \uc0ad\uc81c\ud574\ubc84\ub9ac\uace0 \uc644\uc804 \uc0c8\ub85c\uc6b4 \uc704\uc82f\uc73c\ub85c \ub300\uccb4\ud568.","title":"Widget \uc774\ub860"},{"location":"ProgrammingLanguage/flutter/flutterTheory/widget/#statelesswidget","text":"Constructor \ub85c \uc0dd\uc131\uc774\ub418\uace0 \uc0dd\uc131\uc774 \ub418\uc790\ub9c8\uc790 build \ud568\uc218\uac00 \uc2e4\ud589\ub428. \uc774\uc804 Container \uc608\uc81c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \uc0c8\ub85c\uc6b4 \uc704\uc82f\uc744 \ub9cc\ub4e4\uc5b4\ubc84\ub9bc. \ud558\ub098\uc758 StatelessWidhget\uc740 \ub77c\uc774\ud504 \uc0ac\uc774\ud074\ub3d9\uc548 \ub2e8 \ud55c\ubc88\ub9cc build \ud568\uc218\ub97c \uc2e4\ud589\ud568. (\uc989, \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uba74 \ud604\uc7ac widget\uc744 \uc0ad\uc81c\ud558\uace0 \uc0c8\ub85c\uc6b4 widget\uc744 \uc0dd\uc131.)","title":"StatelessWidget\uc758 \ub77c\uc774\ud504 \uc0ac\uc774\ud074"},{"location":"ProgrammingLanguage/flutter/flutterTheory/widget/#statefulwidget","text":"\uc0c1\ud0dc\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 Widget. build \ud568\uc218\ub97c \uc5ec\ub7ec\ubc88 \ubc14\uafd4\uc918\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 StatefullWidget\uacfc State class\ub85c \ub098\ub258\uc5c8\uc74c.","title":"StatefulWidget\uc758 \ub77c\uc774\ud504 \uc0ac\uc774\ud074"},{"location":"ProgrammingLanguage/flutter/flutterTheory/widget/#_1","text":"\uc6d0\ub798 \uc788\ub358 State\ub97c \uc7ac\ud65c\uc6a9 \ud568.","title":"\ud30c\ub77c\ubbf8\ud130\uac00 \ubc14\ub00c\uc5c8\uc744 \ub54c \ub77c\uc774\ud504 \uc0ac\uc774\ud074"},{"location":"ProgrammingLanguage/flutter/flutterTheory/widget/#setstate","text":"Parameter\ub97c \ubcc0\uacbd\ud558\uba74\uc11c \uc704\uc82f\uc744 \ud1b5\ud558\uc9c0 \uc54a\uace0 State \uc548\uc5d0\uc11c \uc9c1\uc811 \uc2e4\ud589\ud568.","title":"setState\ub97c \uc2e4\ud589\ud588\uc744 \ub54c \ub77c\uc774\ud504 \uc0ac\uc774\ud074"}]}